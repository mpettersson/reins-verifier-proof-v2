FMaps
R2123:2128 Coqlib <> <> lib
modtype 2212:2215 <> TREE
var 2229:2231 TREE elt
var 2251:2256 TREE elt_eq
R2278:2278 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2284:2288 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2295:2295 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2280:2282 Coq.Init.Logic <> :type_scope:x_'='_x not
R2290:2293 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2272:2274 Maps TREE elt defax
R2272:2274 Maps TREE elt defax
var 2309:2309 TREE t
var 2337:2338 TREE eq
R2431:2431 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2437:2441 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2448:2448 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2433:2435 Coq.Init.Logic <> :type_scope:x_'='_x not
R2443:2446 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2425:2425 Maps TREE t defax
R2425:2425 Maps TREE t defax
R2377:2377 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2381:2385 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2390:2390 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2379:2379 Coq.Init.Logic <> :type_scope:x_'='_x not
R2387:2388 Coq.Init.Logic <> :type_scope:x_'<>'_x not
var 2462:2466 TREE empty
R2487:2487 Maps TREE t defax
var 2503:2505 TREE get
R2540:2545 Coq.Init.Datatypes <> option ind
R2533:2533 Maps TREE t defax
R2526:2528 Maps TREE elt defax
var 2561:2563 TREE set
R2603:2603 Maps TREE t defax
R2596:2596 Maps TREE t defax
R2584:2586 Maps TREE elt defax
var 2619:2624 TREE remove
R2659:2659 Maps TREE t defax
R2652:2652 Maps TREE t defax
R2645:2647 Maps TREE elt defax
var 2795:2800 TREE gempty
R2849:2851 Coq.Init.Logic <> :type_scope:x_'='_x not
R2834:2836 Maps TREE get defax
R2841:2845 Maps TREE empty defax
R2852:2855 Coq.Init.Datatypes <> None constr
R2828:2830 Maps TREE elt defax
var 2871:2873 TREE gss
R2940:2942 Coq.Init.Logic <> :type_scope:x_'='_x not
R2923:2925 Maps TREE get defax
R2930:2932 Maps TREE set defax
R2943:2946 Coq.Init.Datatypes <> Some constr
R2917:2917 Maps TREE t defax
R2901:2903 Maps TREE elt defax
var 2964:2966 TREE gso
R3049:3051 Coq.Init.Logic <> :type_scope:x_'='_x not
R3032:3034 Maps TREE get defax
R3039:3041 Maps TREE set defax
R3052:3054 Maps TREE get defax
R3023:3026 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3012:3012 Maps TREE t defax
R2996:2998 Maps TREE elt defax
R2996:2998 Maps TREE elt defax
var 3074:3079 TREE gsspec
R3152:3154 Coq.Init.Logic <> :type_scope:x_'='_x not
R3135:3137 Maps TREE get defax
R3142:3144 Maps TREE set defax
R3158:3163 Maps TREE elt_eq defax
R3186:3188 Maps TREE get defax
R3174:3177 Coq.Init.Datatypes <> Some constr
R3125:3125 Maps TREE t defax
R3109:3111 Maps TREE elt defax
R3109:3111 Maps TREE elt defax
var 3208:3214 TREE gsident
R3297:3299 Coq.Init.Logic <> :type_scope:x_'='_x not
R3288:3290 Maps TREE set defax
R3275:3277 Coq.Init.Logic <> :type_scope:x_'='_x not
R3268:3270 Maps TREE get defax
R3278:3281 Coq.Init.Datatypes <> Some constr
R3251:3251 Maps TREE t defax
R3242:3244 Maps TREE elt defax
var 3509:3511 TREE grs
R3572:3574 Coq.Init.Logic <> :type_scope:x_'='_x not
R3554:3556 Maps TREE get defax
R3561:3566 Maps TREE remove defax
R3575:3578 Coq.Init.Datatypes <> None constr
R3548:3548 Maps TREE t defax
R3539:3541 Maps TREE elt defax
var 3594:3596 TREE gro
R3673:3675 Coq.Init.Logic <> :type_scope:x_'='_x not
R3655:3657 Maps TREE get defax
R3662:3667 Maps TREE remove defax
R3676:3678 Maps TREE get defax
R3646:3649 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3635:3635 Maps TREE t defax
R3626:3628 Maps TREE elt defax
R3626:3628 Maps TREE elt defax
var 3698:3703 TREE grspec
R3770:3772 Coq.Init.Logic <> :type_scope:x_'='_x not
R3752:3754 Maps TREE get defax
R3759:3764 Maps TREE remove defax
R3776:3781 Maps TREE elt_eq defax
R3802:3804 Maps TREE get defax
R3792:3795 Coq.Init.Datatypes <> None constr
R3742:3742 Maps TREE t defax
R3733:3735 Maps TREE elt defax
R3733:3735 Maps TREE elt defax
var 3868:3870 TREE beq
R3925:3928 Coq.Init.Datatypes <> bool ind
R3918:3918 Maps TREE t defax
R3911:3911 Maps TREE t defax
R3902:3905 Coq.Init.Datatypes <> bool ind
var 3944:3954 TREE beq_correct
R4161:4163 Maps TREE get defax
R4151:4153 Maps TREE get defax
R4181:4184 Coq.Init.Datatypes <> None constr
R4187:4190 Coq.Init.Datatypes <> None constr
R4195:4198 Coq.Init.Logic <> True ind
R4206:4209 Coq.Init.Datatypes <> Some constr
R4215:4218 Coq.Init.Datatypes <> Some constr
R4248:4252 Coq.Init.Logic <> False ind
R4135:4137 Maps TREE elt defax
R4109:4111 Coq.Init.Logic <> :type_scope:x_'='_x not
R4096:4098 Maps TREE beq defax
R4112:4115 Coq.Init.Datatypes <> true constr
R4090:4090 Maps TREE t defax
R4090:4090 Maps TREE t defax
R4050:4052 Coq.Init.Logic <> :type_scope:x_'='_x not
R4053:4056 Coq.Init.Datatypes <> true constr
R4014:4017 Coq.Init.Datatypes <> bool ind
var 4327:4329 TREE map
R4382:4382 Maps TREE t defax
R4375:4375 Maps TREE t defax
R4357:4359 Maps TREE elt defax
var 4400:4403 TREE gmap
R4486:4488 Coq.Init.Logic <> :type_scope:x_'='_x not
R4471:4473 Maps TREE get defax
R4478:4480 Maps TREE map defax
R4489:4498 Coqlib <> option_map def
R4507:4509 Maps TREE get defax
R4461:4461 Maps TREE t defax
R4452:4454 Maps TREE elt defax
R4433:4435 Maps TREE elt defax
var 4593:4599 TREE combine
R4676:4676 Maps TREE t defax
R4669:4669 Maps TREE t defax
R4662:4662 Maps TREE t defax
R4649:4654 Coq.Init.Datatypes <> option ind
R4637:4642 Coq.Init.Datatypes <> option ind
R4625:4630 Coq.Init.Datatypes <> option ind
var 4694:4701 TREE gcombine
R4851:4853 Coq.Init.Logic <> :type_scope:x_'='_x not
R4828:4830 Maps TREE get defax
R4835:4841 Maps TREE combine defax
R4868:4870 Maps TREE get defax
R4857:4859 Maps TREE get defax
R4818:4820 Maps TREE elt defax
R4809:4809 Maps TREE t defax
R4809:4809 Maps TREE t defax
R4779:4781 Coq.Init.Logic <> :type_scope:x_'='_x not
R4775:4778 Coq.Init.Datatypes <> None constr
R4770:4773 Coq.Init.Datatypes <> None constr
R4782:4785 Coq.Init.Datatypes <> None constr
R4753:4758 Coq.Init.Datatypes <> option ind
R4741:4746 Coq.Init.Datatypes <> option ind
R4729:4734 Coq.Init.Datatypes <> option ind
var 4892:4905 TREE combine_commut
R5061:5063 Coq.Init.Logic <> :type_scope:x_'='_x not
R5046:5052 Maps TREE combine defax
R5064:5070 Maps TREE combine defax
R5036:5036 Maps TREE t defax
R5036:5036 Maps TREE t defax
R5004:5006 Coq.Init.Logic <> :type_scope:x_'='_x not
R4988:4993 Coq.Init.Datatypes <> option ind
R4988:4993 Coq.Init.Datatypes <> option ind
R4959:4964 Coq.Init.Datatypes <> option ind
R4947:4952 Coq.Init.Datatypes <> option ind
R4935:4940 Coq.Init.Datatypes <> option ind
R4959:4964 Coq.Init.Datatypes <> option ind
R4947:4952 Coq.Init.Datatypes <> option ind
R4935:4940 Coq.Init.Datatypes <> option ind
var 5138:5145 TREE elements
R5177:5180 Coq.Init.Datatypes <> list ind
R5186:5188 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5183:5185 Maps TREE elt defax
R5170:5170 Maps TREE t defax
var 5206:5221 TREE elements_correct
R5295:5296 Coq.Lists.List <> In def
R5306:5313 Maps TREE elements defax
R5298:5298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5300:5301 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5303:5303 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5282:5284 Coq.Init.Logic <> :type_scope:x_'='_x not
R5275:5277 Maps TREE get defax
R5285:5288 Coq.Init.Datatypes <> Some constr
R5258:5260 Maps TREE elt defax
R5249:5249 Maps TREE t defax
var 5332:5348 TREE elements_complete
R5435:5437 Coq.Init.Logic <> :type_scope:x_'='_x not
R5428:5430 Maps TREE get defax
R5438:5441 Coq.Init.Datatypes <> Some constr
R5402:5403 Coq.Lists.List <> In def
R5413:5420 Maps TREE elements defax
R5405:5405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5407:5408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5410:5410 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5385:5387 Maps TREE elt defax
R5376:5376 Maps TREE t defax
var 5459:5479 TREE elements_keys_norepet
R5518:5529 Coqlib <> list_norepet ind
R5532:5539 Coq.Lists.List <> map def
R5555:5562 Maps TREE elements defax
R5543:5545 Coq.Init.Datatypes <> fst def
R5547:5549 Maps TREE elt defax
R5507:5507 Maps TREE t defax
var 5638:5641 TREE fold
R5692:5692 Maps TREE t defax
R5674:5676 Maps TREE elt defax
var 5720:5728 TREE fold_spec
R5809:5815 Coq.Init.Logic <> :type_scope:x_'='_x not
R5799:5802 Maps TREE fold defax
R5816:5829 Coq.Lists.List <> fold_left def
R5865:5872 Maps TREE elements defax
R5856:5858 Coq.Init.Datatypes <> snd def
R5848:5850 Coq.Init.Datatypes <> fst def
R5789:5789 Maps TREE t defax
R5763:5765 Maps TREE elt defax
R5884:5887 Maps <> <> modtype
modtype 5945:5947 <> MAP
var 5961:5963 MAP elt
var 5983:5988 MAP elt_eq
R6010:6010 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6016:6020 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6027:6027 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6012:6014 Coq.Init.Logic <> :type_scope:x_'='_x not
R6022:6025 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6004:6006 Maps MAP elt defax
R6004:6006 Maps MAP elt defax
var 6041:6041 MAP t
var 6069:6072 MAP init
R6098:6098 Maps MAP t defax
var 6114:6116 MAP get
R6144:6144 Maps MAP t defax
R6137:6139 Maps MAP elt defax
var 6165:6167 MAP set
R6207:6207 Maps MAP t defax
R6200:6200 Maps MAP t defax
R6188:6190 Maps MAP elt defax
var 6225:6226 MAP gi
R6281:6283 Coq.Init.Logic <> :type_scope:x_'='_x not
R6267:6269 Maps MAP get defax
R6274:6277 Maps MAP init defax
R6254:6256 Maps MAP elt defax
var 6300:6302 MAP gss
R6369:6371 Coq.Init.Logic <> :type_scope:x_'='_x not
R6352:6354 Maps MAP get defax
R6359:6361 Maps MAP set defax
R6346:6346 Maps MAP t defax
R6330:6332 Maps MAP elt defax
var 6388:6390 MAP gso
R6473:6475 Coq.Init.Logic <> :type_scope:x_'='_x not
R6456:6458 Maps MAP get defax
R6463:6465 Maps MAP set defax
R6476:6478 Maps MAP get defax
R6447:6450 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6436:6436 Maps MAP t defax
R6420:6422 Maps MAP elt defax
R6420:6422 Maps MAP elt defax
var 6498:6503 MAP gsspec
R6576:6578 Coq.Init.Logic <> :type_scope:x_'='_x not
R6559:6561 Maps MAP get defax
R6566:6568 Maps MAP set defax
R6582:6587 Maps MAP elt_eq defax
R6605:6607 Maps MAP get defax
R6549:6549 Maps MAP t defax
R6533:6535 Maps MAP elt defax
R6533:6535 Maps MAP elt defax
var 6627:6633 MAP gsident
R6703:6705 Coq.Init.Logic <> :type_scope:x_'='_x not
R6678:6680 Maps MAP get defax
R6685:6687 Maps MAP set defax
R6692:6694 Maps MAP get defax
R6706:6708 Maps MAP get defax
R6672:6672 Maps MAP t defax
R6663:6665 Maps MAP elt defax
R6663:6665 Maps MAP elt defax
var 6726:6728 MAP map
R6770:6770 Maps MAP t defax
R6763:6763 Maps MAP t defax
var 6788:6791 MAP gmap
R6867:6869 Coq.Init.Logic <> :type_scope:x_'='_x not
R6852:6854 Maps MAP get defax
R6859:6861 Maps MAP map defax
R6872:6874 Maps MAP get defax
R6842:6842 Maps MAP t defax
R6833:6835 Maps MAP elt defax
R6886:6888 Maps <> <> modtype
R6966:6969 Maps <> <> mod
mod 6957:6961 <> PTree
def 6985:6987 PTree elt
R6992:6999 Coq.NArith.BinPos <> positive ind
def 7015:7020 PTree elt_eq
R7025:7027 Coqlib <> peq def
ind 7043:7046 PTree tree
constr 7075:7078 PTree Leaf
constr 7095:7098 PTree Node
R7082:7085 Maps <> tree ind
R7134:7137 Maps <> tree ind
R7124:7127 Maps <> tree ind
R7112:7117 Coq.Init.Datatypes <> option ind
R7102:7105 Maps <> tree ind
R7166:7169 Maps PTree Leaf constr
R7197:7200 Maps PTree Node constr
def 7221:7221 PTree t
R7226:7229 Maps PTree tree ind
prf 7243:7244 PTree eq
R7332:7332 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7338:7342 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7349:7349 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7334:7336 Coq.Init.Logic <> :type_scope:x_'='_x not
R7344:7347 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7326:7326 Maps PTree t def
R7326:7326 Maps PTree t def
R7289:7289 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7293:7297 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7302:7302 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R7291:7291 Coq.Init.Logic <> :type_scope:x_'='_x not
R7299:7300 Coq.Init.Logic <> :type_scope:x_'<>'_x not
def 7459:7463 PTree empty
R7487:7487 Maps PTree t def
R7480:7483 Maps PTree Leaf constr
def 7505:7507 PTree get
R7525:7532 Coq.NArith.BinPos <> positive ind
R7540:7540 Maps PTree t def
R7558:7563 Coq.Init.Datatypes <> option ind
R7593:7596 Maps PTree Leaf constr
R7601:7604 Coq.Init.Datatypes <> None constr
R7612:7615 Maps PTree Node constr
R7657:7658 Coq.NArith.BinPos <> xH constr
R7675:7676 Coq.NArith.BinPos <> xO constr
R7684:7686 Maps <> get def
R7703:7704 Coq.NArith.BinPos <> xI constr
R7712:7714 Maps <> get def
def 7754:7756 PTree set
R7774:7781 Coq.NArith.BinPos <> positive ind
R7797:7797 Maps PTree t def
R7815:7815 Maps PTree t def
R7845:7848 Maps PTree Leaf constr
R7884:7885 Coq.NArith.BinPos <> xH constr
R7890:7893 Maps PTree Node constr
R7909:7912 Maps PTree Leaf constr
R7901:7904 Coq.Init.Datatypes <> Some constr
R7895:7898 Maps PTree Leaf constr
R7924:7925 Coq.NArith.BinPos <> xO constr
R7933:7936 Maps PTree Node constr
R7959:7962 Maps PTree Leaf constr
R7954:7957 Coq.Init.Datatypes <> None constr
R7939:7941 Maps <> set def
R7948:7951 Maps PTree Leaf constr
R7974:7975 Coq.NArith.BinPos <> xI constr
R7983:7986 Maps PTree Node constr
R7999:8001 Maps <> set def
R8008:8011 Maps PTree Leaf constr
R7993:7996 Coq.Init.Datatypes <> None constr
R7988:7991 Maps PTree Leaf constr
R8032:8035 Maps PTree Node constr
R8077:8078 Coq.NArith.BinPos <> xH constr
R8083:8086 Maps PTree Node constr
R8091:8094 Coq.Init.Datatypes <> Some constr
R8111:8112 Coq.NArith.BinPos <> xO constr
R8120:8123 Maps PTree Node constr
R8126:8128 Maps <> set def
R8152:8153 Coq.NArith.BinPos <> xI constr
R8161:8164 Maps PTree Node constr
R8171:8173 Maps <> set def
def 8216:8221 PTree remove
R8239:8246 Coq.NArith.BinPos <> positive ind
R8254:8254 Maps PTree t def
R8272:8272 Maps PTree t def
R8302:8303 Coq.NArith.BinPos <> xH constr
R8339:8342 Maps PTree Leaf constr
R8347:8350 Maps PTree Leaf constr
R8362:8365 Maps PTree Node constr
R8367:8370 Maps PTree Leaf constr
R8374:8377 Maps PTree Leaf constr
R8382:8385 Maps PTree Leaf constr
R8397:8400 Maps PTree Node constr
R8411:8414 Maps PTree Node constr
R8418:8421 Coq.Init.Datatypes <> None constr
R8443:8444 Coq.NArith.BinPos <> xO constr
R8483:8486 Maps PTree Leaf constr
R8491:8494 Maps PTree Leaf constr
R8506:8509 Maps PTree Node constr
R8513:8516 Coq.Init.Datatypes <> None constr
R8518:8521 Maps PTree Leaf constr
R8544:8549 Maps <> remove def
R8575:8578 Maps PTree Leaf constr
R8583:8586 Maps PTree Leaf constr
R8608:8611 Maps PTree Node constr
R8621:8624 Maps PTree Leaf constr
R8616:8619 Coq.Init.Datatypes <> None constr
R8652:8655 Maps PTree Node constr
R8666:8669 Maps PTree Node constr
R8672:8677 Maps <> remove def
R8707:8708 Coq.NArith.BinPos <> xI constr
R8747:8750 Maps PTree Leaf constr
R8755:8758 Maps PTree Leaf constr
R8770:8773 Maps PTree Node constr
R8775:8778 Maps PTree Leaf constr
R8780:8783 Coq.Init.Datatypes <> None constr
R8808:8813 Maps <> remove def
R8839:8842 Maps PTree Leaf constr
R8847:8850 Maps PTree Leaf constr
R8872:8875 Maps PTree Node constr
R8882:8885 Coq.Init.Datatypes <> None constr
R8877:8880 Maps PTree Leaf constr
R8916:8919 Maps PTree Node constr
R8930:8933 Maps PTree Node constr
R8940:8945 Maps <> remove def
prf 8985:8990 PTree gempty
R9044:9046 Coq.Init.Logic <> :type_scope:x_'='_x not
R9029:9031 Maps PTree get def
R9036:9040 Maps PTree empty def
R9047:9050 Coq.Init.Datatypes <> None constr
R9018:9025 Coq.NArith.BinPos <> positive ind
prf 9110:9112 PTree gss
R9184:9186 Coq.Init.Logic <> :type_scope:x_'='_x not
R9167:9169 Maps PTree get def
R9174:9176 Maps PTree set def
R9187:9190 Coq.Init.Datatypes <> Some constr
R9161:9161 Maps PTree t def
R9140:9147 Coq.NArith.BinPos <> positive ind
prf 9264:9268 PTree gleaf
R9324:9326 Coq.Init.Logic <> :type_scope:x_'='_x not
R9306:9308 Maps PTree get def
R9320:9320 Maps PTree t def
R9313:9316 Maps PTree Leaf constr
R9327:9330 Coq.Init.Datatypes <> None constr
R9295:9302 Coq.NArith.BinPos <> positive ind
R9350:9355 Maps PTree gempty thm
R9350:9355 Maps PTree gempty thm
prf 9374:9376 PTree gso
R9464:9466 Coq.Init.Logic <> :type_scope:x_'='_x not
R9447:9449 Maps PTree get def
R9454:9456 Maps PTree set def
R9467:9469 Maps PTree get def
R9438:9441 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R9427:9427 Maps PTree t def
R9406:9413 Coq.NArith.BinPos <> positive ind
R9406:9413 Coq.NArith.BinPos <> positive ind
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
R9564:9568 Maps PTree gleaf thm
prf 9627:9632 PTree gsspec
R9710:9712 Coq.Init.Logic <> :type_scope:x_'='_x not
R9693:9695 Maps PTree get def
R9700:9702 Maps PTree set def
R9716:9718 Coqlib <> peq def
R9741:9743 Maps PTree get def
R9729:9732 Coq.Init.Datatypes <> Some constr
R9683:9683 Maps PTree t def
R9662:9669 Coq.NArith.BinPos <> positive ind
R9662:9669 Coq.NArith.BinPos <> positive ind
R9785:9787 Coqlib <> peq def
R9814:9816 Maps PTree gss thm
R9826:9828 Maps PTree gso thm
R9785:9787 Coqlib <> peq def
R9814:9816 Maps PTree gss thm
R9826:9828 Maps PTree gso thm
prf 9857:9863 PTree gsident
R9951:9953 Coq.Init.Logic <> :type_scope:x_'='_x not
R9942:9944 Maps PTree set def
R9929:9931 Coq.Init.Logic <> :type_scope:x_'='_x not
R9922:9924 Maps PTree get def
R9932:9935 Coq.Init.Datatypes <> Some constr
R9905:9905 Maps PTree t def
R9891:9898 Coq.NArith.BinPos <> positive ind
prf 10134:10138 PTree rleaf
R10197:10199 Coq.Init.Logic <> :type_scope:x_'='_x not
R10176:10181 Maps PTree remove def
R10193:10193 Maps PTree t def
R10186:10189 Maps PTree Leaf constr
R10200:10203 Maps PTree Leaf constr
R10165:10172 Coq.NArith.BinPos <> positive ind
prf 10258:10260 PTree grs
R10326:10328 Coq.Init.Logic <> :type_scope:x_'='_x not
R10308:10310 Maps PTree get def
R10315:10320 Maps PTree remove def
R10329:10332 Coq.Init.Datatypes <> None constr
R10302:10302 Maps PTree t def
R10288:10295 Coq.NArith.BinPos <> positive ind
R10479:10483 Maps PTree rleaf thm
R10479:10483 Maps PTree rleaf thm
R10540:10542 Coq.Init.Logic <> :type_scope:x_'='_x not
R10508:10510 Maps PTree get def
R10515:10520 Maps PTree remove def
R10525:10528 Maps PTree Node constr
R10543:10546 Coq.Init.Datatypes <> None constr
R10540:10542 Coq.Init.Logic <> :type_scope:x_'='_x not
R10508:10510 Maps PTree get def
R10515:10520 Maps PTree remove def
R10525:10528 Maps PTree Node constr
R10543:10546 Coq.Init.Datatypes <> None constr
R10568:10573 Maps PTree remove def
R10578:10581 Maps PTree Node constr
R10568:10573 Maps PTree remove def
R10578:10581 Maps PTree Node constr
R10737:10741 Maps PTree rleaf thm
R10737:10741 Maps PTree rleaf thm
R10798:10800 Coq.Init.Logic <> :type_scope:x_'='_x not
R10766:10768 Maps PTree get def
R10773:10778 Maps PTree remove def
R10783:10786 Maps PTree Node constr
R10801:10804 Coq.Init.Datatypes <> None constr
R10798:10800 Coq.Init.Logic <> :type_scope:x_'='_x not
R10766:10768 Maps PTree get def
R10773:10778 Maps PTree remove def
R10783:10786 Maps PTree Node constr
R10801:10804 Coq.Init.Datatypes <> None constr
R10826:10831 Maps PTree remove def
R10836:10839 Maps PTree Node constr
R10826:10831 Maps PTree remove def
R10836:10839 Maps PTree Node constr
prf 10969:10971 PTree gro
R11053:11055 Coq.Init.Logic <> :type_scope:x_'='_x not
R11035:11037 Maps PTree get def
R11042:11047 Maps PTree remove def
R11056:11058 Maps PTree get def
R11026:11029 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11015:11015 Maps PTree t def
R11001:11008 Coq.NArith.BinPos <> positive ind
R11001:11008 Coq.NArith.BinPos <> positive ind
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11220:11224 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11398:11402 Maps PTree gleaf thm
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11144:11148 Maps PTree rleaf thm
R11153:11154 Coq.NArith.BinPos <> xI constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11182:11186 Maps PTree rleaf thm
R11191:11192 Coq.NArith.BinPos <> xO constr
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11220:11224 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11359:11363 Maps PTree rleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11398:11402 Maps PTree gleaf thm
R11461:11463 Coq.Init.Logic <> :type_scope:x_'='_x not
R11426:11428 Maps PTree get def
R11433:11438 Maps PTree remove def
R11443:11446 Maps PTree Node constr
R11464:11466 Maps PTree get def
R11471:11474 Maps PTree Node constr
R11511:11516 Maps PTree remove def
R11521:11524 Maps PTree Node constr
R11554:11558 Maps PTree gleaf thm
R11461:11463 Coq.Init.Logic <> :type_scope:x_'='_x not
R11426:11428 Maps PTree get def
R11433:11438 Maps PTree remove def
R11443:11446 Maps PTree Node constr
R11464:11466 Maps PTree get def
R11471:11474 Maps PTree Node constr
R11511:11516 Maps PTree remove def
R11521:11524 Maps PTree Node constr
R11554:11558 Maps PTree gleaf thm
R11554:11558 Maps PTree gleaf thm
R11621:11626 Maps PTree remove def
R11631:11634 Maps PTree Node constr
R11672:11676 Maps PTree gleaf thm
R11621:11626 Maps PTree remove def
R11631:11634 Maps PTree Node constr
R11672:11676 Maps PTree gleaf thm
R11672:11676 Maps PTree gleaf thm
R11713:11718 Maps PTree remove def
R11723:11726 Maps PTree Node constr
R11763:11767 Maps PTree gleaf thm
R11713:11718 Maps PTree remove def
R11723:11726 Maps PTree Node constr
R11763:11767 Maps PTree gleaf thm
R11763:11767 Maps PTree gleaf thm
R11835:11837 Coq.Init.Logic <> :type_scope:x_'='_x not
R11799:11801 Maps PTree get def
R11806:11811 Maps PTree remove def
R11816:11819 Maps PTree Node constr
R11838:11840 Maps PTree get def
R11845:11848 Maps PTree Node constr
R11886:11891 Maps PTree remove def
R11896:11899 Maps PTree Node constr
R11930:11934 Maps PTree gleaf thm
R11835:11837 Coq.Init.Logic <> :type_scope:x_'='_x not
R11799:11801 Maps PTree get def
R11806:11811 Maps PTree remove def
R11816:11819 Maps PTree Node constr
R11838:11840 Maps PTree get def
R11845:11848 Maps PTree Node constr
R11886:11891 Maps PTree remove def
R11896:11899 Maps PTree Node constr
R11930:11934 Maps PTree gleaf thm
R11930:11934 Maps PTree gleaf thm
R11997:12002 Maps PTree remove def
R12007:12010 Maps PTree Node constr
R12047:12051 Maps PTree gleaf thm
R11997:12002 Maps PTree remove def
R12007:12010 Maps PTree Node constr
R12047:12051 Maps PTree gleaf thm
R12047:12051 Maps PTree gleaf thm
R12088:12093 Maps PTree remove def
R12098:12101 Maps PTree Node constr
R12139:12143 Maps PTree gleaf thm
R12088:12093 Maps PTree remove def
R12098:12101 Maps PTree Node constr
R12139:12143 Maps PTree gleaf thm
R12139:12143 Maps PTree gleaf thm
prf 12183:12188 PTree grspec
R12255:12257 Coq.Init.Logic <> :type_scope:x_'='_x not
R12237:12239 Maps PTree get def
R12244:12249 Maps PTree remove def
R12261:12266 Maps PTree elt_eq def
R12287:12289 Maps PTree get def
R12277:12280 Coq.Init.Datatypes <> None constr
R12227:12227 Maps PTree t def
R12218:12220 Maps PTree elt def
R12218:12220 Maps PTree elt def
R12327:12332 Maps PTree elt_eq def
R12327:12332 Maps PTree elt_eq def
R12355:12357 Maps PTree grs thm
R12355:12357 Maps PTree grs thm
R12366:12368 Maps PTree gro thm
R12366:12368 Maps PTree gro thm
sec 12395:12414 PTree EXTENSIONAL_EQUALITY
var 12431:12431 PTree.EXTENSIONAL_EQUALITY A
var 12453:12455 PTree.EXTENSIONAL_EQUALITY eqA
R12463:12463 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R12458:12458 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
var 12487:12490 PTree.EXTENSIONAL_EQUALITY beqA
R12503:12506 Coq.Init.Datatypes <> bool ind
R12498:12498 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R12493:12493 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
var 12524:12535 PTree.EXTENSIONAL_EQUALITY beqA_correct
R12569:12571 Maps <> PTree.EXTENSIONAL_EQUALITY.eqA var
R12558:12560 Coq.Init.Logic <> :type_scope:x_'='_x not
R12550:12553 Maps <> PTree.EXTENSIONAL_EQUALITY.beqA var
R12561:12564 Coq.Init.Datatypes <> true constr
def 12594:12598 PTree exteq
R12608:12608 Maps PTree t def
R12610:12610 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R12668:12670 Maps PTree get def
R12658:12660 Maps PTree get def
R12690:12693 Coq.Init.Datatypes <> None constr
R12696:12699 Coq.Init.Datatypes <> None constr
R12704:12707 Coq.Init.Logic <> True ind
R12717:12720 Coq.Init.Datatypes <> Some constr
R12726:12729 Coq.Init.Datatypes <> Some constr
R12737:12739 Maps <> PTree.EXTENSIONAL_EQUALITY.eqA var
R12763:12767 Coq.Init.Logic <> False ind
R12640:12642 Maps PTree elt def
def 12794:12799 PTree bempty
R12805:12805 Maps PTree t def
R12807:12807 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R12812:12815 Coq.Init.Datatypes <> bool ind
R12847:12850 Maps PTree Leaf constr
R12855:12858 Coq.Init.Datatypes <> true constr
R12868:12871 Maps PTree Node constr
R12875:12878 Coq.Init.Datatypes <> None constr
R12893:12896 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R12885:12890 Maps <> bempty def
R12897:12902 Maps <> bempty def
R12914:12917 Maps PTree Node constr
R12922:12925 Coq.Init.Datatypes <> Some constr
R12935:12939 Coq.Init.Datatypes <> false constr
prf 12963:12976 PTree bempty_correct
R13031:13033 Coq.Init.Logic <> :type_scope:x_'='_x not
R13024:13026 Maps PTree get def
R13034:13037 Coq.Init.Datatypes <> None constr
R13003:13005 Coq.Init.Logic <> :type_scope:x_'='_x not
R12995:13000 Maps PTree bempty def
R13006:13009 Coq.Init.Datatypes <> true constr
R13115:13119 Maps PTree empty def
R13121:13121 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13101:13104 Maps PTree Leaf constr
R13106:13106 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13101:13104 Maps PTree Leaf constr
R13106:13106 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13115:13119 Maps PTree empty def
R13121:13121 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13131:13136 Maps PTree gempty thm
R13131:13136 Maps PTree gempty thm
R13179:13187 Coq.Init.Datatypes <> andb_prop thm
R13179:13187 Coq.Init.Datatypes <> andb_prop thm
def 13252:13254 PTree beq
R13264:13264 Maps PTree t def
R13266:13266 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13283:13286 Coq.Init.Datatypes <> bool ind
R13323:13326 Maps PTree Leaf constr
R13334:13339 Maps PTree bempty def
R13355:13358 Maps PTree Leaf constr
R13363:13368 Maps PTree bempty def
R13381:13384 Maps PTree Node constr
R13396:13399 Maps PTree Node constr
R13577:13580 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13554:13567 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13453:13456 Coq.Init.Datatypes <> None constr
R13459:13462 Coq.Init.Datatypes <> None constr
R13467:13470 Coq.Init.Datatypes <> true constr
R13484:13487 Coq.Init.Datatypes <> Some constr
R13493:13496 Coq.Init.Datatypes <> Some constr
R13504:13507 Maps <> PTree.EXTENSIONAL_EQUALITY.beqA var
R13535:13539 Coq.Init.Datatypes <> false constr
R13568:13570 Maps <> beq def
R13581:13583 Maps <> beq def
prf 13613:13623 PTree beq_correct
R13666:13670 Maps PTree exteq def
R13655:13657 Coq.Init.Logic <> :type_scope:x_'='_x not
R13646:13648 Maps PTree beq def
R13658:13661 Coq.Init.Datatypes <> true constr
R13780:13784 Maps PTree empty def
R13786:13786 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13766:13769 Maps PTree Leaf constr
R13771:13771 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13766:13769 Maps PTree Leaf constr
R13771:13771 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13780:13784 Maps PTree empty def
R13786:13786 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13812:13817 Maps PTree gempty thm
R13812:13817 Maps PTree gempty thm
R13812:13817 Maps PTree gempty thm
R13906:13910 Maps PTree empty def
R13912:13912 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13892:13895 Maps PTree Leaf constr
R13897:13897 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13892:13895 Maps PTree Leaf constr
R13897:13897 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13906:13910 Maps PTree empty def
R13912:13912 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R13924:13929 Maps PTree gempty thm
R13924:13929 Maps PTree gempty thm
R13946:13959 Maps PTree bempty_correct thm
R13946:13959 Maps PTree bempty_correct thm
R14061:14065 Maps PTree empty def
R14067:14067 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R14047:14050 Maps PTree Leaf constr
R14052:14052 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R14047:14050 Maps PTree Leaf constr
R14052:14052 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R14061:14065 Maps PTree empty def
R14067:14067 Maps <> PTree.EXTENSIONAL_EQUALITY.A var
R14079:14084 Maps PTree gempty thm
R14079:14084 Maps PTree gempty thm
R14101:14114 Maps PTree bempty_correct thm
R14101:14114 Maps PTree bempty_correct thm
R14213:14221 Coq.Init.Datatypes <> andb_prop thm
R14213:14221 Coq.Init.Datatypes <> andb_prop thm
R14241:14249 Coq.Init.Datatypes <> andb_prop thm
R14241:14249 Coq.Init.Datatypes <> andb_prop thm
R14358:14369 Maps <> PTree.EXTENSIONAL_EQUALITY.beqA_correct var
R14358:14369 Maps <> PTree.EXTENSIONAL_EQUALITY.beqA_correct var
R14395:14403 Coq.Init.Datatypes <> andb_prop thm
R14395:14403 Coq.Init.Datatypes <> andb_prop thm
R14525:14544 Maps PTree.EXTENSIONAL_EQUALITY <> sec
def 14561:14566 PTree append
R14575:14582 Coq.NArith.BinPos <> positive ind
R14598:14605 Coq.NArith.BinPos <> positive ind
R14637:14638 Coq.NArith.BinPos <> xH constr
R14653:14654 Coq.NArith.BinPos <> xI constr
R14662:14663 Coq.NArith.BinPos <> xI constr
R14666:14671 Maps <> append def
R14687:14688 Coq.NArith.BinPos <> xO constr
R14696:14697 Coq.NArith.BinPos <> xO constr
R14700:14705 Maps <> append def
prf 14735:14748 PTree append_assoc_0
R14819:14821 Coq.Init.Logic <> :type_scope:x_'='_x not
R14804:14809 Maps PTree append def
R14814:14815 Coq.NArith.BinPos <> xO constr
R14822:14827 Maps PTree append def
R14830:14835 Maps PTree append def
R14840:14841 Coq.NArith.BinPos <> xO constr
R14843:14844 Coq.NArith.BinPos <> xH constr
R14766:14773 Coq.NArith.BinPos <> positive ind
R14766:14773 Coq.NArith.BinPos <> positive ind
R14932:14933 Coq.NArith.BinPos <> xI constr
R14964:14965 Coq.NArith.BinPos <> xO constr
R14998:14999 Coq.NArith.BinPos <> xH constr
R14932:14933 Coq.NArith.BinPos <> xI constr
R14932:14933 Coq.NArith.BinPos <> xI constr
R14932:14933 Coq.NArith.BinPos <> xI constr
R14932:14933 Coq.NArith.BinPos <> xI constr
R14932:14933 Coq.NArith.BinPos <> xI constr
R14932:14933 Coq.NArith.BinPos <> xI constr
R14964:14965 Coq.NArith.BinPos <> xO constr
R14964:14965 Coq.NArith.BinPos <> xO constr
R14964:14965 Coq.NArith.BinPos <> xO constr
R14964:14965 Coq.NArith.BinPos <> xO constr
R14964:14965 Coq.NArith.BinPos <> xO constr
R14964:14965 Coq.NArith.BinPos <> xO constr
R14998:14999 Coq.NArith.BinPos <> xH constr
R14998:14999 Coq.NArith.BinPos <> xH constr
R14998:14999 Coq.NArith.BinPos <> xH constr
R14998:14999 Coq.NArith.BinPos <> xH constr
R14998:14999 Coq.NArith.BinPos <> xH constr
R14998:14999 Coq.NArith.BinPos <> xH constr
prf 15035:15048 PTree append_assoc_1
R15119:15121 Coq.Init.Logic <> :type_scope:x_'='_x not
R15104:15109 Maps PTree append def
R15114:15115 Coq.NArith.BinPos <> xI constr
R15122:15127 Maps PTree append def
R15130:15135 Maps PTree append def
R15140:15141 Coq.NArith.BinPos <> xI constr
R15143:15144 Coq.NArith.BinPos <> xH constr
R15066:15073 Coq.NArith.BinPos <> positive ind
R15066:15073 Coq.NArith.BinPos <> positive ind
R15232:15233 Coq.NArith.BinPos <> xI constr
R15264:15265 Coq.NArith.BinPos <> xO constr
R15298:15299 Coq.NArith.BinPos <> xH constr
R15232:15233 Coq.NArith.BinPos <> xI constr
R15232:15233 Coq.NArith.BinPos <> xI constr
R15232:15233 Coq.NArith.BinPos <> xI constr
R15232:15233 Coq.NArith.BinPos <> xI constr
R15232:15233 Coq.NArith.BinPos <> xI constr
R15232:15233 Coq.NArith.BinPos <> xI constr
R15264:15265 Coq.NArith.BinPos <> xO constr
R15264:15265 Coq.NArith.BinPos <> xO constr
R15264:15265 Coq.NArith.BinPos <> xO constr
R15264:15265 Coq.NArith.BinPos <> xO constr
R15264:15265 Coq.NArith.BinPos <> xO constr
R15264:15265 Coq.NArith.BinPos <> xO constr
R15298:15299 Coq.NArith.BinPos <> xH constr
R15298:15299 Coq.NArith.BinPos <> xH constr
R15298:15299 Coq.NArith.BinPos <> xH constr
R15298:15299 Coq.NArith.BinPos <> xH constr
R15298:15299 Coq.NArith.BinPos <> xH constr
R15298:15299 Coq.NArith.BinPos <> xH constr
prf 15335:15350 PTree append_neutral_r
R15388:15390 Coq.Init.Logic <> :type_scope:x_'='_x not
R15377:15382 Maps PTree append def
R15386:15387 Coq.NArith.BinPos <> xH constr
R15366:15373 Coq.NArith.BinPos <> positive ind
prf 15463:15478 PTree append_neutral_l
R15516:15518 Coq.Init.Logic <> :type_scope:x_'='_x not
R15505:15510 Maps PTree append def
R15512:15513 Coq.NArith.BinPos <> xH constr
R15494:15501 Coq.NArith.BinPos <> positive ind
def 15575:15578 PTree xmap
R15598:15605 Coq.NArith.BinPos <> positive ind
R15623:15623 Maps PTree t def
R15633:15640 Coq.NArith.BinPos <> positive ind
R15669:15669 Maps PTree t def
R15703:15706 Maps PTree Leaf constr
R15711:15714 Maps PTree Leaf constr
R15724:15727 Maps PTree Node constr
R15738:15741 Maps PTree Node constr
R15849:15852 Maps <> xmap def
R15859:15864 Maps PTree append def
R15869:15870 Coq.NArith.BinPos <> xI constr
R15872:15873 Coq.NArith.BinPos <> xH constr
R15801:15810 Coqlib <> option_map def
R15744:15747 Maps <> xmap def
R15754:15759 Maps PTree append def
R15764:15765 Coq.NArith.BinPos <> xO constr
R15767:15768 Coq.NArith.BinPos <> xH constr
def 15903:15905 PTree map
R15925:15932 Coq.NArith.BinPos <> positive ind
R15950:15953 Maps PTree xmap def
R15959:15960 Coq.NArith.BinPos <> xH constr
prf 15974:15978 PTree xgmap
R16081:16083 Coq.Init.Logic <> :type_scope:x_'='_x not
R16063:16065 Maps PTree get def
R16070:16073 Maps PTree xmap def
R16084:16093 Coqlib <> option_map def
R16113:16115 Maps PTree get def
R16099:16104 Maps PTree append def
R16051:16051 Maps PTree t def
R16037:16044 Coq.NArith.BinPos <> positive ind
R16037:16044 Coq.NArith.BinPos <> positive ind
R16010:16017 Coq.NArith.BinPos <> positive ind
R16201:16214 Maps PTree append_assoc_1 thm
R16201:16214 Maps PTree append_assoc_1 thm
R16248:16261 Maps PTree append_assoc_0 thm
R16248:16261 Maps PTree append_assoc_0 thm
R16295:16310 Maps PTree append_neutral_r thm
R16295:16310 Maps PTree append_neutral_r thm
prf 16342:16345 PTree gmap
R16438:16440 Coq.Init.Logic <> :type_scope:x_'='_x not
R16423:16425 Maps PTree get def
R16430:16432 Maps PTree map def
R16441:16450 Coqlib <> option_map def
R16459:16461 Maps PTree get def
R16413:16413 Maps PTree t def
R16399:16406 Coq.NArith.BinPos <> positive ind
R16375:16382 Coq.NArith.BinPos <> positive ind
R16533:16538 Maps PTree append def
R16540:16541 Coq.NArith.BinPos <> xH constr
R16533:16538 Maps PTree append def
R16540:16541 Coq.NArith.BinPos <> xH constr
R16558:16562 Maps PTree xgmap thm
R16558:16562 Maps PTree xgmap thm
R16577:16592 Maps PTree append_neutral_l thm
R16577:16592 Maps PTree append_neutral_l thm
def 16622:16626 PTree Node'
R16642:16642 Maps PTree t def
R16651:16656 Coq.Init.Datatypes <> option ind
R16665:16665 Maps PTree t def
R16671:16671 Maps PTree t def
R16707:16710 Maps PTree Leaf constr
R16713:16716 Coq.Init.Datatypes <> None constr
R16719:16722 Maps PTree Leaf constr
R16727:16730 Maps PTree Leaf constr
R16749:16752 Maps PTree Node constr
prf 16778:16783 PTree gnode'
R16870:16872 Coq.Init.Logic <> :type_scope:x_'='_x not
R16851:16853 Maps PTree get def
R16858:16862 Maps PTree Node' def
R16873:16875 Maps PTree get def
R16880:16883 Maps PTree Node constr
R16836:16843 Coq.NArith.BinPos <> positive ind
R16822:16827 Coq.Init.Datatypes <> option ind
R16813:16813 Maps PTree t def
R16813:16813 Maps PTree t def
R17012:17016 Maps PTree gleaf thm
R17012:17016 Maps PTree gleaf thm
R17012:17016 Maps PTree gleaf thm
sec 17043:17049 PTree COMBINE
var 17064:17064 PTree.COMBINE A
var 17084:17084 PTree.COMBINE f
R17111:17116 Coq.Init.Datatypes <> option ind
R17118:17118 Maps <> PTree.COMBINE.A var
R17099:17104 Coq.Init.Datatypes <> option ind
R17106:17106 Maps <> PTree.COMBINE.A var
R17087:17092 Coq.Init.Datatypes <> option ind
R17094:17094 Maps <> PTree.COMBINE.A var
var 17134:17144 PTree.COMBINE f_none_none
R17158:17160 Coq.Init.Logic <> :type_scope:x_'='_x not
R17147:17147 Maps <> PTree.COMBINE.f var
R17154:17157 Coq.Init.Datatypes <> None constr
R17149:17152 Coq.Init.Datatypes <> None constr
R17161:17164 Coq.Init.Datatypes <> None constr
def 17179:17188 PTree xcombine_l
R17195:17195 Maps PTree t def
R17197:17197 Maps <> PTree.COMBINE.A var
R17213:17213 Maps PTree t def
R17215:17215 Maps <> PTree.COMBINE.A var
R17247:17250 Maps PTree Leaf constr
R17255:17258 Maps PTree Leaf constr
R17268:17271 Maps PTree Node constr
R17282:17286 Maps PTree Node' def
R17315:17324 Maps <> xcombine_l def
R17304:17304 Maps <> PTree.COMBINE.f var
R17308:17311 Coq.Init.Datatypes <> None constr
R17289:17298 Maps <> xcombine_l def
prf 17349:17359 PTree xgcombine_l
R17435:17437 Coq.Init.Logic <> :type_scope:x_'='_x not
R17415:17417 Maps PTree get def
R17422:17431 Maps PTree xcombine_l def
R17438:17438 Maps <> PTree.COMBINE.f var
R17450:17453 Coq.Init.Datatypes <> None constr
R17441:17443 Maps PTree get def
R17394:17401 Coq.NArith.BinPos <> positive ind
R17384:17384 Maps PTree t def
R17386:17386 Maps <> PTree.COMBINE.A var
R17522:17526 Maps PTree gleaf thm
R17522:17526 Maps PTree gleaf thm
R17522:17526 Maps PTree gleaf thm
R17549:17554 Maps PTree gnode' thm
R17549:17554 Maps PTree gnode' thm
def 17603:17612 PTree xcombine_r
R17619:17619 Maps PTree t def
R17621:17621 Maps <> PTree.COMBINE.A var
R17637:17637 Maps PTree t def
R17639:17639 Maps <> PTree.COMBINE.A var
R17671:17674 Maps PTree Leaf constr
R17679:17682 Maps PTree Leaf constr
R17692:17695 Maps PTree Node constr
R17706:17710 Maps PTree Node' def
R17739:17748 Maps <> xcombine_r def
R17728:17728 Maps <> PTree.COMBINE.f var
R17730:17733 Coq.Init.Datatypes <> None constr
R17713:17722 Maps <> xcombine_r def
prf 17773:17783 PTree xgcombine_r
R17859:17861 Coq.Init.Logic <> :type_scope:x_'='_x not
R17839:17841 Maps PTree get def
R17846:17855 Maps PTree xcombine_r def
R17862:17862 Maps <> PTree.COMBINE.f var
R17870:17872 Maps PTree get def
R17864:17867 Coq.Init.Datatypes <> None constr
R17818:17825 Coq.NArith.BinPos <> positive ind
R17808:17808 Maps PTree t def
R17810:17810 Maps <> PTree.COMBINE.A var
R17946:17950 Maps PTree gleaf thm
R17946:17950 Maps PTree gleaf thm
R17946:17950 Maps PTree gleaf thm
R17973:17978 Maps PTree gnode' thm
R17973:17978 Maps PTree gnode' thm
def 18027:18033 PTree combine
R18044:18044 Maps PTree t def
R18046:18046 Maps <> PTree.COMBINE.A var
R18063:18063 Maps PTree t def
R18065:18065 Maps <> PTree.COMBINE.A var
R18094:18097 Maps PTree Leaf constr
R18102:18111 Maps PTree xcombine_r def
R18122:18125 Maps PTree Node constr
R18171:18174 Maps PTree Leaf constr
R18179:18188 Maps PTree xcombine_l def
R18203:18206 Maps PTree Node constr
R18220:18224 Maps PTree Node' def
R18253:18259 Maps <> combine def
R18243:18243 Maps <> PTree.COMBINE.f var
R18227:18233 Maps <> combine def
prf 18300:18307 PTree gcombine
R18378:18380 Coq.Init.Logic <> :type_scope:x_'='_x not
R18357:18359 Maps PTree get def
R18364:18370 Maps PTree combine def
R18381:18381 Maps <> PTree.COMBINE.f var
R18395:18397 Maps PTree get def
R18384:18386 Maps PTree get def
R18340:18347 Coq.NArith.BinPos <> positive ind
R18331:18331 Maps PTree t def
R18333:18333 Maps <> PTree.COMBINE.A var
R18331:18331 Maps PTree t def
R18333:18333 Maps <> PTree.COMBINE.A var
R18460:18464 Maps PTree gleaf thm
R18460:18464 Maps PTree gleaf thm
R18473:18483 Maps PTree xgcombine_r thm
R18473:18483 Maps PTree xgcombine_r thm
R18522:18526 Maps PTree gleaf thm
R18522:18526 Maps PTree gleaf thm
R18540:18550 Maps PTree xgcombine_l thm
R18540:18550 Maps PTree xgcombine_l thm
R18579:18584 Maps PTree gnode' thm
R18579:18584 Maps PTree gnode' thm
R18579:18584 Maps PTree gnode' thm
R18626:18632 Maps PTree.COMBINE <> sec
prf 18644:18654 PTree xcombine_lr
R18798:18800 Coq.Init.Logic <> :type_scope:x_'='_x not
R18784:18793 Maps PTree xcombine_l def
R18801:18810 Maps PTree xcombine_r def
R18767:18769 Coq.Init.Logic <> :type_scope:x_'='_x not
R18751:18756 Coq.Init.Datatypes <> option ind
R18751:18756 Coq.Init.Datatypes <> option ind
R18726:18726 Maps PTree t def
R18711:18716 Coq.Init.Datatypes <> option ind
R18699:18704 Coq.Init.Datatypes <> option ind
R18687:18692 Coq.Init.Datatypes <> option ind
R18711:18716 Coq.Init.Datatypes <> option ind
R18699:18704 Coq.Init.Datatypes <> option ind
R18687:18692 Coq.Init.Datatypes <> option ind
prf 18963:18976 PTree combine_commut
R19132:19134 Coq.Init.Logic <> :type_scope:x_'='_x not
R19117:19123 Maps PTree combine def
R19135:19141 Maps PTree combine def
R19107:19107 Maps PTree t def
R19107:19107 Maps PTree t def
R19075:19077 Coq.Init.Logic <> :type_scope:x_'='_x not
R19059:19064 Coq.Init.Datatypes <> option ind
R19059:19064 Coq.Init.Datatypes <> option ind
R19030:19035 Coq.Init.Datatypes <> option ind
R19018:19023 Coq.Init.Datatypes <> option ind
R19006:19011 Coq.Init.Datatypes <> option ind
R19030:19035 Coq.Init.Datatypes <> option ind
R19018:19023 Coq.Init.Datatypes <> option ind
R19006:19011 Coq.Init.Datatypes <> option ind
R19229:19231 Coq.Init.Logic <> :type_scope:x_'='_x not
R19213:19218 Coq.Init.Datatypes <> option ind
R19213:19218 Coq.Init.Datatypes <> option ind
R19229:19231 Coq.Init.Logic <> :type_scope:x_'='_x not
R19213:19218 Coq.Init.Datatypes <> option ind
R19213:19218 Coq.Init.Datatypes <> option ind
R19351:19361 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19351:19361 Maps PTree xcombine_lr thm
R19351:19361 Maps PTree xcombine_lr thm
R19351:19361 Maps PTree xcombine_lr thm
R19351:19361 Maps PTree xcombine_lr thm
R19351:19361 Maps PTree xcombine_lr thm
R19351:19361 Maps PTree xcombine_lr thm
R19351:19361 Maps PTree xcombine_lr thm
R19351:19361 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
R19391:19401 Maps PTree xcombine_lr thm
def 19496:19504 PTree xelements
R19522:19522 Maps PTree t def
R19532:19539 Coq.NArith.BinPos <> positive ind
R19568:19571 Coq.Init.Datatypes <> list ind
R19582:19584 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R19574:19581 Coq.NArith.BinPos <> positive ind
R19618:19621 Maps PTree Leaf constr
R19626:19628 Coq.Init.Datatypes <> nil constr
R19638:19641 Maps PTree Node constr
R19645:19648 Coq.Init.Datatypes <> None constr
R19665:19665 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19696:19701 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19732:19732 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19666:19674 Maps <> xelements def
R19679:19684 Maps PTree append def
R19689:19690 Coq.NArith.BinPos <> xO constr
R19692:19693 Coq.NArith.BinPos <> xH constr
R19702:19710 Maps <> xelements def
R19715:19720 Maps PTree append def
R19725:19726 Coq.NArith.BinPos <> xI constr
R19728:19729 Coq.NArith.BinPos <> xH constr
R19742:19745 Maps PTree Node constr
R19750:19753 Coq.Init.Datatypes <> Some constr
R19773:19773 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19804:19819 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19860:19860 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R19774:19782 Maps <> xelements def
R19787:19792 Maps PTree append def
R19797:19798 Coq.NArith.BinPos <> xO constr
R19800:19801 Coq.NArith.BinPos <> xH constr
R19826:19829 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19820:19820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19822:19823 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19825:19825 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R19830:19838 Maps <> xelements def
R19843:19848 Maps PTree append def
R19853:19854 Coq.NArith.BinPos <> xI constr
R19856:19857 Coq.NArith.BinPos <> xH constr
def 20027:20034 PTree elements
R20043:20043 Maps PTree t def
R20051:20059 Maps PTree xelements def
R20063:20064 Coq.NArith.BinPos <> xH constr
prf 20078:20094 PTree xelements_correct
R20180:20181 Coq.Lists.List <> In def
R20200:20208 Maps PTree xelements def
R20183:20183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20194:20195 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20197:20197 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20184:20189 Maps PTree append def
R20167:20169 Coq.Init.Logic <> :type_scope:x_'='_x not
R20160:20162 Maps PTree get def
R20170:20173 Coq.Init.Datatypes <> Some constr
R20136:20143 Coq.NArith.BinPos <> positive ind
R20136:20143 Coq.NArith.BinPos <> positive ind
R20124:20124 Maps PTree t def
R20270:20274 Maps PTree gleaf thm
R20270:20274 Maps PTree gleaf thm
R20365:20378 Maps PTree append_assoc_1 thm
R20387:20395 Coq.Lists.List <> in_or_app thm
R20411:20417 Coq.Lists.List <> in_cons thm
R20365:20378 Maps PTree append_assoc_1 thm
R20387:20395 Coq.Lists.List <> in_or_app thm
R20411:20417 Coq.Lists.List <> in_cons thm
R20464:20477 Maps PTree append_assoc_0 thm
R20486:20494 Coq.Lists.List <> in_or_app thm
R20464:20477 Maps PTree append_assoc_0 thm
R20486:20494 Coq.Lists.List <> in_or_app thm
R20537:20552 Maps PTree append_neutral_r thm
R20561:20569 Coq.Lists.List <> in_or_app thm
R20630:20634 Coq.Lists.List <> in_eq thm
R20537:20552 Maps PTree append_neutral_r thm
R20561:20569 Coq.Lists.List <> in_or_app thm
R20630:20634 Coq.Lists.List <> in_eq thm
R20653:20666 Maps PTree append_assoc_1 thm
R20675:20683 Coq.Lists.List <> in_or_app thm
R20653:20666 Maps PTree append_assoc_1 thm
R20675:20683 Coq.Lists.List <> in_or_app thm
R20727:20740 Maps PTree append_assoc_0 thm
R20749:20757 Coq.Lists.List <> in_or_app thm
R20727:20740 Maps PTree append_assoc_0 thm
R20749:20757 Coq.Lists.List <> in_or_app thm
prf 20824:20839 PTree elements_correct
R20918:20919 Coq.Lists.List <> In def
R20929:20936 Maps PTree elements def
R20921:20921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20923:20924 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20926:20926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20905:20907 Coq.Init.Logic <> :type_scope:x_'='_x not
R20898:20900 Maps PTree get def
R20908:20911 Coq.Init.Datatypes <> Some constr
R20876:20883 Coq.NArith.BinPos <> positive ind
R20867:20867 Maps PTree t def
R20984:21000 Maps PTree xelements_correct thm
R21006:21007 Coq.NArith.BinPos <> xH constr
R20984:21000 Maps PTree xelements_correct thm
R21006:21007 Coq.NArith.BinPos <> xH constr
def 21034:21037 PTree xget
R21057:21064 Coq.NArith.BinPos <> positive ind
R21057:21064 Coq.NArith.BinPos <> positive ind
R21072:21072 Maps PTree t def
R21090:21095 Coq.Init.Datatypes <> option ind
R21135:21136 Coq.NArith.BinPos <> xH constr
R21141:21143 Maps PTree get def
R21157:21158 Coq.NArith.BinPos <> xO constr
R21164:21165 Coq.NArith.BinPos <> xO constr
R21173:21176 Maps <> xget def
R21194:21195 Coq.NArith.BinPos <> xI constr
R21201:21202 Coq.NArith.BinPos <> xI constr
R21210:21213 Maps <> xget def
R21239:21242 Coq.Init.Datatypes <> None constr
prf 21266:21274 PTree xget_left
R21427:21429 Coq.Init.Logic <> :type_scope:x_'='_x not
R21404:21407 Maps PTree xget def
R21414:21417 Maps PTree Node constr
R21430:21433 Coq.Init.Datatypes <> Some constr
R21391:21393 Coq.Init.Logic <> :type_scope:x_'='_x not
R21363:21366 Maps PTree xget def
R21371:21376 Maps PTree append def
R21381:21382 Coq.NArith.BinPos <> xO constr
R21384:21385 Coq.NArith.BinPos <> xH constr
R21394:21397 Coq.Init.Datatypes <> Some constr
R21338:21343 Coq.Init.Datatypes <> option ind
R21328:21328 Maps PTree t def
R21328:21328 Maps PTree t def
R21309:21316 Coq.NArith.BinPos <> positive ind
R21309:21316 Coq.NArith.BinPos <> positive ind
prf 21579:21590 PTree xelements_ii
R21694:21695 Coq.Lists.List <> In def
R21705:21713 Maps PTree xelements def
R21697:21697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21699:21700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21702:21702 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21657:21658 Coq.Lists.List <> In def
R21671:21679 Maps PTree xelements def
R21684:21685 Coq.NArith.BinPos <> xI constr
R21660:21660 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21665:21666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21668:21668 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21661:21662 Coq.NArith.BinPos <> xI constr
R21633:21640 Coq.NArith.BinPos <> positive ind
R21633:21640 Coq.NArith.BinPos <> positive ind
R21621:21621 Maps PTree t def
R21827:21835 Coq.Lists.List <> in_app_or thm
R21862:21870 Coq.Lists.List <> in_or_app thm
R21827:21835 Coq.Lists.List <> in_app_or thm
R21827:21835 Coq.Lists.List <> in_app_or thm
R21862:21870 Coq.Lists.List <> in_or_app thm
R21862:21870 Coq.Lists.List <> in_or_app thm
R21862:21870 Coq.Lists.List <> in_or_app thm
R21862:21870 Coq.Lists.List <> in_or_app thm
R21930:21935 Coq.Lists.List <> in_inv thm
R21930:21935 Coq.Lists.List <> in_inv thm
R22013:22017 Coq.Lists.List <> in_eq thm
R22013:22017 Coq.Lists.List <> in_eq thm
R22035:22041 Coq.Lists.List <> in_cons thm
R22035:22041 Coq.Lists.List <> in_cons thm
prf 22147:22158 PTree xelements_io
R22225:22225 Coq.Init.Logic <> :type_scope:'~'_x not
R22226:22227 Coq.Lists.List <> In def
R22240:22248 Maps PTree xelements def
R22253:22254 Coq.NArith.BinPos <> xO constr
R22229:22229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22234:22235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22237:22237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22230:22231 Coq.NArith.BinPos <> xI constr
R22201:22208 Coq.NArith.BinPos <> positive ind
R22201:22208 Coq.NArith.BinPos <> positive ind
R22189:22189 Maps PTree t def
R22364:22372 Coq.Lists.List <> in_app_or thm
R22364:22372 Coq.Lists.List <> in_app_or thm
R22364:22372 Coq.Lists.List <> in_app_or thm
R22433:22438 Coq.Lists.List <> in_inv thm
R22433:22438 Coq.Lists.List <> in_inv thm
prf 22580:22591 PTree xelements_oo
R22695:22696 Coq.Lists.List <> In def
R22706:22714 Maps PTree xelements def
R22698:22698 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22700:22701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22703:22703 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22658:22659 Coq.Lists.List <> In def
R22672:22680 Maps PTree xelements def
R22685:22686 Coq.NArith.BinPos <> xO constr
R22661:22661 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22666:22667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22669:22669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22662:22663 Coq.NArith.BinPos <> xO constr
R22634:22641 Coq.NArith.BinPos <> positive ind
R22634:22641 Coq.NArith.BinPos <> positive ind
R22622:22622 Maps PTree t def
R22828:22836 Coq.Lists.List <> in_app_or thm
R22863:22871 Coq.Lists.List <> in_or_app thm
R22828:22836 Coq.Lists.List <> in_app_or thm
R22828:22836 Coq.Lists.List <> in_app_or thm
R22863:22871 Coq.Lists.List <> in_or_app thm
R22863:22871 Coq.Lists.List <> in_or_app thm
R22863:22871 Coq.Lists.List <> in_or_app thm
R22863:22871 Coq.Lists.List <> in_or_app thm
R22931:22936 Coq.Lists.List <> in_inv thm
R22931:22936 Coq.Lists.List <> in_inv thm
R23014:23018 Coq.Lists.List <> in_eq thm
R23014:23018 Coq.Lists.List <> in_eq thm
R23036:23042 Coq.Lists.List <> in_cons thm
R23036:23042 Coq.Lists.List <> in_cons thm
prf 23148:23159 PTree xelements_oi
R23226:23226 Coq.Init.Logic <> :type_scope:'~'_x not
R23227:23228 Coq.Lists.List <> In def
R23241:23249 Maps PTree xelements def
R23254:23255 Coq.NArith.BinPos <> xI constr
R23230:23230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23235:23236 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23238:23238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23231:23232 Coq.NArith.BinPos <> xO constr
R23202:23209 Coq.NArith.BinPos <> positive ind
R23202:23209 Coq.NArith.BinPos <> positive ind
R23190:23190 Maps PTree t def
R23365:23373 Coq.Lists.List <> in_app_or thm
R23365:23373 Coq.Lists.List <> in_app_or thm
R23365:23373 Coq.Lists.List <> in_app_or thm
R23434:23439 Coq.Lists.List <> in_inv thm
R23434:23439 Coq.Lists.List <> in_inv thm
prf 23581:23592 PTree xelements_ih
R23721:23722 Coq.Lists.List <> In def
R23732:23740 Maps PTree xelements def
R23745:23746 Coq.NArith.BinPos <> xH constr
R23724:23724 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23726:23727 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23729:23729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23675:23676 Coq.Lists.List <> In def
R23689:23697 Maps PTree xelements def
R23714:23715 Coq.NArith.BinPos <> xH constr
R23700:23703 Maps PTree Node constr
R23678:23678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23683:23684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23686:23686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23679:23680 Coq.NArith.BinPos <> xI constr
R23651:23658 Coq.NArith.BinPos <> positive ind
R23636:23641 Coq.Init.Datatypes <> option ind
R23627:23627 Maps PTree t def
R23627:23627 Maps PTree t def
R23804:23812 Coq.Lists.List <> in_app_or thm
R23804:23812 Coq.Lists.List <> in_app_or thm
R23804:23812 Coq.Lists.List <> in_app_or thm
R23840:23841 Coq.Lists.List <> In def
R23854:23862 Maps PTree xelements def
R23843:23843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23848:23849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23851:23851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23844:23845 Coq.NArith.BinPos <> xI constr
R23884:23895 Maps PTree xelements_io thm
R23840:23841 Coq.Lists.List <> In def
R23854:23862 Maps PTree xelements def
R23843:23843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23848:23849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23851:23851 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23844:23845 Coq.NArith.BinPos <> xI constr
R23884:23895 Maps PTree xelements_io thm
R23922:23927 Coq.Lists.List <> in_inv thm
R23922:23927 Coq.Lists.List <> in_inv thm
R23970:23981 Maps PTree xelements_ii thm
R23970:23981 Maps PTree xelements_ii thm
R24006:24007 Coq.Lists.List <> In def
R24020:24028 Maps PTree xelements def
R24009:24009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24014:24015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24017:24017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24010:24011 Coq.NArith.BinPos <> xI constr
R24050:24061 Maps PTree xelements_io thm
R24006:24007 Coq.Lists.List <> In def
R24020:24028 Maps PTree xelements def
R24009:24009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24014:24015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24017:24017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24010:24011 Coq.NArith.BinPos <> xI constr
R24050:24061 Maps PTree xelements_io thm
R24084:24095 Maps PTree xelements_ii thm
R24084:24095 Maps PTree xelements_ii thm
prf 24124:24135 PTree xelements_oh
R24264:24265 Coq.Lists.List <> In def
R24275:24283 Maps PTree xelements def
R24288:24289 Coq.NArith.BinPos <> xH constr
R24267:24267 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24269:24270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24272:24272 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24218:24219 Coq.Lists.List <> In def
R24232:24240 Maps PTree xelements def
R24257:24258 Coq.NArith.BinPos <> xH constr
R24243:24246 Maps PTree Node constr
R24221:24221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24226:24227 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24229:24229 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24222:24223 Coq.NArith.BinPos <> xO constr
R24194:24201 Coq.NArith.BinPos <> positive ind
R24179:24184 Coq.Init.Datatypes <> option ind
R24170:24170 Maps PTree t def
R24170:24170 Maps PTree t def
R24347:24355 Coq.Lists.List <> in_app_or thm
R24347:24355 Coq.Lists.List <> in_app_or thm
R24347:24355 Coq.Lists.List <> in_app_or thm
R24381:24392 Maps PTree xelements_oo thm
R24381:24392 Maps PTree xelements_oo thm
R24419:24424 Coq.Lists.List <> in_inv thm
R24419:24424 Coq.Lists.List <> in_inv thm
R24469:24470 Coq.Lists.List <> In def
R24483:24491 Maps PTree xelements def
R24472:24472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24477:24478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24480:24480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24473:24474 Coq.NArith.BinPos <> xO constr
R24513:24524 Maps PTree xelements_oi thm
R24469:24470 Coq.Lists.List <> In def
R24483:24491 Maps PTree xelements def
R24472:24472 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24477:24478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24480:24480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24473:24474 Coq.NArith.BinPos <> xO constr
R24513:24524 Maps PTree xelements_oi thm
R24547:24558 Maps PTree xelements_oo thm
R24547:24558 Maps PTree xelements_oo thm
R24583:24584 Coq.Lists.List <> In def
R24597:24605 Maps PTree xelements def
R24586:24586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24591:24592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24594:24594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24587:24588 Coq.NArith.BinPos <> xO constr
R24627:24638 Maps PTree xelements_oi thm
R24583:24584 Coq.Lists.List <> In def
R24597:24605 Maps PTree xelements def
R24586:24586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24591:24592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24594:24594 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24587:24588 Coq.NArith.BinPos <> xO constr
R24627:24638 Maps PTree xelements_oi thm
prf 24667:24678 PTree xelements_hi
R24743:24743 Coq.Init.Logic <> :type_scope:'~'_x not
R24744:24745 Coq.Lists.List <> In def
R24756:24764 Maps PTree xelements def
R24769:24770 Coq.NArith.BinPos <> xI constr
R24747:24747 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24750:24751 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24753:24753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24748:24749 Coq.NArith.BinPos <> xH constr
R24719:24726 Coq.NArith.BinPos <> positive ind
R24709:24709 Maps PTree t def
R24880:24888 Coq.Lists.List <> in_app_or thm
R24880:24888 Coq.Lists.List <> in_app_or thm
R24880:24888 Coq.Lists.List <> in_app_or thm
R24959:24964 Coq.Lists.List <> in_inv thm
R24959:24964 Coq.Lists.List <> in_inv thm
prf 25136:25147 PTree xelements_ho
R25212:25212 Coq.Init.Logic <> :type_scope:'~'_x not
R25213:25214 Coq.Lists.List <> In def
R25225:25233 Maps PTree xelements def
R25238:25239 Coq.NArith.BinPos <> xO constr
R25216:25216 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25219:25220 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25222:25222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25217:25218 Coq.NArith.BinPos <> xH constr
R25188:25195 Coq.NArith.BinPos <> positive ind
R25178:25178 Maps PTree t def
R25349:25357 Coq.Lists.List <> in_app_or thm
R25349:25357 Coq.Lists.List <> in_app_or thm
R25349:25357 Coq.Lists.List <> in_app_or thm
R25428:25433 Coq.Lists.List <> in_inv thm
R25428:25433 Coq.Lists.List <> in_inv thm
prf 25605:25614 PTree get_xget_h
R25672:25674 Coq.Init.Logic <> :type_scope:x_'='_x not
R25665:25667 Maps PTree get def
R25675:25678 Maps PTree xget def
R25682:25683 Coq.NArith.BinPos <> xH constr
R25654:25661 Coq.NArith.BinPos <> positive ind
R25645:25645 Maps PTree t def
prf 25750:25767 PTree xelements_complete
R25872:25874 Coq.Init.Logic <> :type_scope:x_'='_x not
R25862:25865 Maps PTree xget def
R25875:25878 Coq.Init.Datatypes <> Some constr
R25833:25834 Coq.Lists.List <> In def
R25844:25852 Maps PTree xelements def
R25836:25836 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25838:25839 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25841:25841 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25814:25814 Maps PTree t def
R25800:25807 Coq.NArith.BinPos <> positive ind
R25800:25807 Coq.NArith.BinPos <> positive ind
R25971:25982 Maps PTree xelements_ii thm
R25971:25982 Maps PTree xelements_ii thm
R26006:26007 Coq.Lists.List <> In def
R26020:26028 Maps PTree xelements def
R26033:26034 Coq.NArith.BinPos <> xO constr
R26009:26009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26014:26015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26017:26017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26010:26011 Coq.NArith.BinPos <> xI constr
R26054:26065 Maps PTree xelements_io thm
R26006:26007 Coq.Lists.List <> In def
R26020:26028 Maps PTree xelements def
R26033:26034 Coq.NArith.BinPos <> xO constr
R26009:26009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26014:26015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26017:26017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26010:26011 Coq.NArith.BinPos <> xI constr
R26054:26065 Maps PTree xelements_io thm
R26130:26139 Maps PTree get_xget_h thm
R26130:26139 Maps PTree get_xget_h thm
R26160:26171 Maps PTree xelements_ih thm
R26160:26171 Maps PTree xelements_ih thm
R26202:26203 Coq.Lists.List <> In def
R26216:26224 Maps PTree xelements def
R26229:26230 Coq.NArith.BinPos <> xI constr
R26205:26205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26210:26211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26213:26213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26206:26207 Coq.NArith.BinPos <> xO constr
R26250:26261 Maps PTree xelements_oi thm
R26202:26203 Coq.Lists.List <> In def
R26216:26224 Maps PTree xelements def
R26229:26230 Coq.NArith.BinPos <> xI constr
R26205:26205 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26210:26211 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26213:26213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26206:26207 Coq.NArith.BinPos <> xO constr
R26250:26261 Maps PTree xelements_oi thm
R26288:26299 Maps PTree xelements_oo thm
R26288:26299 Maps PTree xelements_oo thm
R26370:26379 Maps PTree get_xget_h thm
R26370:26379 Maps PTree get_xget_h thm
R26400:26411 Maps PTree xelements_oh thm
R26400:26411 Maps PTree xelements_oh thm
R26442:26443 Coq.Lists.List <> In def
R26454:26462 Maps PTree xelements def
R26467:26468 Coq.NArith.BinPos <> xI constr
R26445:26445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26448:26449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26451:26451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26446:26447 Coq.NArith.BinPos <> xH constr
R26488:26499 Maps PTree xelements_hi thm
R26442:26443 Coq.Lists.List <> In def
R26454:26462 Maps PTree xelements def
R26467:26468 Coq.NArith.BinPos <> xI constr
R26445:26445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26448:26449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26451:26451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26446:26447 Coq.NArith.BinPos <> xH constr
R26488:26499 Maps PTree xelements_hi thm
R26517:26518 Coq.Lists.List <> In def
R26529:26537 Maps PTree xelements def
R26542:26543 Coq.NArith.BinPos <> xO constr
R26520:26520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26523:26524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26526:26526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26521:26522 Coq.NArith.BinPos <> xH constr
R26563:26574 Maps PTree xelements_ho thm
R26517:26518 Coq.Lists.List <> In def
R26529:26537 Maps PTree xelements def
R26542:26543 Coq.NArith.BinPos <> xO constr
R26520:26520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26523:26524 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26526:26526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26521:26522 Coq.NArith.BinPos <> xH constr
R26563:26574 Maps PTree xelements_ho thm
R26665:26673 Coq.Lists.List <> in_app_or thm
R26665:26673 Coq.Lists.List <> in_app_or thm
R26665:26673 Coq.Lists.List <> in_app_or thm
R26702:26703 Coq.Lists.List <> In def
R26714:26722 Maps PTree xelements def
R26728:26729 Coq.NArith.BinPos <> xO constr
R26731:26732 Coq.NArith.BinPos <> xH constr
R26705:26705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26708:26709 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26711:26711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26706:26707 Coq.NArith.BinPos <> xH constr
R26750:26761 Maps PTree xelements_ho thm
R26702:26703 Coq.Lists.List <> In def
R26714:26722 Maps PTree xelements def
R26728:26729 Coq.NArith.BinPos <> xO constr
R26731:26732 Coq.NArith.BinPos <> xH constr
R26705:26705 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26708:26709 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26711:26711 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26706:26707 Coq.NArith.BinPos <> xH constr
R26750:26761 Maps PTree xelements_ho thm
R26783:26788 Coq.Lists.List <> in_inv thm
R26783:26788 Coq.Lists.List <> in_inv thm
R26835:26836 Coq.Lists.List <> In def
R26847:26855 Maps PTree xelements def
R26861:26862 Coq.NArith.BinPos <> xI constr
R26864:26865 Coq.NArith.BinPos <> xH constr
R26838:26838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26841:26842 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26844:26844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26839:26840 Coq.NArith.BinPos <> xH constr
R26883:26894 Maps PTree xelements_hi thm
R26835:26836 Coq.Lists.List <> In def
R26847:26855 Maps PTree xelements def
R26861:26862 Coq.NArith.BinPos <> xI constr
R26864:26865 Coq.NArith.BinPos <> xH constr
R26838:26838 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26841:26842 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26844:26844 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26839:26840 Coq.NArith.BinPos <> xH constr
R26883:26894 Maps PTree xelements_hi thm
R26914:26915 Coq.Lists.List <> In def
R26926:26934 Maps PTree xelements def
R26940:26941 Coq.NArith.BinPos <> xO constr
R26943:26944 Coq.NArith.BinPos <> xH constr
R26917:26917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26920:26921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26923:26923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26918:26919 Coq.NArith.BinPos <> xH constr
R26962:26973 Maps PTree xelements_ho thm
R26914:26915 Coq.Lists.List <> In def
R26926:26934 Maps PTree xelements def
R26940:26941 Coq.NArith.BinPos <> xO constr
R26943:26944 Coq.NArith.BinPos <> xH constr
R26917:26917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26920:26921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26923:26923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26918:26919 Coq.NArith.BinPos <> xH constr
R26962:26973 Maps PTree xelements_ho thm
R26993:26994 Coq.Lists.List <> In def
R27005:27013 Maps PTree xelements def
R27019:27020 Coq.NArith.BinPos <> xI constr
R27022:27023 Coq.NArith.BinPos <> xH constr
R26996:26996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26999:27000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27002:27002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26997:26998 Coq.NArith.BinPos <> xH constr
R27041:27052 Maps PTree xelements_hi thm
R26993:26994 Coq.Lists.List <> In def
R27005:27013 Maps PTree xelements def
R27019:27020 Coq.NArith.BinPos <> xI constr
R27022:27023 Coq.NArith.BinPos <> xH constr
R26996:26996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26999:27000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27002:27002 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26997:26998 Coq.NArith.BinPos <> xH constr
R27041:27052 Maps PTree xelements_hi thm
prf 27075:27091 PTree elements_complete
R27183:27185 Coq.Init.Logic <> :type_scope:x_'='_x not
R27176:27178 Maps PTree get def
R27186:27189 Coq.Init.Datatypes <> Some constr
R27150:27151 Coq.Lists.List <> In def
R27161:27168 Maps PTree elements def
R27153:27153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27155:27156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27158:27158 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27128:27135 Coq.NArith.BinPos <> positive ind
R27119:27119 Maps PTree t def
R27263:27272 Maps PTree get_xget_h thm
R27263:27272 Maps PTree get_xget_h thm
R27286:27303 Maps PTree xelements_complete thm
R27307:27308 Coq.NArith.BinPos <> xH constr
R27286:27303 Maps PTree xelements_complete thm
R27307:27308 Coq.NArith.BinPos <> xH constr
prf 27334:27345 PTree in_xelements
R27439:27445 Coq.Init.Logic <> :type_scope:'exists'_x_','_x not
R27447:27448 Coq.Init.Logic <> :type_scope:'exists'_x_','_x not
R27450:27452 Coq.Init.Logic <> :type_scope:x_'='_x not
R27453:27458 Maps PTree append def
R27406:27407 Coq.Lists.List <> In def
R27417:27425 Maps PTree xelements def
R27409:27409 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27411:27412 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27414:27414 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27384:27391 Coq.NArith.BinPos <> positive ind
R27384:27391 Coq.NArith.BinPos <> positive ind
R27373:27373 Maps PTree t def
R27534:27537 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27530:27532 Coq.Init.Logic <> :type_scope:x_'='_x not
R27575:27596 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27538:27539 Coq.Lists.List <> In def
R27549:27557 Maps PTree xelements def
R27563:27568 Maps PTree append def
R27541:27541 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27543:27544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27546:27546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27597:27598 Coq.Lists.List <> In def
R27608:27616 Maps PTree xelements def
R27622:27627 Maps PTree append def
R27600:27600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27602:27603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27605:27605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27534:27537 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27530:27532 Coq.Init.Logic <> :type_scope:x_'='_x not
R27575:27596 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R27538:27539 Coq.Lists.List <> In def
R27549:27557 Maps PTree xelements def
R27563:27568 Maps PTree append def
R27541:27541 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27543:27544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27546:27546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27597:27598 Coq.Lists.List <> In def
R27608:27616 Maps PTree xelements def
R27622:27627 Maps PTree append def
R27600:27600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27602:27603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27605:27605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27667:27675 Coq.Lists.List <> in_app_or thm
R27667:27675 Coq.Lists.List <> in_app_or thm
R27760:27768 Coq.Lists.List <> in_app_or thm
R27760:27768 Coq.Lists.List <> in_app_or thm
R27829:27830 Coq.NArith.BinPos <> xH constr
R27829:27830 Coq.NArith.BinPos <> xH constr
R27841:27856 Maps PTree append_neutral_r thm
R27841:27856 Maps PTree append_neutral_r thm
R27952:27965 Maps PTree append_assoc_0 thm
R27952:27965 Maps PTree append_assoc_0 thm
R27976:27977 Coq.NArith.BinPos <> xO constr
R27976:27977 Coq.NArith.BinPos <> xO constr
R28057:28070 Maps PTree append_assoc_1 thm
R28057:28070 Maps PTree append_assoc_1 thm
R28081:28082 Coq.NArith.BinPos <> xI constr
R28081:28082 Coq.NArith.BinPos <> xI constr
def 28116:28120 PTree xkeys
R28136:28136 Maps PTree t def
R28145:28152 Coq.NArith.BinPos <> positive ind
R28162:28169 Coq.Lists.List <> map def
R28190:28198 Maps PTree xelements def
R28173:28175 Coq.Init.Datatypes <> fst def
R28177:28184 Coq.NArith.BinPos <> positive ind
prf 28215:28222 PTree in_xkeys
R28300:28306 Coq.Init.Logic <> :type_scope:'exists'_x_','_x not
R28308:28309 Coq.Init.Logic <> :type_scope:'exists'_x_','_x not
R28311:28313 Coq.Init.Logic <> :type_scope:x_'='_x not
R28314:28319 Maps PTree append def
R28276:28277 Coq.Lists.List <> In def
R28282:28286 Maps PTree xkeys def
R28261:28268 Coq.NArith.BinPos <> positive ind
R28261:28268 Coq.NArith.BinPos <> positive ind
R28250:28250 Maps PTree t def
R28372:28386 Coqlib <> list_in_map_inv thm
R28372:28386 Coqlib <> list_in_map_inv thm
R28455:28466 Maps PTree in_xelements thm
R28455:28466 Maps PTree in_xelements thm
prf 28504:28527 PTree list_append_cons_norepet
R28672:28683 Coqlib <> list_norepet ind
R28688:28691 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R28693:28696 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R28656:28656 Coq.Init.Logic <> :type_scope:'~'_x not
R28657:28658 Coq.Lists.List <> In def
R28644:28644 Coq.Init.Logic <> :type_scope:'~'_x not
R28645:28646 Coq.Lists.List <> In def
R28617:28629 Coqlib <> list_disjoint def
R28598:28609 Coqlib <> list_norepet ind
R28579:28590 Coqlib <> list_norepet ind
R28559:28562 Coq.Init.Datatypes <> list ind
R28559:28562 Coq.Init.Datatypes <> list ind
R28729:28754 Coqlib <> list_norepet_append_commut thm
R28729:28754 Coqlib <> list_norepet_append_commut thm
R28800:28808 Coq.Lists.List <> in_app_or thm
R28800:28808 Coq.Lists.List <> in_app_or thm
R28845:28863 Coqlib <> list_norepet_append thm
R28845:28863 Coqlib <> list_norepet_append thm
R28883:28899 Coqlib <> list_disjoint_sym thm
R28883:28899 Coqlib <> list_disjoint_sym thm
prf 28924:28939 PTree append_injective
R28993:28995 Coq.Init.Logic <> :type_scope:x_'='_x not
R28973:28975 Coq.Init.Logic <> :type_scope:x_'='_x not
R28962:28967 Maps PTree append def
R28976:28981 Maps PTree append def
prf 29121:29142 PTree xelements_keys_norepet
R29194:29205 Coqlib <> list_norepet ind
R29208:29212 Maps PTree xkeys def
R29179:29186 Coq.NArith.BinPos <> positive ind
R29170:29170 Maps PTree t def
R29272:29276 Maps PTree xkeys def
R29272:29276 Maps PTree xkeys def
R29272:29276 Maps PTree xkeys def
R29316:29328 Coqlib <> list_disjoint def
R29355:29359 Maps PTree xkeys def
R29365:29370 Maps PTree append def
R29331:29335 Maps PTree xkeys def
R29341:29346 Maps PTree append def
R29316:29328 Coqlib <> list_disjoint def
R29355:29359 Maps PTree xkeys def
R29365:29370 Maps PTree append def
R29331:29335 Maps PTree xkeys def
R29341:29346 Maps PTree append def
R29433:29440 Maps PTree in_xkeys thm
R29433:29440 Maps PTree in_xkeys thm
R29479:29486 Maps PTree in_xkeys thm
R29479:29486 Maps PTree in_xkeys thm
R29558:29571 Maps PTree append_assoc_0 thm
R29558:29571 Maps PTree append_assoc_0 thm
R29599:29612 Maps PTree append_assoc_1 thm
R29599:29612 Maps PTree append_assoc_1 thm
R29641:29656 Maps PTree append_injective thm
R29641:29656 Maps PTree append_injective thm
R29773:29773 Coq.Init.Logic <> :type_scope:'~'_x not
R29774:29775 Coq.Lists.List <> In def
R29780:29784 Maps PTree xkeys def
R29789:29794 Maps PTree append def
R29739:29742 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29726:29728 Coq.Init.Logic <> :type_scope:x_'='_x not
R29744:29746 Coq.Init.Logic <> :type_scope:x_'='_x not
R29705:29705 Maps PTree t def
R29773:29773 Coq.Init.Logic <> :type_scope:'~'_x not
R29774:29775 Coq.Lists.List <> In def
R29780:29784 Maps PTree xkeys def
R29789:29794 Maps PTree append def
R29739:29742 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29726:29728 Coq.Init.Logic <> :type_scope:x_'='_x not
R29744:29746 Coq.Init.Logic <> :type_scope:x_'='_x not
R29705:29705 Maps PTree t def
R29844:29851 Maps PTree in_xkeys thm
R29844:29851 Maps PTree in_xkeys thm
R29907:29909 Coq.Init.Logic <> :type_scope:x_'='_x not
R29896:29901 Maps PTree append def
R29905:29906 Coq.NArith.BinPos <> xH constr
R29910:29915 Maps PTree append def
R29918:29923 Maps PTree append def
R29907:29909 Coq.Init.Logic <> :type_scope:x_'='_x not
R29896:29901 Maps PTree append def
R29905:29906 Coq.NArith.BinPos <> xH constr
R29910:29915 Maps PTree append def
R29918:29923 Maps PTree append def
R29950:29965 Maps PTree append_neutral_r thm
R29950:29965 Maps PTree append_neutral_r thm
R30027:30040 Maps PTree append_assoc_0 thm
R30073:30086 Maps PTree append_assoc_1 thm
R30115:30130 Maps PTree append_injective thm
R30027:30040 Maps PTree append_assoc_0 thm
R30027:30040 Maps PTree append_assoc_0 thm
R30073:30086 Maps PTree append_assoc_1 thm
R30073:30086 Maps PTree append_assoc_1 thm
R30115:30130 Maps PTree append_injective thm
R30115:30130 Maps PTree append_injective thm
R30180:30194 Coqlib <> list_append_map thm
R30284:30288 Maps PTree xkeys def
R30294:30299 Maps PTree append def
R30216:30223 Coq.Lists.List <> map def
R30244:30252 Maps PTree xelements def
R30258:30263 Maps PTree append def
R30227:30229 Coq.Init.Datatypes <> fst def
R30231:30238 Coq.NArith.BinPos <> positive ind
R30388:30392 Maps PTree xkeys def
R30398:30403 Maps PTree append def
R30320:30327 Coq.Lists.List <> map def
R30348:30356 Maps PTree xelements def
R30362:30367 Maps PTree append def
R30331:30333 Coq.Init.Datatypes <> fst def
R30335:30342 Coq.NArith.BinPos <> positive ind
R30180:30194 Coqlib <> list_append_map thm
R30180:30194 Coqlib <> list_append_map thm
R30216:30223 Coq.Lists.List <> map def
R30244:30252 Maps PTree xelements def
R30258:30263 Maps PTree append def
R30227:30229 Coq.Init.Datatypes <> fst def
R30231:30238 Coq.NArith.BinPos <> positive ind
R30284:30288 Maps PTree xkeys def
R30294:30299 Maps PTree append def
R30216:30223 Coq.Lists.List <> map def
R30244:30252 Maps PTree xelements def
R30258:30263 Maps PTree append def
R30227:30229 Coq.Init.Datatypes <> fst def
R30231:30238 Coq.NArith.BinPos <> positive ind
R30284:30288 Maps PTree xkeys def
R30294:30299 Maps PTree append def
R30320:30327 Coq.Lists.List <> map def
R30348:30356 Maps PTree xelements def
R30362:30367 Maps PTree append def
R30331:30333 Coq.Init.Datatypes <> fst def
R30335:30342 Coq.NArith.BinPos <> positive ind
R30388:30392 Maps PTree xkeys def
R30398:30403 Maps PTree append def
R30320:30327 Coq.Lists.List <> map def
R30348:30356 Maps PTree xelements def
R30362:30367 Maps PTree append def
R30331:30333 Coq.Init.Datatypes <> fst def
R30335:30342 Coq.NArith.BinPos <> positive ind
R30388:30392 Maps PTree xkeys def
R30398:30403 Maps PTree append def
R30422:30445 Maps PTree list_append_cons_norepet thm
R30422:30445 Maps PTree list_append_cons_norepet thm
R30465:30483 Coqlib <> list_norepet_append thm
R30465:30483 Coqlib <> list_norepet_append thm
prf 30510:30530 PTree elements_keys_norepet
R30569:30580 Coqlib <> list_norepet ind
R30583:30590 Coq.Lists.List <> map def
R30606:30613 Maps PTree elements def
R30594:30596 Coq.Init.Datatypes <> fst def
R30598:30600 Maps PTree elt def
R30558:30558 Maps PTree t def
R30649:30660 Coqlib <> list_norepet ind
R30663:30667 Maps PTree xkeys def
R30649:30660 Coqlib <> list_norepet ind
R30663:30667 Maps PTree xkeys def
R30682:30703 Maps PTree xelements_keys_norepet thm
R30682:30703 Maps PTree xelements_keys_norepet thm
def 30882:30886 PTree xfold
R30909:30916 Coq.NArith.BinPos <> positive ind
R30950:30957 Coq.NArith.BinPos <> positive ind
R30964:30964 Maps PTree t def
R31017:31020 Maps PTree Leaf constr
R31033:31036 Maps PTree Node constr
R31040:31043 Coq.Init.Datatypes <> None constr
R31110:31114 Maps <> xfold def
R31119:31124 Maps PTree append def
R31129:31130 Coq.NArith.BinPos <> xI constr
R31132:31133 Coq.NArith.BinPos <> xH constr
R31068:31072 Maps <> xfold def
R31077:31082 Maps PTree append def
R31087:31088 Coq.NArith.BinPos <> xO constr
R31090:31091 Coq.NArith.BinPos <> xH constr
R31148:31151 Maps PTree Node constr
R31156:31159 Coq.Init.Datatypes <> Some constr
R31259:31263 Maps <> xfold def
R31268:31273 Maps PTree append def
R31278:31279 Coq.NArith.BinPos <> xI constr
R31281:31282 Coq.NArith.BinPos <> xH constr
R31187:31191 Maps <> xfold def
R31196:31201 Maps PTree append def
R31206:31207 Coq.NArith.BinPos <> xO constr
R31209:31210 Coq.NArith.BinPos <> xH constr
def 31314:31317 PTree fold
R31341:31348 Coq.NArith.BinPos <> positive ind
R31365:31365 Maps PTree t def
R31384:31388 Maps PTree xfold def
R31392:31393 Coq.NArith.BinPos <> xH constr
prf 31409:31423 PTree xfold_xelements
R31502:31508 Coq.Init.Logic <> :type_scope:x_'='_x not
R31489:31493 Maps PTree xfold def
R31509:31522 Coq.Lists.List <> fold_left def
R31577:31585 Maps PTree xelements def
R31549:31551 Coq.Init.Datatypes <> snd def
R31541:31543 Coq.Init.Datatypes <> fst def
R31458:31465 Coq.NArith.BinPos <> positive ind
R31700:31712 Coq.Lists.List <> fold_left_app thm
R31700:31712 Coq.Lists.List <> fold_left_app thm
R31766:31778 Coq.Lists.List <> fold_left_app thm
R31766:31778 Coq.Lists.List <> fold_left_app thm
prf 31836:31844 PTree fold_spec
R31930:31936 Coq.Init.Logic <> :type_scope:x_'='_x not
R31920:31923 Maps PTree fold def
R31937:31950 Coq.Lists.List <> fold_left def
R31986:31993 Maps PTree elements def
R31977:31979 Coq.Init.Datatypes <> snd def
R31969:31971 Coq.Init.Datatypes <> fst def
R31910:31910 Maps PTree t def
R31879:31886 Coq.NArith.BinPos <> positive ind
R32051:32065 Maps PTree xfold_xelements thm
R32051:32065 Maps PTree xfold_xelements thm
R32081:32085 Maps <> <> mod
R32161:32163 Maps <> <> mod
mod 32153:32156 <> PMap
def 32179:32181 PMap elt
R32186:32193 Coq.NArith.BinPos <> positive ind
def 32209:32214 PMap elt_eq
R32219:32221 Coqlib <> peq def
def 32238:32238 PMap t
R32263:32265 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R32266:32272 Maps PTree t def
def 32297:32298 PMap eq
R32392:32392 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R32398:32402 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R32409:32409 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R32394:32396 Coq.Init.Logic <> :type_scope:x_'='_x not
R32404:32407 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32386:32386 Maps PMap t def
R32386:32386 Maps PMap t def
R32337:32337 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R32341:32345 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R32350:32350 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R32339:32339 Coq.Init.Logic <> :type_scope:x_'='_x not
R32347:32348 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R32450:32457 Maps PTree eq thm
R32450:32457 Maps PTree eq thm
def 32514:32517 PMap init
R32545:32545 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32547:32548 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32562:32562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32549:32559 Maps PTree empty def
def 32579:32581 PMap get
R32599:32606 Coq.NArith.BinPos <> positive ind
R32614:32614 Maps PMap t def
R32632:32640 Maps PTree get def
R32645:32647 Coq.Init.Datatypes <> snd def
R32663:32666 Coq.Init.Datatypes <> Some constr
R32681:32684 Coq.Init.Datatypes <> None constr
R32689:32691 Coq.Init.Datatypes <> fst def
def 32718:32720 PMap set
R32738:32745 Coq.NArith.BinPos <> positive ind
R32761:32761 Maps PMap t def
R32773:32773 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32779:32780 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32802:32802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32774:32776 Coq.Init.Datatypes <> fst def
R32781:32789 Maps PTree set def
R32796:32798 Coq.Init.Datatypes <> snd def
prf 32816:32817 PMap gi
R32877:32879 Coq.Init.Logic <> :type_scope:x_'='_x not
R32863:32865 Maps PMap get def
R32870:32873 Maps PMap init def
R32845:32852 Coq.NArith.BinPos <> positive ind
R32944:32955 Maps PTree gempty thm
R32944:32955 Maps PTree gempty thm
prf 32982:32984 PMap gss
R33056:33058 Coq.Init.Logic <> :type_scope:x_'='_x not
R33039:33041 Maps PMap get def
R33046:33048 Maps PMap set def
R33033:33033 Maps PMap t def
R33012:33019 Coq.NArith.BinPos <> positive ind
R33122:33130 Maps PTree gss thm
R33122:33130 Maps PTree gss thm
prf 33157:33159 PMap gso
R33247:33249 Coq.Init.Logic <> :type_scope:x_'='_x not
R33230:33232 Maps PMap get def
R33237:33239 Maps PMap set def
R33250:33252 Maps PMap get def
R33221:33224 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R33210:33210 Maps PMap t def
R33189:33196 Coq.NArith.BinPos <> positive ind
R33189:33196 Coq.NArith.BinPos <> positive ind
R33319:33327 Maps PTree gso thm
R33319:33327 Maps PTree gso thm
prf 33354:33359 PMap gsspec
R33437:33439 Coq.Init.Logic <> :type_scope:x_'='_x not
R33420:33422 Maps PMap get def
R33427:33429 Maps PMap set def
R33443:33445 Coqlib <> peq def
R33463:33465 Maps PMap get def
R33410:33410 Maps PMap t def
R33389:33396 Coq.NArith.BinPos <> positive ind
R33389:33396 Coq.NArith.BinPos <> positive ind
R33503:33505 Coqlib <> peq def
R33503:33505 Coqlib <> peq def
R33535:33537 Maps PMap gss thm
R33535:33537 Maps PMap gss thm
R33557:33559 Maps PMap gso thm
R33557:33559 Maps PMap gso thm
prf 33586:33592 PMap gsident
R33671:33673 Coq.Init.Logic <> :type_scope:x_'='_x not
R33646:33648 Maps PMap get def
R33653:33655 Maps PMap set def
R33660:33662 Maps PMap get def
R33674:33676 Maps PMap get def
R33636:33636 Maps PMap t def
R33622:33629 Coq.NArith.BinPos <> positive ind
R33622:33629 Coq.NArith.BinPos <> positive ind
R33714:33716 Coqlib <> peq def
R33714:33716 Coqlib <> peq def
R33748:33750 Maps PMap gss thm
R33748:33750 Maps PMap gss thm
R33772:33774 Maps PMap gso thm
R33772:33774 Maps PMap gso thm
def 33804:33806 PMap map
R33839:33839 Maps PMap t def
R33846:33846 Maps PMap t def
R33857:33857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33867:33868 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33899:33899 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R33861:33863 Coq.Init.Datatypes <> fst def
R33869:33877 Maps PTree map def
R33893:33895 Coq.Init.Datatypes <> snd def
prf 33913:33916 PMap gmap
R33997:33999 Coq.Init.Logic <> :type_scope:x_'='_x not
R33982:33984 Maps PMap get def
R33989:33991 Maps PMap map def
R34002:34004 Maps PMap get def
R33972:33972 Maps PMap t def
R33958:33965 Coq.NArith.BinPos <> positive ind
R34072:34081 Maps PTree gmap thm
R34072:34081 Maps PTree gmap thm
R34117:34125 Maps PTree get def
R34130:34132 Coq.Init.Datatypes <> snd def
R34117:34125 Maps PTree get def
R34130:34132 Coq.Init.Datatypes <> snd def
R34157:34160 Maps <> <> mod
modtype 34260:34271 <> INDEXED_TYPE
var 34285:34285 INDEXED_TYPE t
var 34305:34309 INDEXED_TYPE index
R34317:34324 Coq.NArith.BinPos <> positive ind
R34312:34312 Maps INDEXED_TYPE t defax
var 34340:34348 INDEXED_TYPE index_inj
R34390:34392 Coq.Init.Logic <> :type_scope:x_'='_x not
R34375:34377 Coq.Init.Logic <> :type_scope:x_'='_x not
R34368:34372 Maps INDEXED_TYPE index defax
R34378:34382 Maps INDEXED_TYPE index defax
R34364:34364 Maps INDEXED_TYPE t defax
R34364:34364 Maps INDEXED_TYPE t defax
var 34407:34408 INDEXED_TYPE eq
R34428:34428 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34434:34438 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34445:34445 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34430:34432 Coq.Init.Logic <> :type_scope:x_'='_x not
R34440:34443 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R34424:34424 Maps INDEXED_TYPE t defax
R34424:34424 Maps INDEXED_TYPE t defax
R34452:34463 Maps <> <> modtype
R34482:34493 Maps <> <> mod
mod 34474:34477 <> IMap
def 34511:34513 IMap elt
R34518:34520 Maps X t defax
def 34536:34541 IMap elt_eq
R34546:34549 Maps X eq defax
def 34565:34565 IMap t
R34585:34590 Maps PMap t def
def 34606:34607 IMap eq
R34701:34701 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34707:34711 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34718:34718 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34703:34705 Coq.Init.Logic <> :type_scope:x_'='_x not
R34713:34716 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R34695:34695 Maps IMap t def
R34695:34695 Maps IMap t def
R34646:34646 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34650:34654 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34659:34659 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R34648:34648 Coq.Init.Logic <> :type_scope:x_'='_x not
R34656:34657 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R34723:34729 Maps PMap eq def
def 34745:34748 IMap init
R34770:34778 Maps PMap init def
def 34796:34798 IMap get
R34814:34816 Maps X t defax
R34823:34823 Maps IMap t def
R34831:34838 Maps PMap get def
R34841:34847 Maps X index defax
def 34868:34870 IMap set
R34886:34888 Maps X t defax
R34902:34902 Maps IMap t def
R34910:34917 Maps PMap set def
R34920:34926 Maps X index defax
def 34949:34951 IMap map
R34981:34981 Maps IMap t def
R34988:34988 Maps IMap t def
R34995:35002 Maps PMap map def
prf 35018:35019 IMap gi
R35074:35076 Coq.Init.Logic <> :type_scope:x_'='_x not
R35060:35062 Maps IMap get def
R35067:35070 Maps IMap init def
R35054:35056 Maps X t defax
R35125:35131 Maps PMap gi thm
R35125:35131 Maps PMap gi thm
prf 35151:35153 IMap gss
R35220:35222 Coq.Init.Logic <> :type_scope:x_'='_x not
R35203:35205 Maps IMap get def
R35210:35212 Maps IMap set def
R35197:35197 Maps IMap t def
R35181:35183 Maps X t defax
R35270:35277 Maps PMap gss thm
R35270:35277 Maps PMap gss thm
prf 35296:35298 IMap gso
R35381:35383 Coq.Init.Logic <> :type_scope:x_'='_x not
R35364:35366 Maps IMap get def
R35371:35373 Maps IMap set def
R35384:35386 Maps IMap get def
R35355:35358 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R35344:35344 Maps IMap t def
R35328:35330 Maps X t defax
R35328:35330 Maps X t defax
R35437:35444 Maps PMap gso thm
R35437:35444 Maps PMap gso thm
R35479:35489 Maps X index_inj prfax
R35479:35489 Maps X index_inj prfax
prf 35515:35520 IMap gsspec
R35593:35595 Coq.Init.Logic <> :type_scope:x_'='_x not
R35576:35578 Maps IMap get def
R35583:35585 Maps IMap set def
R35599:35602 Maps X eq defax
R35620:35622 Maps IMap get def
R35566:35566 Maps IMap t def
R35550:35552 Maps X t defax
R35550:35552 Maps X t defax
R35680:35690 Maps PMap gsspec thm
R35680:35690 Maps PMap gsspec thm
R35703:35706 Maps X eq defax
R35703:35706 Maps X eq defax
R35742:35749 Coqlib <> peq_true thm
R35742:35749 Coqlib <> peq_true thm
R35777:35785 Coqlib <> peq_false thm
R35777:35785 Coqlib <> peq_false thm
R35832:35842 Maps X index_inj prfax
R35832:35842 Maps X index_inj prfax
prf 35867:35870 IMap gmap
R35946:35948 Coq.Init.Logic <> :type_scope:x_'='_x not
R35931:35933 Maps IMap get def
R35938:35940 Maps IMap map def
R35951:35953 Maps IMap get def
R35921:35921 Maps IMap t def
R35912:35914 Maps X t defax
R36005:36013 Maps PMap gmap thm
R36005:36013 Maps PMap gmap thm
R36029:36032 Maps <> <> mod
mod 36043:36050 <> ZIndexed
def 36066:36066 ZIndexed t
R36071:36071 Coq.ZArith.BinInt <> Z ind
def 36087:36091 ZIndexed index
R36097:36097 Coq.ZArith.BinInt <> Z ind
R36101:36108 Coq.NArith.BinPos <> positive ind
R36136:36137 Coq.ZArith.BinInt <> Z0 constr
R36142:36143 Coq.NArith.BinPos <> xH constr
R36151:36154 Coq.ZArith.BinInt <> Zpos constr
R36161:36162 Coq.NArith.BinPos <> xO constr
R36172:36175 Coq.ZArith.BinInt <> Zneg constr
R36182:36183 Coq.NArith.BinPos <> xI constr
prf 36204:36212 ZIndexed index_inj
R36254:36256 Coq.Init.Logic <> :type_scope:x_'='_x not
R36239:36241 Coq.Init.Logic <> :type_scope:x_'='_x not
R36232:36236 Maps ZIndexed index def
R36242:36246 Maps ZIndexed index def
R36228:36228 Coq.ZArith.BinInt <> Z ind
R36228:36228 Coq.ZArith.BinInt <> Z ind
def 36410:36411 ZIndexed eq
R36416:36418 Coqlib <> zeq def
R36425:36432 Maps <> <> mod
R36451:36454 Maps <> <> modtype
R36456:36463 Maps <> <> modtype
mod 36443:36446 <> ZMap
mod 36475:36482 <> NIndexed
def 36498:36498 NIndexed t
R36503:36503 Coq.NArith.BinNat <> N ind
def 36519:36523 NIndexed index
R36529:36529 Coq.NArith.BinNat <> N ind
R36533:36540 Coq.NArith.BinPos <> positive ind
R36568:36569 Coq.NArith.BinNat <> N0 constr
R36574:36575 Coq.NArith.BinPos <> xH constr
R36583:36586 Coq.NArith.BinNat <> Npos constr
R36593:36594 Coq.NArith.BinPos <> xO constr
prf 36615:36623 NIndexed index_inj
R36665:36667 Coq.Init.Logic <> :type_scope:x_'='_x not
R36650:36652 Coq.Init.Logic <> :type_scope:x_'='_x not
R36643:36647 Maps NIndexed index def
R36653:36657 Maps NIndexed index def
R36639:36639 Coq.NArith.BinNat <> N ind
R36639:36639 Coq.NArith.BinNat <> N ind
prf 36800:36801 NIndexed eq
R36821:36821 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36827:36831 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36838:36838 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36823:36825 Coq.Init.Logic <> :type_scope:x_'='_x not
R36833:36836 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36817:36817 Coq.NArith.BinNat <> N ind
R36817:36817 Coq.NArith.BinNat <> N ind
R36877:36879 Coqlib <> peq def
R36877:36879 Coqlib <> peq def
R36893:36900 Maps <> <> mod
R36919:36922 Maps <> <> modtype
R36924:36931 Maps <> <> modtype
mod 36911:36914 <> NMap
modtype 37022:37034 <> EQUALITY_TYPE
var 37048:37048 EQUALITY_TYPE t
var 37068:37069 EQUALITY_TYPE eq
R37089:37089 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37095:37099 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37106:37106 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R37091:37093 Coq.Init.Logic <> :type_scope:x_'='_x not
R37101:37104 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37085:37085 Maps EQUALITY_TYPE t defax
R37085:37085 Maps EQUALITY_TYPE t defax
R37113:37125 Maps <> <> modtype
R37144:37156 Maps <> <> mod
R37162:37164 Maps <> <> mod
mod 37136:37139 <> EMap
def 37181:37183 EMap elt
R37188:37190 Maps X t defax
def 37206:37211 EMap elt_eq
R37216:37219 Maps X eq defax
def 37235:37235 EMap t
R37250:37252 Maps X t defax
def 37273:37276 EMap init
R37306:37308 Maps X t defax
def 37330:37332 EMap get
R37348:37350 Maps X t defax
R37357:37357 Maps EMap t def
def 37383:37385 EMap set
R37401:37403 Maps X t defax
R37417:37417 Maps EMap t def
R37448:37451 Maps X eq defax
R37437:37439 Maps X t defax
prf 37482:37483 EMap gi
R37532:37534 Coq.Init.Logic <> :type_scope:x_'='_x not
R37524:37527 Maps EMap init def
R37511:37513 Maps EMap elt def
prf 37587:37589 EMap gss
R37652:37654 Coq.Init.Logic <> :type_scope:x_'='_x not
R37640:37642 Maps EMap set def
R37633:37633 Maps EMap t def
R37617:37619 Maps EMap elt def
R37697:37700 Maps X eq defax
R37697:37700 Maps X eq defax
prf 37754:37756 EMap gso
R37835:37837 Coq.Init.Logic <> :type_scope:x_'='_x not
R37823:37825 Maps EMap set def
R37813:37816 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R37802:37802 Maps EMap t def
R37786:37788 Maps EMap elt def
R37786:37788 Maps EMap elt def
R37882:37885 Maps X eq defax
R37882:37885 Maps X eq defax
prf 37944:37949 EMap gsspec
R38022:38024 Coq.Init.Logic <> :type_scope:x_'='_x not
R38005:38007 Maps EMap get def
R38012:38014 Maps EMap set def
R38028:38033 Maps EMap elt_eq def
R38051:38053 Maps EMap get def
R37995:37995 Maps EMap t def
R37979:37981 Maps EMap elt def
R37979:37981 Maps EMap elt def
prf 38134:38140 EMap gsident
R38210:38212 Coq.Init.Logic <> :type_scope:x_'='_x not
R38185:38187 Maps EMap get def
R38192:38194 Maps EMap set def
R38199:38201 Maps EMap get def
R38213:38215 Maps EMap get def
R38179:38179 Maps EMap t def
R38170:38172 Maps EMap elt def
R38170:38172 Maps EMap elt def
R38266:38269 Maps X eq defax
R38266:38269 Maps X eq defax
def 38333:38335 EMap map
R38365:38365 Maps EMap t def
R38385:38387 Maps X t defax
prf 38409:38412 EMap gmap
R38488:38490 Coq.Init.Logic <> :type_scope:x_'='_x not
R38473:38475 Maps EMap get def
R38480:38482 Maps EMap map def
R38493:38495 Maps EMap get def
R38463:38463 Maps EMap t def
R38454:38456 Maps EMap elt def
R38565:38568 Maps <> <> mod
R38641:38644 Maps <> <> mod
mod 38622:38636 <> Tree_Properties
sec 38701:38713 Tree_Properties TREE_FOLD_IND
var 38727:38727 Tree_Properties.TREE_FOLD_IND V
var 38729:38729 Tree_Properties.TREE_FOLD_IND A
var 38747:38747 Tree_Properties.TREE_FOLD_IND f
R38769:38769 Maps <> Tree_Properties.TREE_FOLD_IND.A var
R38764:38764 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R38755:38759 Maps T elt defax
R38750:38750 Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 38781:38781 Tree_Properties.TREE_FOLD_IND P
R38793:38793 Maps <> Tree_Properties.TREE_FOLD_IND.A var
R38784:38786 Maps T t defax
R38788:38788 Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 38813:38816 Tree_Properties.TREE_FOLD_IND init
R38819:38819 Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 38831:38837 Tree_Properties.TREE_FOLD_IND m_final
R38840:38842 Maps T t defax
R38844:38844 Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 38859:38866 Tree_Properties.TREE_FOLD_IND P_compat
R38937:38937 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R38928:38928 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R38908:38910 Coq.Init.Logic <> :type_scope:x_'='_x not
R38899:38903 Maps T get defax
R38911:38915 Maps T get defax
var 38957:38962 Tree_Properties.TREE_FOLD_IND H_base
R38968:38968 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R38982:38985 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R38971:38977 Maps T empty defax
var 39000:39004 Tree_Properties.TREE_FOLD_IND H_rec
R39084:39084 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R39101:39101 Maps <> Tree_Properties.TREE_FOLD_IND.f var
R39087:39091 Maps T set defax
R39075:39075 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R39062:39064 Coq.Init.Logic <> :type_scope:x_'='_x not
R39047:39051 Maps T get defax
R39055:39061 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R39065:39068 Coq.Init.Datatypes <> Some constr
R39036:39038 Coq.Init.Logic <> :type_scope:x_'='_x not
R39027:39031 Maps T get defax
R39039:39042 Coq.Init.Datatypes <> None constr
def 39123:39124 Tree_Properties f'
R39130:39130 Maps <> Tree_Properties.TREE_FOLD_IND.A var
R39143:39145 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39138:39142 Maps T elt defax
R39146:39146 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R39152:39152 Maps <> Tree_Properties.TREE_FOLD_IND.f var
R39165:39167 Coq.Init.Datatypes <> snd def
R39157:39159 Coq.Init.Datatypes <> fst def
def 39185:39186 Tree_Properties P'
R39192:39195 Coq.Init.Datatypes <> list ind
R39203:39205 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R39198:39202 Maps T elt defax
R39206:39206 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R39214:39214 Maps <> Tree_Properties.TREE_FOLD_IND.A var
R39270:39270 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R39239:39248 Coqlib <> list_equiv def
R39253:39262 Maps T elements defax
prf 39285:39291 Tree_Properties H_base'
R39296:39297 Maps Tree_Properties P' def
R39303:39306 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R39299:39301 Coq.Init.Datatypes <> nil constr
R39352:39358 Maps T empty defax
R39337:39344 Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R39352:39358 Maps T empty defax
R39337:39344 Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R39388:39395 Maps T gempty prfax
R39388:39395 Maps T gempty prfax
R39417:39421 Maps T get defax
R39417:39421 Maps T get defax
R39453:39454 Coq.Lists.List <> In def
R39463:39465 Coq.Init.Datatypes <> nil constr
R39456:39456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39458:39459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39461:39461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39453:39454 Coq.Lists.List <> In def
R39463:39465 Coq.Init.Datatypes <> nil constr
R39456:39456 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39458:39459 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39461:39461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39480:39480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39482:39483 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39485:39485 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39480:39480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39482:39483 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39485:39485 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39495:39512 Maps T elements_correct prfax
R39495:39512 Maps T elements_correct prfax
prf 39551:39556 Tree_Properties H_rec'
R39666:39667 Maps Tree_Properties P' def
R39691:39691 Maps <> Tree_Properties.TREE_FOLD_IND.f var
R39671:39674 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R39681:39684 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R39675:39675 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39677:39678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39680:39680 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39685:39687 Coq.Init.Datatypes <> nil constr
R39654:39655 Maps Tree_Properties P' def
R39618:39619 Coq.Lists.List <> In def
R39629:39638 Maps T elements defax
R39640:39646 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R39621:39621 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39623:39624 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39626:39626 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39579:39579 Coq.Init.Logic <> :type_scope:'~'_x not
R39580:39581 Coq.Lists.List <> In def
R39586:39593 Coq.Lists.List <> map def
R39597:39599 Coq.Init.Datatypes <> fst def
R39607:39607 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R39601:39605 Maps T elt defax
R39744:39751 Maps T remove defax
R39744:39751 Maps T remove defax
R39783:39787 Maps T set defax
R39768:39775 Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R39783:39787 Maps T set defax
R39768:39775 Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R39829:39836 Maps T gsspec prfax
R39829:39836 Maps T gsspec prfax
R39849:39856 Maps T elt_eq defax
R39849:39856 Maps T elt_eq defax
R39884:39902 Maps T elements_complete prfax
R39884:39902 Maps T elements_complete prfax
R39920:39920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39922:39923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39925:39925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39920:39920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39922:39923 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39925:39925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39939:39947 Coq.Lists.List <> in_or_app thm
R39939:39947 Coq.Lists.List <> in_or_app thm
R39989:39993 Maps T gro prfax
R39989:39993 Maps T gro prfax
R40010:40014 Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R40010:40014 Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R40034:40038 Maps T grs prfax
R40034:40038 Maps T grs prfax
R40047:40065 Maps T elements_complete prfax
R40047:40065 Maps T elements_complete prfax
R40135:40152 Maps T elements_correct prfax
R40135:40152 Maps T elements_correct prfax
R40174:40178 Maps T gro prfax
R40174:40178 Maps T gro prfax
R40187:40205 Maps T elements_complete prfax
R40187:40205 Maps T elements_complete prfax
R40226:40226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40229:40230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40233:40233 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40226:40226 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40229:40230 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40233:40233 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40243:40251 Coq.Lists.List <> in_or_app thm
R40243:40251 Coq.Lists.List <> in_or_app thm
R40308:40310 Coq.Init.Datatypes <> fst def
R40312:40312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40314:40315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40318:40318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40308:40310 Coq.Init.Datatypes <> fst def
R40312:40312 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40314:40315 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40318:40318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40328:40333 Coq.Lists.List <> in_map thm
R40328:40333 Coq.Lists.List <> in_map thm
R40363:40365 Coq.Init.Logic <> :type_scope:x_'='_x not
R40352:40356 Maps T get defax
R40366:40369 Coq.Init.Datatypes <> Some constr
R40363:40365 Coq.Init.Logic <> :type_scope:x_'='_x not
R40352:40356 Maps T get defax
R40366:40369 Coq.Init.Datatypes <> Some constr
R40382:40400 Maps T elements_complete prfax
R40382:40400 Maps T elements_complete prfax
R40436:40443 Maps T grspec prfax
R40436:40443 Maps T grspec prfax
R40462:40469 Maps T elt_eq defax
R40462:40469 Maps T elt_eq defax
R40500:40501 Coq.Lists.List <> In def
R40513:40522 Maps T elements defax
R40503:40503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40506:40507 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40510:40510 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40500:40501 Coq.Lists.List <> In def
R40513:40522 Maps T elements defax
R40503:40503 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40506:40507 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40510:40510 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40535:40552 Maps T elements_correct prfax
R40535:40552 Maps T elements_correct prfax
R40578:40578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40581:40582 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40585:40585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40578:40578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40581:40582 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40585:40585 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40605:40613 Coq.Lists.List <> in_app_or thm
R40605:40613 Coq.Lists.List <> in_app_or thm
prf 40682:40693 Tree_Properties fold_rec_aux
R40899:40900 Maps Tree_Properties P' def
R40914:40927 Coq.Lists.List <> fold_left def
R40929:40930 Maps Tree_Properties f' def
R40905:40908 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40888:40889 Maps Tree_Properties P' def
R40841:40852 Coqlib <> list_norepet ind
R40855:40862 Coq.Lists.List <> map def
R40866:40868 Coq.Init.Datatypes <> fst def
R40876:40876 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R40870:40874 Maps T elt defax
R40764:40776 Coqlib <> list_disjoint def
R40808:40815 Coq.Lists.List <> map def
R40819:40821 Coq.Init.Datatypes <> fst def
R40829:40829 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R40823:40827 Maps T elt defax
R40779:40786 Coq.Lists.List <> map def
R40790:40792 Coq.Init.Datatypes <> fst def
R40800:40800 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R40794:40798 Maps T elt defax
R40716:40725 Coqlib <> list_equiv def
R40739:40748 Maps T elements defax
R40750:40756 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R40730:40733 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40990:41005 Coq.Lists.List <> app_nil_end thm
R40990:41005 Coq.Lists.List <> app_nil_end thm
R41088:41088 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41102:41106 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41095:41098 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41089:41089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41091:41092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41094:41094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41099:41101 Coq.Init.Datatypes <> nil constr
R41074:41077 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41068:41068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41070:41071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41073:41073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41074:41077 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41068:41068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41070:41071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41073:41073 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41088:41088 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41102:41106 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41095:41098 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41089:41089 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41091:41092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41094:41094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41099:41101 Coq.Init.Datatypes <> nil constr
R41123:41134 Coq.Lists.List <> app_ass syndef
R41123:41134 Coq.Lists.List <> app_ass syndef
R41159:41165 Coq.Lists.List <> app_ass syndef
R41159:41165 Coq.Lists.List <> app_ass syndef
R41197:41203 Coq.Lists.List <> map_app thm
R41197:41203 Coq.Lists.List <> map_app thm
R41222:41230 Coq.Lists.List <> in_app_or thm
R41222:41230 Coq.Lists.List <> in_app_or thm
R41343:41348 Maps Tree_Properties H_rec' thm
R41343:41348 Maps Tree_Properties H_rec' thm
R41364:41382 Coqlib <> list_disjoint_notin thm
R41364:41382 Coqlib <> list_disjoint_notin thm
R41420:41420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41422:41423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41425:41425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41420:41420 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41422:41423 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41425:41425 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41435:41443 Coq.Lists.List <> in_or_app thm
R41435:41443 Coq.Lists.List <> in_or_app thm
prf 41473:41480 Tree_Properties fold_rec
R41485:41485 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R41496:41501 Maps T fold defax
R41513:41516 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R41505:41511 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R41503:41503 Maps <> Tree_Properties.TREE_FOLD_IND.f var
R41487:41493 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R41545:41555 Maps T fold_spec prfax
R41545:41555 Maps T fold_spec prfax
R41563:41564 Maps Tree_Properties f' def
R41563:41564 Maps Tree_Properties f' def
R41577:41578 Maps Tree_Properties P' def
R41609:41622 Coq.Lists.List <> fold_left def
R41648:41651 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R41628:41637 Maps T elements defax
R41639:41645 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R41624:41625 Maps Tree_Properties f' def
R41584:41587 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41581:41583 Coq.Init.Datatypes <> nil constr
R41588:41597 Maps T elements defax
R41599:41605 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R41577:41578 Maps Tree_Properties P' def
R41609:41622 Coq.Lists.List <> fold_left def
R41648:41651 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R41628:41637 Maps T elements defax
R41639:41645 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R41624:41625 Maps Tree_Properties f' def
R41584:41587 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41581:41583 Coq.Init.Datatypes <> nil constr
R41588:41597 Maps T elements defax
R41599:41605 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R41666:41677 Maps Tree_Properties fold_rec_aux thm
R41666:41677 Maps Tree_Properties fold_rec_aux thm
R41754:41776 Maps T elements_keys_norepet prfax
R41754:41776 Maps T elements_keys_norepet prfax
R41790:41796 Maps Tree_Properties H_base' thm
R41790:41796 Maps Tree_Properties H_base' thm
R41863:41875 Maps Tree_Properties.TREE_FOLD_IND <> sec
R41883:41897 Maps <> <> mod
R41928:41942 Maps <> <> modtype
R41944:41948 Maps <> <> modtype
mod 41908:41923 <> PTree_Properties
R42001:42009 Maps PTree get def
not 41989 <> ::x_'!'_x
R42052:42059 Maps PMap get def
not 42039 <> ::x_'!!'_x
