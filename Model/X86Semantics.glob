FX86Semantics
R408:422 Coq.extraction.ExtrOcamlString <> <> lib
R433:450 Coq.extraction.ExtrOcamlNatBigInt <> <> lib
R461:476 Coq.extraction.ExtrOcamlZBigInt <> <> lib
R494:497 Coq.Lists.List <> <> lib
R515:518 Bits <> <> lib
R536:541 Coq.ZArith.ZArith <> <> lib
R559:564 Parser <> <> lib
R582:587 Decode <> <> lib
R605:610 Coq.Strings.String <> <> lib
R628:632 Monad <> <> lib
R650:653 Maps <> <> lib
R671:679 X86Syntax <> <> lib
R697:699 RTL <> <> lib
mod 764:774 <> X86_MACHINE
def 852:860 X86_MACHINE size_addr
R865:870 RTL <> size32 def
ind 885:888 X86_MACHINE flag
constr 899:900 X86_MACHINE ID
constr 904:906 X86_MACHINE VIP
constr 910:912 X86_MACHINE VIF
constr 916:917 X86_MACHINE AC
constr 921:922 X86_MACHINE VM
constr 926:927 X86_MACHINE RF
constr 931:932 X86_MACHINE NT
constr 936:939 X86_MACHINE IOPL
constr 943:944 X86_MACHINE OF
constr 948:949 X86_MACHINE DF
constr 956:962 X86_MACHINE IF_flag
constr 966:967 X86_MACHINE TF
constr 971:972 X86_MACHINE SF
constr 976:977 X86_MACHINE ZF
constr 981:982 X86_MACHINE AF
constr 986:987 X86_MACHINE PF
constr 991:992 X86_MACHINE CF
R901:901 X86Semantics <> flag ind
R907:907 X86Semantics <> flag ind
R913:913 X86Semantics <> flag ind
R918:918 X86Semantics <> flag ind
R923:923 X86Semantics <> flag ind
R928:928 X86Semantics <> flag ind
R933:933 X86Semantics <> flag ind
R940:940 X86Semantics <> flag ind
R945:945 X86Semantics <> flag ind
R950:950 X86Semantics <> flag ind
R963:963 X86Semantics <> flag ind
R968:968 X86Semantics <> flag ind
R973:973 X86Semantics <> flag ind
R978:978 X86Semantics <> flag ind
R983:983 X86Semantics <> flag ind
R988:988 X86Semantics <> flag ind
R993:993 X86Semantics <> flag ind
def 1009:1019 X86_MACHINE flag_eq_dec
R1043:1043 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1049:1051 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1058:1058 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1046:1046 Coq.Init.Logic <> :type_scope:x_'='_x not
R1054:1055 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R1036:1039 X86Semantics X86_MACHINE flag ind
R1036:1039 X86Semantics X86_MACHINE flag ind
ind 1113:1115 X86_MACHINE loc
constr 1138:1144 X86_MACHINE reg_loc
constr 1175:1191 X86_MACHINE seg_reg_start_loc
constr 1230:1246 X86_MACHINE seg_reg_limit_loc
constr 1285:1292 X86_MACHINE flag_loc
constr 1318:1337 X86_MACHINE control_register_loc
constr 1376:1393 X86_MACHINE debug_register_loc
constr 1430:1435 X86_MACHINE pc_loc
R1119:1121 Coq.Init.Datatypes <> nat ind
R1160:1162 X86Semantics <> loc ind
R1164:1169 RTL <> size32 def
R1148:1155 X86Syntax <> register ind
R1215:1217 X86Semantics <> loc ind
R1219:1224 RTL <> size32 def
R1195:1210 X86Syntax <> segment_register ind
R1270:1272 X86Semantics <> loc ind
R1274:1279 RTL <> size32 def
R1250:1265 X86Syntax <> segment_register ind
R1304:1306 X86Semantics <> loc ind
R1308:1312 RTL <> size1 def
R1296:1299 X86Semantics X86_MACHINE flag ind
R1361:1363 X86Semantics <> loc ind
R1365:1370 RTL <> size32 def
R1341:1356 X86Syntax <> control_register ind
R1415:1417 X86Semantics <> loc ind
R1419:1424 RTL <> size32 def
R1397:1410 X86Syntax <> debug_register ind
R1439:1441 X86Semantics <> loc ind
R1443:1448 RTL <> size32 def
def 1464:1471 X86_MACHINE location
R1476:1478 X86Semantics X86_MACHINE loc ind
def 1495:1498 X86_MACHINE fmap
def 1535:1537 X86_MACHINE upd
R1564:1564 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1568:1570 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1575:1575 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R1566:1566 Coq.Init.Logic <> :type_scope:x_'='_x not
R1572:1573 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R1583:1586 X86Semantics X86_MACHINE fmap def
R1612:1615 X86Semantics X86_MACHINE fmap def
def 1677:1680 X86_MACHINE look
R1689:1692 X86Semantics X86_MACHINE fmap def
rec 1727:1730 X86_MACHINE mach
proj 1742:1748 X86_MACHINE gp_regs
proj 1779:1793 X86_MACHINE seg_regs_starts
proj 1832:1846 X86_MACHINE seg_regs_limits
proj 1885:1893 X86_MACHINE flags_reg
proj 1919:1930 X86_MACHINE control_regs
proj 1969:1978 X86_MACHINE debug_regs
proj 2015:2020 X86_MACHINE pc_reg
R1752:1755 X86Semantics X86_MACHINE fmap def
R1766:1770 Bits <> int32 def
R1757:1764 X86Syntax <> register ind
R1797:1800 X86Semantics X86_MACHINE fmap def
R1819:1823 Bits <> int32 def
R1802:1817 X86Syntax <> segment_register ind
R1850:1853 X86Semantics X86_MACHINE fmap def
R1872:1876 Bits <> int32 def
R1855:1870 X86Syntax <> segment_register ind
R1897:1900 X86Semantics X86_MACHINE fmap def
R1907:1910 Bits <> int1 def
R1902:1905 X86Semantics X86_MACHINE flag ind
R1934:1937 X86Semantics X86_MACHINE fmap def
R1956:1960 Bits <> int32 def
R1939:1954 X86Syntax <> control_register ind
R1982:1985 X86Semantics X86_MACHINE fmap def
R2002:2006 Bits <> int32 def
R1987:2000 X86Syntax <> debug_register ind
R2024:2027 RTL <> wint def
R2029:2034 RTL <> size32 def
def 2055:2064 X86_MACHINE mach_state
R2069:2072 X86Semantics X86_MACHINE mach rec
def 2089:2100 X86_MACHINE get_location
R2107:2109 X86Semantics X86_MACHINE loc ind
R2117:2126 X86Semantics X86_MACHINE mach_state def
R2131:2134 RTL <> wint def
R2157:2159 X86Semantics X86_MACHINE loc ind
R2171:2174 RTL <> wint def
R2193:2199 X86Semantics X86_MACHINE reg_loc constr
R2206:2209 X86Semantics X86_MACHINE look def
R2212:2218 X86Semantics X86_MACHINE gp_regs proj
R2233:2249 X86Semantics X86_MACHINE seg_reg_start_loc constr
R2256:2259 X86Semantics X86_MACHINE look def
R2262:2276 X86Semantics X86_MACHINE seg_regs_starts proj
R2291:2307 X86Semantics X86_MACHINE seg_reg_limit_loc constr
R2314:2317 X86Semantics X86_MACHINE look def
R2320:2334 X86Semantics X86_MACHINE seg_regs_limits proj
R2349:2356 X86Semantics X86_MACHINE flag_loc constr
R2363:2366 X86Semantics X86_MACHINE look def
R2369:2377 X86Semantics X86_MACHINE flags_reg proj
R2392:2411 X86Semantics X86_MACHINE control_register_loc constr
R2418:2421 X86Semantics X86_MACHINE look def
R2424:2435 X86Semantics X86_MACHINE control_regs proj
R2450:2467 X86Semantics X86_MACHINE debug_register_loc constr
R2474:2477 X86Semantics X86_MACHINE look def
R2480:2489 X86Semantics X86_MACHINE debug_regs proj
R2504:2509 X86Semantics X86_MACHINE pc_loc constr
R2514:2519 X86Semantics X86_MACHINE pc_reg proj
def 2546:2556 X86_MACHINE set_gp_regs
R2575:2852 X86Semantics X86_MACHINE Build_mach constr
R2845:2850 X86Semantics X86_MACHINE pc_reg proj
R2813:2822 X86Semantics X86_MACHINE debug_regs proj
R2775:2786 X86Semantics X86_MACHINE control_regs proj
R2738:2746 X86Semantics X86_MACHINE flags_reg proj
R2698:2712 X86Semantics X86_MACHINE seg_regs_limits proj
R2651:2665 X86Semantics X86_MACHINE seg_regs_starts proj
R2586:2588 X86Semantics X86_MACHINE upd def
R2607:2613 X86Semantics X86_MACHINE gp_regs proj
R2590:2604 X86Syntax <> register_eq_dec def
def 2877:2895 X86_MACHINE set_seg_regs_starts
R2914:3198 X86Semantics X86_MACHINE Build_mach constr
R3191:3196 X86Semantics X86_MACHINE pc_reg proj
R3159:3168 X86Semantics X86_MACHINE debug_regs proj
R3121:3132 X86Semantics X86_MACHINE control_regs proj
R3084:3092 X86Semantics X86_MACHINE flags_reg proj
R3044:3058 X86Semantics X86_MACHINE seg_regs_limits proj
R2963:2965 X86Semantics X86_MACHINE upd def
R2992:3006 X86Semantics X86_MACHINE seg_regs_starts proj
R2967:2989 X86Syntax <> segment_register_eq_dec def
R2925:2931 X86Semantics X86_MACHINE gp_regs proj
def 3223:3241 X86_MACHINE set_seg_regs_limits
R3260:3544 X86Semantics X86_MACHINE Build_mach constr
R3537:3542 X86Semantics X86_MACHINE pc_reg proj
R3505:3514 X86Semantics X86_MACHINE debug_regs proj
R3467:3478 X86Semantics X86_MACHINE control_regs proj
R3430:3438 X86Semantics X86_MACHINE flags_reg proj
R3355:3357 X86Semantics X86_MACHINE upd def
R3384:3398 X86Semantics X86_MACHINE seg_regs_limits proj
R3359:3381 X86Syntax <> segment_register_eq_dec def
R3309:3323 X86Semantics X86_MACHINE seg_regs_starts proj
R3271:3277 X86Semantics X86_MACHINE gp_regs proj
def 3569:3581 X86_MACHINE set_flags_reg
R3600:3871 X86Semantics X86_MACHINE Build_mach constr
R3864:3869 X86Semantics X86_MACHINE pc_reg proj
R3832:3841 X86Semantics X86_MACHINE debug_regs proj
R3794:3805 X86Semantics X86_MACHINE control_regs proj
R3735:3737 X86Semantics X86_MACHINE upd def
R3752:3760 X86Semantics X86_MACHINE flags_reg proj
R3739:3749 X86Semantics X86_MACHINE flag_eq_dec def
R3695:3709 X86Semantics X86_MACHINE seg_regs_limits proj
R3649:3663 X86Semantics X86_MACHINE seg_regs_starts proj
R3611:3617 X86Semantics X86_MACHINE gp_regs proj
def 3896:3911 X86_MACHINE set_control_regs
R3930:4214 X86Semantics X86_MACHINE Build_mach constr
R4207:4212 X86Semantics X86_MACHINE pc_reg proj
R4175:4184 X86Semantics X86_MACHINE debug_regs proj
R4103:4105 X86Semantics X86_MACHINE upd def
R4132:4143 X86Semantics X86_MACHINE control_regs proj
R4107:4129 X86Syntax <> control_register_eq_dec def
R4065:4073 X86Semantics X86_MACHINE flags_reg proj
R4025:4039 X86Semantics X86_MACHINE seg_regs_limits proj
R3979:3993 X86Semantics X86_MACHINE seg_regs_starts proj
R3941:3947 X86Semantics X86_MACHINE gp_regs proj
def 4239:4252 X86_MACHINE set_debug_regs
R4271:4553 X86Semantics X86_MACHINE Build_mach constr
R4546:4551 X86Semantics X86_MACHINE pc_reg proj
R4482:4484 X86Semantics X86_MACHINE upd def
R4509:4518 X86Semantics X86_MACHINE debug_regs proj
R4486:4506 X86Syntax <> debug_register_eq_dec def
R4444:4455 X86Semantics X86_MACHINE control_regs proj
R4406:4414 X86Semantics X86_MACHINE flags_reg proj
R4366:4380 X86Semantics X86_MACHINE seg_regs_limits proj
R4320:4334 X86Semantics X86_MACHINE seg_regs_starts proj
R4282:4288 X86Semantics X86_MACHINE gp_regs proj
def 4578:4583 X86_MACHINE set_pc
R4600:4844 X86Semantics X86_MACHINE Build_mach constr
R4811:4820 X86Semantics X86_MACHINE debug_regs proj
R4773:4784 X86Semantics X86_MACHINE control_regs proj
R4735:4743 X86Semantics X86_MACHINE flags_reg proj
R4695:4709 X86Semantics X86_MACHINE seg_regs_limits proj
R4649:4663 X86Semantics X86_MACHINE seg_regs_starts proj
R4611:4617 X86Semantics X86_MACHINE gp_regs proj
def 4868:4879 X86_MACHINE set_location
R4886:4888 X86Semantics X86_MACHINE loc ind
R4896:4899 RTL <> wint def
R4925:4927 X86Semantics X86_MACHINE loc ind
R4950:4959 X86Semantics X86_MACHINE mach_state def
R4939:4942 RTL <> wint def
R4975:4981 X86Semantics X86_MACHINE reg_loc constr
R4997:5007 X86Semantics X86_MACHINE set_gp_regs def
R5023:5039 X86Semantics X86_MACHINE seg_reg_start_loc constr
R5055:5073 X86Semantics X86_MACHINE set_seg_regs_starts def
R5089:5105 X86Semantics X86_MACHINE seg_reg_limit_loc constr
R5121:5139 X86Semantics X86_MACHINE set_seg_regs_limits def
R5155:5162 X86Semantics X86_MACHINE flag_loc constr
R5178:5190 X86Semantics X86_MACHINE set_flags_reg def
R5206:5225 X86Semantics X86_MACHINE control_register_loc constr
R5241:5256 X86Semantics X86_MACHINE set_control_regs def
R5272:5289 X86Semantics X86_MACHINE debug_register_loc constr
R5305:5318 X86Semantics X86_MACHINE set_debug_regs def
R5334:5339 X86Semantics X86_MACHINE pc_loc constr
R5353:5358 X86Semantics X86_MACHINE set_pc def
R5379:5389 X86Semantics <> <> mod
R5411:5417 RTL <> <> modtype
R5419:5429 X86Semantics <> <> modtype
mod 5400:5406 <> X86_RTL
mod 5441:5450 <> X86_Decode
rec 5534:5543 X86_Decode conv_state
proj 5550:5556 X86_Decode c_rev_i
proj 5577:5582 X86_Decode c_next
R5560:5563 Coq.Init.Datatypes <> list ind
R5565:5573 X86Semantics X86_RTL rtl_instr ind
R5586:5586 Coq.ZArith.BinInt <> Z ind
def 5604:5607 X86_Decode Conv
R5635:5637 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5638:5647 X86Semantics X86_Decode conv_state rec
R5620:5629 X86Semantics X86_Decode conv_state rec
inst 5661:5670 X86_Decode Conv_monad
R5674:5678 Monad <> Monad class
R5680:5683 X86Semantics X86_Decode Conv def
R5747:5750 Monad <> Bind meth
R5694:5699 Monad <> Return meth
R5734:5734 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5736:5736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5738:5738 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5719:5728 X86Semantics X86_Decode conv_state rec
R5793:5802 X86Semantics X86_Decode conv_state rec
R5782:5785 X86Semantics X86_Decode Conv def
R5766:5769 X86Semantics X86_Decode Conv def
R5865:5885 Coqlib <> extensionality prfax
R5865:5885 Coqlib <> extensionality prfax
R5912:5932 Coqlib <> extensionality prfax
R5912:5932 Coqlib <> extensionality prfax
R5983:6003 Coqlib <> extensionality prfax
R5983:6003 Coqlib <> extensionality prfax
def 6063:6069 X86_Decode runConv
R6074:6077 X86Semantics X86_Decode Conv def
R6079:6082 Coq.Init.Datatypes <> unit ind
R6088:6091 Coq.Init.Datatypes <> list ind
R6093:6101 X86Semantics X86_RTL rtl_instr ind
R6122:6147 X86Semantics X86_Decode Build_conv_state constr
R6133:6135 Coq.Init.Datatypes <> nil constr
R6165:6165 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6167:6168 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6171:6171 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6177:6184 Coq.Lists.List <> rev def
R6187:6193 X86Semantics X86_Decode c_rev_i proj
def 6222:6225 X86_Decode EMIT
R6229:6237 X86Semantics X86_RTL rtl_instr ind
R6242:6245 X86Semantics X86_Decode Conv def
R6247:6250 Coq.Init.Datatypes <> unit ind
R6269:6269 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6272:6274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6321:6323 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6270:6271 Coq.Init.Datatypes <> tt constr
R6275:6320 X86Semantics X86_Decode Build_conv_state constr
R6313:6318 X86Semantics X86_Decode c_next proj
R6287:6289 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6299:6299 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6290:6296 X86Semantics X86_Decode c_rev_i proj
R6352:6355 X86Semantics X86_Decode EMIT def
not 6337 X86_Decode :monad_scope:'emit'_x
def 6402:6406 X86_Decode fresh
R6438:6446 X86Semantics X86_RTL rtl_instr ind
R6422:6431 X86Semantics X86_RTL pseudo_reg ind
R6451:6454 X86Semantics X86_Decode Conv def
R6457:6466 X86Semantics X86_RTL pseudo_reg ind
R6654:6654 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6665:6666 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6670:6670 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6655:6660 X86Semantics X86_RTL ps_reg constr
R6539:6630 X86Semantics X86_Decode Build_conv_state constr
R6627:6629 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6550:6550 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6572:6574 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6561:6566 X86Semantics X86_RTL ps_reg constr
R6575:6581 X86Semantics X86_Decode c_rev_i proj
R6498:6503 X86Semantics X86_Decode c_next proj
def 6687:6692 X86_Decode load_Z
R6699:6699 Coq.ZArith.BinInt <> Z ind
R6705:6709 X86Semantics X86_Decode fresh def
R6712:6723 X86Semantics X86_RTL load_imm_rtl constr
R6727:6735 Bits Word repr def
def 6757:6764 X86_Decode load_int
R6771:6774 RTL <> wint def
R6782:6786 X86Semantics X86_Decode fresh def
R6789:6800 X86Semantics X86_RTL load_imm_rtl constr
def 6819:6823 X86_Decode arith
R6836:6845 X86Semantics X86_RTL pseudo_reg ind
R6853:6857 X86Semantics X86_Decode fresh def
R6860:6868 X86Semantics X86_RTL arith_rtl constr
def 6893:6896 X86_Decode test
R6909:6918 X86Semantics X86_RTL pseudo_reg ind
R6926:6930 X86Semantics X86_Decode fresh def
R6933:6940 X86Semantics X86_RTL test_rtl constr
def 6965:6972 X86_Decode load_reg
R6977:6984 X86Syntax <> register ind
R6990:6994 X86Semantics X86_Decode fresh def
R6997:7007 X86Semantics X86_RTL get_loc_rtl constr
R7010:7016 X86Semantics X86_MACHINE reg_loc constr
def 7036:7042 X86_Decode set_reg
R7047:7056 X86Semantics X86_RTL pseudo_reg ind
R7058:7063 RTL <> size32 def
R7069:7076 X86Syntax <> register ind
R7087:7091 X86Semantics X86_Decode :monad_scope:'emit'_x not
R7092:7102 X86Semantics X86_RTL set_loc_rtl constr
R7107:7113 X86Semantics X86_MACHINE reg_loc constr
def 7132:7137 X86_Decode cast_u
R7148:7157 X86Semantics X86_RTL pseudo_reg ind
R7166:7170 X86Semantics X86_Decode fresh def
R7174:7183 X86Semantics X86_RTL cast_u_rtl constr
def 7208:7213 X86_Decode cast_s
R7224:7233 X86Semantics X86_RTL pseudo_reg ind
R7242:7246 X86Semantics X86_Decode fresh def
R7250:7259 X86Semantics X86_RTL cast_s_rtl constr
def 7284:7296 X86_Decode get_seg_start
R7301:7316 X86Syntax <> segment_register ind
R7327:7331 X86Semantics X86_Decode fresh def
R7334:7344 X86Semantics X86_RTL get_loc_rtl constr
R7347:7363 X86Semantics X86_MACHINE seg_reg_start_loc constr
def 7383:7395 X86_Decode get_seg_limit
R7400:7415 X86Syntax <> segment_register ind
R7426:7430 X86Semantics X86_Decode fresh def
R7433:7443 X86Semantics X86_RTL get_loc_rtl constr
R7446:7462 X86Semantics X86_MACHINE seg_reg_limit_loc constr
def 7482:7490 X86_Decode read_byte
R7495:7504 X86Semantics X86_RTL pseudo_reg ind
R7506:7511 RTL <> size32 def
R7517:7521 X86Semantics X86_Decode fresh def
R7524:7535 X86Semantics X86_RTL get_byte_rtl constr
def 7554:7563 X86_Decode write_byte
R7568:7577 X86Semantics X86_RTL pseudo_reg ind
R7579:7583 RTL <> size8 def
R7589:7598 X86Semantics X86_RTL pseudo_reg ind
R7600:7605 RTL <> size32 def
R7616:7620 X86Semantics X86_Decode :monad_scope:'emit'_x not
R7621:7632 X86Semantics X86_RTL set_byte_rtl constr
def 7652:7659 X86_Decode get_flag
R7667:7671 X86Semantics X86_Decode fresh def
R7674:7684 X86Semantics X86_RTL get_loc_rtl constr
R7687:7694 X86Semantics X86_MACHINE flag_loc constr
def 7715:7722 X86_Decode set_flag
R7731:7740 X86Semantics X86_RTL pseudo_reg ind
R7742:7746 RTL <> size1 def
R7752:7756 X86Semantics X86_Decode :monad_scope:'emit'_x not
R7757:7767 X86Semantics X86_RTL set_loc_rtl constr
R7772:7779 X86Semantics X86_MACHINE flag_loc constr
def 7801:7806 X86_Decode get_pc
R7811:7815 X86Semantics X86_Decode fresh def
R7818:7828 X86Semantics X86_RTL get_loc_rtl constr
R7830:7835 X86Semantics X86_MACHINE pc_loc constr
def 7852:7857 X86_Decode set_pc
R7864:7868 X86Semantics X86_Decode :monad_scope:'emit'_x not
R7869:7879 X86Semantics X86_RTL set_loc_rtl constr
R7883:7888 X86Semantics X86_MACHINE pc_loc constr
def 7904:7906 X86_Decode not
R7916:7925 X86Semantics X86_RTL pseudo_reg ind
R7932:7935 X86Semantics X86_Decode Conv def
R7938:7947 X86Semantics X86_RTL pseudo_reg ind
R7963:7966 Monad <> :monad_scope:x_'<-'_x_';'_x not
R7997:8002 Monad <> :monad_scope:x_'<-'_x_';'_x not
R7967:7972 X86Semantics X86_Decode load_Z def
R7977:7993 Bits Word max_unsigned def
R8003:8007 X86Semantics X86_Decode arith def
R8009:8014 X86Semantics X86_RTL xor_op constr
def 8037:8046 X86_Decode undef_flag
R8052:8055 X86Semantics X86_MACHINE flag ind
R8067:8070 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8096:8101 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8071:8075 X86Semantics X86_Decode fresh def
R8079:8088 X86Semantics X86_RTL choose_rtl constr
R8090:8094 RTL <> size1 def
R8102:8109 X86Semantics X86_Decode set_flag def
def 8188:8194 X86_Decode copy_ps
R8202:8211 X86Semantics X86_RTL pseudo_reg ind
R8219:8223 X86Semantics X86_Decode fresh def
R8227:8236 X86Semantics X86_RTL cast_u_rtl constr
def 8261:8274 X86_Decode scale_to_int32
R8278:8282 X86Syntax <> scale ind
R8287:8291 Bits <> int32 def
R8300:8308 Bits Word repr def
R8325:8330 X86Syntax <> Scale1 constr
R8339:8344 X86Syntax <> Scale2 constr
R8353:8358 X86Syntax <> Scale4 constr
R8367:8372 X86Syntax <> Scale8 constr
def 8435:8446 X86_Decode compute_addr
R8450:8456 X86Syntax <> address rec
R8461:8464 X86Semantics X86_Decode Conv def
R8467:8476 X86Semantics X86_RTL pseudo_reg ind
R8478:8483 RTL <> size32 def
R8545:8553 X86Syntax <> addrIndex proj
R8533:8540 X86Syntax <> addrBase proj
R8573:8576 Coq.Init.Datatypes <> None constr
R8579:8582 Coq.Init.Datatypes <> None constr
R8587:8594 X86Semantics X86_Decode load_int def
R8612:8615 Coq.Init.Datatypes <> Some constr
R8620:8623 Coq.Init.Datatypes <> None constr
R8641:8644 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8655:8657 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8645:8652 X86Semantics X86_Decode load_reg def
R8660:8663 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8677:8679 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8664:8671 X86Semantics X86_Decode load_int def
R8680:8684 X86Semantics X86_Decode arith def
R8686:8691 X86Semantics X86_RTL add_op constr
R8709:8712 Coq.Init.Datatypes <> Some constr
R8718:8721 Coq.Init.Datatypes <> Some constr
R8723:8723 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8725:8726 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8729:8729 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8745:8748 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8760:8771 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8749:8756 X86Semantics X86_Decode load_reg def
R8773:8776 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8788:8799 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8777:8784 X86Semantics X86_Decode load_reg def
R8801:8804 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8832:8843 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8805:8812 X86Semantics X86_Decode load_int def
R8815:8828 X86Semantics X86_Decode scale_to_int32 def
R8846:8849 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8866:8877 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8850:8854 X86Semantics X86_Decode arith def
R8856:8861 X86Semantics X86_RTL mul_op constr
R8880:8883 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8901:8912 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8884:8888 X86Semantics X86_Decode arith def
R8890:8895 X86Semantics X86_RTL add_op constr
R8917:8920 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8934:8945 Monad <> :monad_scope:x_'<-'_x_';'_x not
R8921:8928 X86Semantics X86_Decode load_int def
R8946:8950 X86Semantics X86_Decode arith def
R8952:8957 X86Semantics X86_RTL add_op constr
R8977:8980 Coq.Init.Datatypes <> None constr
R8983:8986 Coq.Init.Datatypes <> Some constr
R8988:8988 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8990:8991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8993:8993 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9010:9013 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9024:9035 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9014:9021 X86Semantics X86_Decode load_reg def
R9037:9040 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9068:9079 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9041:9048 X86Semantics X86_Decode load_int def
R9051:9064 X86Semantics X86_Decode scale_to_int32 def
R9084:9087 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9101:9112 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9088:9095 X86Semantics X86_Decode load_int def
R9115:9118 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9135:9146 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9119:9123 X86Semantics X86_Decode arith def
R9125:9130 X86Semantics X86_RTL mul_op constr
R9147:9151 X86Semantics X86_Decode arith def
R9153:9158 X86Semantics X86_RTL add_op constr
R8506:8513 X86Syntax <> addrDisp proj
def 9302:9322 X86_Decode add_and_check_segment
R9329:9344 X86Syntax <> segment_register ind
R9350:9359 X86Semantics X86_RTL pseudo_reg ind
R9361:9366 RTL <> size32 def
R9376:9379 X86Semantics X86_Decode Conv def
R9382:9391 X86Semantics X86_RTL pseudo_reg ind
R9393:9398 RTL <> size32 def
R9411:9414 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9432:9439 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9415:9427 X86Semantics X86_Decode get_seg_start def
R9442:9445 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9463:9469 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9446:9450 X86Semantics X86_Decode arith def
R9452:9457 X86Semantics X86_RTL add_op constr
R9472:9475 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9493:9499 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9476:9488 X86Semantics X86_Decode get_seg_limit def
R9505:9508 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9525:9530 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9509:9512 X86Semantics X86_Decode test def
R9514:9519 X86Semantics X86_RTL ltu_op constr
R9562:9568 Monad <> :monad_scope:x_';;'_x not
R9531:9535 X86Semantics X86_Decode :monad_scope:'emit'_x not
R9536:9541 X86Semantics X86_RTL if_rtl constr
R9549:9561 X86Semantics X86_RTL safe_fail_rtl constr
R9569:9572 Monad <> :monad_scope:'ret'_x not
def 9666:9669 X86_Decode lmem
R9676:9691 X86Syntax <> segment_register ind
R9697:9706 X86Semantics X86_RTL pseudo_reg ind
R9708:9713 RTL <> size32 def
R9718:9721 X86Semantics X86_Decode Conv def
R9724:9733 X86Semantics X86_RTL pseudo_reg ind
R9735:9739 RTL <> size8 def
R9749:9752 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9780:9787 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9753:9773 X86Semantics X86_Decode add_and_check_segment def
R9788:9796 X86Semantics X86_Decode read_byte def
def 9889:9892 X86_Decode smem
R9899:9914 X86Syntax <> segment_register ind
R9920:9929 X86Semantics X86_RTL pseudo_reg ind
R9931:9935 RTL <> size8 def
R9941:9950 X86Semantics X86_RTL pseudo_reg ind
R9952:9957 RTL <> size32 def
R9966:9969 X86Semantics X86_Decode Conv def
R9971:9974 Coq.Init.Datatypes <> unit ind
R9985:9988 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10016:10023 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9989:10009 X86Semantics X86_Decode add_and_check_segment def
R10024:10033 X86Semantics X86_Decode write_byte def
fix 10136:10145 X86_Decode load_mem_n
R10152:10167 X86Syntax <> segment_register ind
R10176:10185 X86Semantics X86_RTL pseudo_reg ind
R10187:10192 RTL <> size32 def
R10217:10219 Coq.Init.Datatypes <> nat ind
R10224:10227 X86Semantics X86_Decode Conv def
R10230:10239 X86Semantics X86_RTL pseudo_reg ind
R10266:10267 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R10242:10242 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10261:10264 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10259:10259 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10326:10329 X86Semantics X86_Decode lmem def
R10348:10348 Coq.Init.Datatypes <> S constr
R10367:10370 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10392:10403 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10371:10380 X86Semantics <> load_mem_n def
R10409:10412 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10443:10454 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10413:10418 X86Semantics X86_Decode load_Z def
R10428:10435 Coq.ZArith.BinInt <> Z_of_nat def
R10438:10438 Coq.Init.Datatypes <> S constr
R10420:10425 RTL <> size32 def
R10457:10460 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10484:10494 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10461:10465 X86Semantics X86_Decode arith def
R10467:10472 X86Semantics X86_RTL add_op constr
R10497:10500 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10512:10523 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10501:10504 X86Semantics X86_Decode lmem def
R10526:10529 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10573:10584 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10530:10535 X86Semantics X86_Decode cast_u def
R10562:10562 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R10538:10538 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10559:10560 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10555:10557 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10587:10590 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10633:10643 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10591:10596 X86Semantics X86_Decode cast_u def
R10623:10623 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R10599:10599 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10620:10621 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10616:10618 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10646:10649 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10679:10689 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10650:10655 X86Semantics X86_Decode load_Z def
R10674:10676 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R10660:10667 Coq.ZArith.BinInt <> Z_of_nat def
R10670:10670 Coq.Init.Datatypes <> S constr
R10692:10695 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10714:10724 Monad <> :monad_scope:x_'<-'_x_';'_x not
R10696:10700 X86Semantics X86_Decode arith def
R10702:10707 X86Semantics X86_RTL shl_op constr
R10725:10729 X86Semantics X86_Decode arith def
R10731:10735 X86Semantics X86_RTL or_op constr
def 10766:10775 X86_Decode load_mem32
R10782:10797 X86Syntax <> segment_register ind
R10806:10815 X86Semantics X86_RTL pseudo_reg ind
R10817:10822 RTL <> size32 def
R10833:10842 X86Semantics X86_Decode load_mem_n def
def 11522:11531 X86_Decode load_mem16
R11538:11553 X86Syntax <> segment_register ind
R11562:11571 X86Semantics X86_RTL pseudo_reg ind
R11573:11578 RTL <> size32 def
R11589:11598 X86Semantics X86_Decode load_mem_n def
def 11625:11633 X86_Decode load_mem8
R11640:11655 X86Syntax <> segment_register ind
R11664:11673 X86Semantics X86_RTL pseudo_reg ind
R11675:11680 RTL <> size32 def
R11691:11700 X86Semantics X86_Decode load_mem_n def
def 11793:11798 X86_Decode opsize
R11852:11856 Coq.Init.Datatypes <> false constr
R11861:11865 RTL <> size8 def
R11875:11878 Coq.Init.Datatypes <> true constr
R11886:11891 RTL <> size16 def
R11908:11913 RTL <> size32 def
def 11938:11945 X86_Decode load_mem
R11956:11971 X86Syntax <> segment_register ind
R11978:11987 X86Semantics X86_RTL pseudo_reg ind
R11989:11994 RTL <> size32 def
R12004:12007 X86Semantics X86_Decode Conv def
R12010:12019 X86Semantics X86_RTL pseudo_reg ind
R12022:12027 X86Semantics X86_Decode opsize def
R12030:12040 X86Syntax <> op_override proj
R12063:12073 X86Syntax <> op_override proj
R12098:12101 X86Semantics X86_Decode Conv def
R12104:12113 X86Semantics X86_RTL pseudo_reg ind
R12116:12121 X86Semantics X86_Decode opsize def
R12142:12145 Coq.Init.Datatypes <> true constr
R12148:12151 Coq.Init.Datatypes <> true constr
R12156:12165 X86Semantics X86_Decode load_mem16 def
R12182:12185 Coq.Init.Datatypes <> true constr
R12188:12192 Coq.Init.Datatypes <> false constr
R12197:12205 X86Semantics X86_Decode load_mem8 def
R12222:12226 Coq.Init.Datatypes <> false constr
R12229:12232 Coq.Init.Datatypes <> true constr
R12237:12246 X86Semantics X86_Decode load_mem32 def
R12263:12267 Coq.Init.Datatypes <> false constr
R12270:12274 Coq.Init.Datatypes <> false constr
R12279:12287 X86Semantics X86_Decode load_mem8 def
def 12378:12387 X86_Decode iload_op32
R12394:12409 X86Syntax <> segment_register ind
R12416:12422 X86Syntax <> operand ind
R12427:12430 X86Semantics X86_Decode Conv def
R12433:12442 X86Semantics X86_RTL pseudo_reg ind
R12444:12449 RTL <> size32 def
R12482:12487 X86Syntax <> Imm_op constr
R12494:12501 X86Semantics X86_Decode load_int def
R12513:12518 X86Syntax <> Reg_op constr
R12525:12532 X86Semantics X86_Decode load_reg def
R12544:12553 X86Syntax <> Address_op constr
R12562:12565 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12580:12582 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12566:12577 X86Semantics X86_Decode compute_addr def
R12583:12592 X86Semantics X86_Decode load_mem32 def
R12609:12617 X86Syntax <> Offset_op constr
R12628:12631 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12644:12671 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12632:12639 X86Semantics X86_Decode load_int def
R12672:12681 X86Semantics X86_Decode load_mem32 def
def 12713:12722 X86_Decode iload_op16
R12729:12744 X86Syntax <> segment_register ind
R12751:12757 X86Syntax <> operand ind
R12762:12765 X86Semantics X86_Decode Conv def
R12768:12777 X86Semantics X86_RTL pseudo_reg ind
R12779:12784 RTL <> size16 def
R12817:12822 X86Syntax <> Imm_op constr
R12832:12835 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12846:12867 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12836:12843 X86Semantics X86_Decode load_int def
R12868:12873 X86Semantics X86_Decode cast_u def
R12875:12880 RTL <> size16 def
R12894:12899 X86Syntax <> Reg_op constr
R12909:12912 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12923:12944 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12913:12920 X86Semantics X86_Decode load_reg def
R12945:12950 X86Semantics X86_Decode cast_u def
R12952:12957 RTL <> size16 def
R12971:12980 X86Syntax <> Address_op constr
R12989:12992 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13007:13009 Monad <> :monad_scope:x_'<-'_x_';'_x not
R12993:13004 X86Semantics X86_Decode compute_addr def
R13010:13019 X86Semantics X86_Decode load_mem16 def
R13036:13044 X86Syntax <> Offset_op constr
R13055:13058 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13071:13098 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13059:13066 X86Semantics X86_Decode load_int def
R13099:13108 X86Semantics X86_Decode load_mem16 def
def 13275:13283 X86_Decode iload_op8
R13290:13305 X86Syntax <> segment_register ind
R13312:13318 X86Syntax <> operand ind
R13323:13326 X86Semantics X86_Decode Conv def
R13329:13338 X86Semantics X86_RTL pseudo_reg ind
R13340:13344 RTL <> size8 def
R13377:13382 X86Syntax <> Imm_op constr
R13392:13395 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13406:13427 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13396:13403 X86Semantics X86_Decode load_int def
R13428:13433 X86Semantics X86_Decode cast_u def
R13435:13439 RTL <> size8 def
R13453:13458 X86Syntax <> Reg_op constr
R13477:13480 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13862:13873 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14093:14093 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13481:13488 X86Semantics X86_Decode load_reg def
R13534:13536 X86Syntax <> EAX constr
R13541:13543 X86Syntax <> EAX constr
R13575:13577 X86Syntax <> ECX constr
R13582:13584 X86Syntax <> ECX constr
R13616:13618 X86Syntax <> EDX constr
R13623:13625 X86Syntax <> EDX constr
R13657:13659 X86Syntax <> EBX constr
R13664:13666 X86Syntax <> EBX constr
R13698:13700 X86Syntax <> ESP constr
R13705:13707 X86Syntax <> EAX constr
R13739:13741 X86Syntax <> EBP constr
R13746:13748 X86Syntax <> ECX constr
R13780:13782 X86Syntax <> ESI constr
R13787:13789 X86Syntax <> EDX constr
R13821:13823 X86Syntax <> EDI constr
R13828:13830 X86Syntax <> EBX constr
R13901:13903 X86Syntax <> EAX constr
R13907:13909 X86Syntax <> ECX constr
R13913:13915 X86Syntax <> EDX constr
R13919:13921 X86Syntax <> EBX constr
R13926:13931 X86Semantics X86_Decode cast_u def
R13933:13937 RTL <> size8 def
R13926:13931 X86Semantics X86_Decode cast_u def
R13933:13937 RTL <> size8 def
R13926:13931 X86Semantics X86_Decode cast_u def
R13933:13937 RTL <> size8 def
R13926:13931 X86Semantics X86_Decode cast_u def
R13933:13937 RTL <> size8 def
R13968:13971 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13987:14008 Monad <> :monad_scope:x_'<-'_x_';'_x not
R13972:13977 X86Semantics X86_Decode load_Z def
R13979:13984 RTL <> size32 def
R14013:14016 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14040:14061 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14017:14021 X86Semantics X86_Decode arith def
R14023:14029 X86Semantics X86_RTL shru_op constr
R14062:14067 X86Semantics X86_Decode cast_u def
R14069:14073 RTL <> size8 def
R14103:14112 X86Syntax <> Address_op constr
R14121:14124 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14139:14141 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14125:14136 X86Semantics X86_Decode compute_addr def
R14142:14150 X86Semantics X86_Decode load_mem8 def
R14167:14175 X86Syntax <> Offset_op constr
R14187:14190 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14203:14230 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14191:14198 X86Semantics X86_Decode load_int def
R14231:14239 X86Semantics X86_Decode load_mem8 def
fix 14318:14326 X86_Decode set_mem_n
R14337:14352 X86Syntax <> segment_register ind
R14363:14372 X86Semantics X86_RTL pseudo_reg ind
R14382:14382 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14376:14377 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14381:14381 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14379:14379 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14399:14408 X86Semantics X86_RTL pseudo_reg ind
R14410:14415 RTL <> size32 def
R14420:14423 X86Semantics X86_Decode Conv def
R14425:14428 Coq.Init.Datatypes <> unit ind
R14465:14468 X86Semantics X86_Decode smem def
R14489:14489 Coq.Init.Datatypes <> S constr
R14507:14510 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14535:14546 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14511:14516 X86Semantics X86_Decode cast_u def
R14526:14526 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14520:14521 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14525:14525 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14523:14523 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14568:14580 Monad <> :monad_scope:x_';;'_x not
R14547:14555 X86Semantics <> set_mem_n def
R14583:14586 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14633:14644 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14587:14592 X86Semantics X86_Decode load_Z def
R14611:14618 Coq.ZArith.BinInt <> Z_of_nat def
R14622:14622 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14626:14629 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14623:14623 Coq.Init.Datatypes <> S constr
R14602:14602 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R14596:14597 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14601:14601 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R14599:14599 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14647:14650 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14669:14679 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14651:14655 X86Semantics X86_Decode arith def
R14657:14663 X86Semantics X86_RTL shru_op constr
R14682:14685 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14701:14712 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14686:14691 X86Semantics X86_Decode cast_u def
R14693:14697 RTL <> size8 def
R14715:14718 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14749:14760 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14719:14724 X86Semantics X86_Decode load_Z def
R14734:14741 Coq.ZArith.BinInt <> Z_of_nat def
R14744:14744 Coq.Init.Datatypes <> S constr
R14726:14731 RTL <> size32 def
R14763:14766 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14787:14797 Monad <> :monad_scope:x_'<-'_x_';'_x not
R14767:14771 X86Semantics X86_Decode arith def
R14773:14778 X86Semantics X86_RTL add_op constr
R14798:14801 X86Semantics X86_Decode smem def
def 14836:14844 X86_Decode set_mem32
R14851:14866 X86Syntax <> segment_register ind
R14874:14883 X86Semantics X86_RTL pseudo_reg ind
R14885:14890 RTL <> size32 def
R14895:14898 X86Semantics X86_Decode Conv def
R14900:14903 Coq.Init.Datatypes <> unit ind
R14913:14921 X86Semantics X86_Decode set_mem_n def
def 15510:15518 X86_Decode set_mem16
R15525:15540 X86Syntax <> segment_register ind
R15547:15556 X86Semantics X86_RTL pseudo_reg ind
R15558:15563 RTL <> size16 def
R15573:15582 X86Semantics X86_RTL pseudo_reg ind
R15584:15589 RTL <> size32 def
R15594:15597 X86Semantics X86_Decode Conv def
R15599:15602 Coq.Init.Datatypes <> unit ind
R15614:15622 X86Semantics X86_Decode set_mem_n def
def 15649:15656 X86_Decode set_mem8
R15663:15678 X86Syntax <> segment_register ind
R15685:15694 X86Semantics X86_RTL pseudo_reg ind
R15696:15700 RTL <> size8 def
R15711:15720 X86Semantics X86_RTL pseudo_reg ind
R15722:15727 RTL <> size32 def
R15732:15735 X86Semantics X86_Decode Conv def
R15737:15740 Coq.Init.Datatypes <> unit ind
R15752:15760 X86Semantics X86_Decode set_mem_n def
def 15786:15792 X86_Decode set_mem
R15803:15818 X86Syntax <> segment_register ind
R15894:15897 X86Semantics X86_Decode Conv def
R15899:15902 Coq.Init.Datatypes <> unit ind
R15868:15877 X86Semantics X86_RTL pseudo_reg ind
R15879:15884 RTL <> size32 def
R15823:15832 X86Semantics X86_RTL pseudo_reg ind
R15835:15840 X86Semantics X86_Decode opsize def
R15843:15853 X86Syntax <> op_override proj
R15918:15928 X86Syntax <> op_override proj
R16001:16004 X86Semantics X86_Decode Conv def
R16006:16009 Coq.Init.Datatypes <> unit ind
R15980:15989 X86Semantics X86_RTL pseudo_reg ind
R15991:15996 RTL <> size32 def
R15953:15962 X86Semantics X86_RTL pseudo_reg ind
R15965:15970 X86Semantics X86_Decode opsize def
R16024:16027 Coq.Init.Datatypes <> true constr
R16030:16033 Coq.Init.Datatypes <> true constr
R16038:16046 X86Semantics X86_Decode set_mem16 def
R16060:16063 Coq.Init.Datatypes <> true constr
R16066:16070 Coq.Init.Datatypes <> false constr
R16075:16082 X86Semantics X86_Decode set_mem8 def
R16096:16100 Coq.Init.Datatypes <> false constr
R16103:16106 Coq.Init.Datatypes <> true constr
R16111:16119 X86Semantics X86_Decode set_mem32 def
R16133:16137 Coq.Init.Datatypes <> false constr
R16140:16144 Coq.Init.Datatypes <> false constr
R16149:16156 X86Semantics X86_Decode set_mem8 def
def 16210:16218 X86_Decode iset_op32
R16225:16240 X86Syntax <> segment_register ind
R16246:16255 X86Semantics X86_RTL pseudo_reg ind
R16257:16262 RTL <> size32 def
R16269:16275 X86Syntax <> operand ind
R16284:16287 X86Semantics X86_Decode Conv def
R16289:16292 Coq.Init.Datatypes <> unit ind
R16325:16330 X86Syntax <> Imm_op constr
R16337:16341 X86Semantics X86_Decode :monad_scope:'emit'_x not
R16342:16350 X86Semantics X86_RTL error_rtl constr
R16360:16365 X86Syntax <> Reg_op constr
R16372:16378 X86Semantics X86_Decode set_reg def
R16392:16401 X86Syntax <> Address_op constr
R16412:16415 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16430:16432 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16416:16427 X86Semantics X86_Decode compute_addr def
R16433:16441 X86Semantics X86_Decode set_mem32 def
R16462:16470 X86Syntax <> Offset_op constr
R16483:16486 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16499:16527 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16487:16494 X86Semantics X86_Decode load_int def
R16528:16536 X86Semantics X86_Decode set_mem32 def
def 16572:16580 X86_Decode iset_op16
R16587:16602 X86Syntax <> segment_register ind
R16608:16617 X86Semantics X86_RTL pseudo_reg ind
R16619:16624 RTL <> size16 def
R16631:16637 X86Syntax <> operand ind
R16646:16649 X86Semantics X86_Decode Conv def
R16651:16654 Coq.Init.Datatypes <> unit ind
R16687:16692 X86Syntax <> Imm_op constr
R16699:16703 X86Semantics X86_Decode :monad_scope:'emit'_x not
R16704:16712 X86Semantics X86_RTL error_rtl constr
R16722:16727 X86Syntax <> Reg_op constr
R16737:16740 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16751:16772 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16741:16748 X86Semantics X86_Decode load_reg def
R16777:16780 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16808:16829 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16781:16788 X86Semantics X86_Decode load_int def
R16791:16799 Bits Word mone def
R16801:16806 RTL <> size32 def
R16837:16840 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16857:16878 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16841:16846 X86Semantics X86_Decode load_Z def
R16848:16853 RTL <> size32 def
R16884:16887 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16913:16935 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16888:16892 X86Semantics X86_Decode arith def
R16894:16899 X86Semantics X86_RTL shl_op constr
R16940:16944 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16967:16988 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16945:16949 X86Semantics X86_Decode arith def
R16951:16956 X86Semantics X86_RTL and_op constr
R16992:16995 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17011:17032 Monad <> :monad_scope:x_'<-'_x_';'_x not
R16996:17001 X86Semantics X86_Decode cast_u def
R17003:17008 RTL <> size32 def
R17037:17040 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17061:17082 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17041:17045 X86Semantics X86_Decode arith def
R17047:17051 X86Semantics X86_RTL or_op constr
R17083:17089 X86Semantics X86_Decode set_reg def
R17106:17115 X86Syntax <> Address_op constr
R17126:17129 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17144:17146 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17130:17141 X86Semantics X86_Decode compute_addr def
R17147:17155 X86Semantics X86_Decode set_mem16 def
R17176:17184 X86Syntax <> Offset_op constr
R17197:17200 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17213:17241 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17201:17208 X86Semantics X86_Decode load_int def
R17242:17250 X86Semantics X86_Decode set_mem16 def
def 17286:17293 X86_Decode iset_op8
R17300:17315 X86Syntax <> segment_register ind
R17321:17330 X86Semantics X86_RTL pseudo_reg ind
R17332:17336 RTL <> size8 def
R17343:17349 X86Syntax <> operand ind
R17358:17361 X86Semantics X86_Decode Conv def
R17363:17366 Coq.Init.Datatypes <> unit ind
R17399:17404 X86Syntax <> Imm_op constr
R17411:17415 X86Semantics X86_Decode :monad_scope:'emit'_x not
R17416:17424 X86Semantics X86_RTL error_rtl constr
R17434:17439 X86Syntax <> Reg_op constr
R17450:17453 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17861:17882 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17454:17461 X86Semantics X86_Decode load_reg def
R17533:17535 X86Syntax <> EAX constr
R17540:17542 X86Syntax <> EAX constr
R17574:17576 X86Syntax <> ECX constr
R17581:17583 X86Syntax <> ECX constr
R17615:17617 X86Syntax <> EDX constr
R17622:17624 X86Syntax <> EDX constr
R17656:17658 X86Syntax <> EBX constr
R17663:17665 X86Syntax <> EBX constr
R17697:17699 X86Syntax <> ESP constr
R17704:17706 X86Syntax <> EAX constr
R17738:17740 X86Syntax <> EBP constr
R17745:17747 X86Syntax <> ECX constr
R17779:17781 X86Syntax <> ESI constr
R17786:17788 X86Syntax <> EDX constr
R17820:17822 X86Syntax <> EDI constr
R17827:17829 X86Syntax <> EBX constr
R17888:17891 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18085:18106 Monad <> :monad_scope:x_'<-'_x_';'_x not
R17892:17897 X86Semantics X86_Decode load_Z def
R17983:17985 X86Syntax <> EAX constr
R17989:17991 X86Syntax <> ECX constr
R17995:17997 X86Syntax <> EDX constr
R18001:18003 X86Syntax <> EBX constr
R17899:17904 RTL <> size32 def
R18111:18114 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18142:18163 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18115:18122 X86Semantics X86_Decode load_int def
R18125:18133 Bits Word mone def
R18135:18140 RTL <> size32 def
R18169:18171 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18189:18210 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18172:18177 X86Semantics X86_Decode load_Z def
R18179:18184 RTL <> size32 def
R18216:18219 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18244:18265 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18220:18224 X86Semantics X86_Decode arith def
R18226:18231 X86Semantics X86_RTL shl_op constr
R18271:18274 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18298:18319 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18275:18279 X86Semantics X86_Decode arith def
R18281:18286 X86Semantics X86_RTL xor_op constr
R18324:18327 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18351:18372 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18328:18332 X86Semantics X86_Decode arith def
R18334:18339 X86Semantics X86_RTL and_op constr
R18377:18380 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18396:18417 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18381:18386 X86Semantics X86_Decode cast_u def
R18388:18393 RTL <> size32 def
R18428:18431 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18455:18476 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18432:18436 X86Semantics X86_Decode arith def
R18438:18443 X86Semantics X86_RTL shl_op constr
R18480:18483 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18511:18532 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18484:18488 X86Semantics X86_Decode arith def
R18490:18494 X86Semantics X86_RTL or_op constr
R18533:18539 X86Semantics X86_Decode set_reg def
R18614:18616 X86Syntax <> EAX constr
R18621:18623 X86Syntax <> EAX constr
R18655:18657 X86Syntax <> ECX constr
R18662:18664 X86Syntax <> ECX constr
R18696:18698 X86Syntax <> EDX constr
R18703:18705 X86Syntax <> EDX constr
R18737:18739 X86Syntax <> EBX constr
R18744:18746 X86Syntax <> EBX constr
R18778:18780 X86Syntax <> ESP constr
R18785:18787 X86Syntax <> EAX constr
R18819:18821 X86Syntax <> EBP constr
R18826:18828 X86Syntax <> ECX constr
R18860:18862 X86Syntax <> ESI constr
R18867:18869 X86Syntax <> EDX constr
R18901:18903 X86Syntax <> EDI constr
R18908:18910 X86Syntax <> EBX constr
R18951:18960 X86Syntax <> Address_op constr
R18971:18974 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18989:18991 Monad <> :monad_scope:x_'<-'_x_';'_x not
R18975:18986 X86Semantics X86_Decode compute_addr def
R18992:18999 X86Semantics X86_Decode set_mem8 def
R19020:19028 X86Syntax <> Offset_op constr
R19041:19044 Monad <> :monad_scope:x_'<-'_x_';'_x not
R19057:19085 Monad <> :monad_scope:x_'<-'_x_';'_x not
R19045:19052 X86Semantics X86_Decode load_int def
R19086:19093 X86Semantics X86_Decode set_mem8 def
def 19239:19245 X86_Decode load_op
R19256:19271 X86Syntax <> segment_register ind
R19278:19284 X86Syntax <> operand ind
R19293:19296 X86Semantics X86_Decode Conv def
R19299:19308 X86Semantics X86_RTL pseudo_reg ind
R19311:19316 X86Semantics X86_Decode opsize def
R19319:19329 X86Syntax <> op_override proj
R19351:19361 X86Syntax <> op_override proj
R19387:19390 X86Semantics X86_Decode Conv def
R19393:19402 X86Semantics X86_RTL pseudo_reg ind
R19405:19410 X86Semantics X86_Decode opsize def
R19431:19434 Coq.Init.Datatypes <> true constr
R19437:19440 Coq.Init.Datatypes <> true constr
R19445:19454 X86Semantics X86_Decode iload_op16 def
R19471:19474 Coq.Init.Datatypes <> true constr
R19477:19481 Coq.Init.Datatypes <> false constr
R19486:19494 X86Semantics X86_Decode iload_op8 def
R19511:19515 Coq.Init.Datatypes <> false constr
R19518:19521 Coq.Init.Datatypes <> true constr
R19526:19535 X86Semantics X86_Decode iload_op32 def
R19552:19556 Coq.Init.Datatypes <> false constr
R19559:19563 Coq.Init.Datatypes <> false constr
R19568:19576 X86Semantics X86_Decode iload_op8 def
def 19608:19613 X86_Decode set_op
R19624:19639 X86Syntax <> segment_register ind
R19701:19704 X86Semantics X86_Decode Conv def
R19706:19709 Coq.Init.Datatypes <> unit ind
R19690:19696 X86Syntax <> operand ind
R19649:19658 X86Semantics X86_RTL pseudo_reg ind
R19661:19666 X86Semantics X86_Decode opsize def
R19669:19679 X86Syntax <> op_override proj
R19724:19734 X86Syntax <> op_override proj
R19798:19801 X86Semantics X86_Decode Conv def
R19803:19806 Coq.Init.Datatypes <> unit ind
R19787:19793 X86Syntax <> operand ind
R19760:19769 X86Semantics X86_RTL pseudo_reg ind
R19772:19777 X86Semantics X86_Decode opsize def
R19821:19824 Coq.Init.Datatypes <> true constr
R19827:19830 Coq.Init.Datatypes <> true constr
R19835:19843 X86Semantics X86_Decode iset_op16 def
R19858:19861 Coq.Init.Datatypes <> true constr
R19864:19868 Coq.Init.Datatypes <> false constr
R19873:19880 X86Semantics X86_Decode iset_op8 def
R19894:19898 Coq.Init.Datatypes <> false constr
R19901:19904 Coq.Init.Datatypes <> true constr
R19909:19917 X86Semantics X86_Decode iset_op32 def
R19932:19936 Coq.Init.Datatypes <> false constr
R19939:19943 Coq.Init.Datatypes <> false constr
R19948:19955 X86Semantics X86_Decode iset_op8 def
def 20071:20081 X86_Decode get_segment
R20086:20091 X86Syntax <> prefix rec
R20099:20114 X86Syntax <> segment_register ind
R20119:20134 X86Syntax <> segment_register ind
R20150:20161 X86Syntax <> seg_override proj
R20179:20182 Coq.Init.Datatypes <> Some constr
R20200:20203 Coq.Init.Datatypes <> None constr
def 20235:20251 X86_Decode op_contains_stack
R20257:20263 X86Syntax <> operand ind
R20268:20271 Coq.Init.Datatypes <> bool ind
R20301:20310 X86Syntax <> Address_op constr
R20332:20339 X86Syntax <> addrBase proj
R20360:20363 Coq.Init.Datatypes <> Some constr
R20365:20367 X86Syntax <> EBP constr
R20372:20375 Coq.Init.Datatypes <> true constr
R20388:20391 Coq.Init.Datatypes <> Some constr
R20393:20395 X86Syntax <> ESP constr
R20400:20403 Coq.Init.Datatypes <> true constr
R20422:20426 Coq.Init.Datatypes <> false constr
R20453:20457 Coq.Init.Datatypes <> false constr
def 20581:20594 X86_Decode get_segment_op
R20599:20604 X86Syntax <> prefix rec
R20612:20627 X86Syntax <> segment_register ind
R20634:20640 X86Syntax <> operand ind
R20649:20664 X86Syntax <> segment_register ind
R20680:20691 X86Syntax <> seg_override proj
R20709:20712 Coq.Init.Datatypes <> Some constr
R20730:20733 Coq.Init.Datatypes <> None constr
R20754:20770 X86Semantics X86_Decode op_contains_stack def
R20793:20796 Coq.Init.Datatypes <> true constr
R20801:20802 X86Syntax <> SS constr
R20816:20820 Coq.Init.Datatypes <> false constr
def 20863:20877 X86_Decode get_segment_op2
R20882:20887 X86Syntax <> prefix rec
R20895:20910 X86Syntax <> segment_register ind
R20918:20924 X86Syntax <> operand ind
R20937:20943 X86Syntax <> operand ind
R20948:20963 X86Syntax <> segment_register ind
R20979:20990 X86Syntax <> seg_override proj
R21008:21011 Coq.Init.Datatypes <> Some constr
R21029:21032 Coq.Init.Datatypes <> None constr
R21052:21052 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21074:21074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21096:21096 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21053:21069 X86Semantics X86_Decode op_contains_stack def
R21075:21091 X86Semantics X86_Decode op_contains_stack def
R21115:21115 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21120:21120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21122:21122 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21116:21119 Coq.Init.Datatypes <> true constr
R21127:21128 X86Syntax <> SS constr
R21142:21142 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21144:21144 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21149:21149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21145:21148 Coq.Init.Datatypes <> true constr
R21154:21155 X86Syntax <> SS constr
R21169:21169 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21175:21175 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21181:21181 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21170:21174 Coq.Init.Datatypes <> false constr
R21176:21180 Coq.Init.Datatypes <> false constr
def 21225:21234 X86_Decode compute_cc
R21241:21254 X86Syntax <> condition_type ind
R21259:21262 X86Semantics X86_Decode Conv def
R21265:21274 X86Semantics X86_RTL pseudo_reg ind
R21276:21280 RTL <> size1 def
R21312:21315 X86Syntax <> O_ct constr
R21320:21327 X86Semantics X86_Decode get_flag def
R21329:21330 X86Semantics X86_MACHINE OF constr
R21340:21344 X86Syntax <> NO_ct constr
R21350:21353 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21365:21374 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21354:21361 X86Semantics X86_Decode get_flag def
R21363:21364 X86Semantics X86_MACHINE OF constr
R21375:21377 X86Semantics X86_Decode not def
R21389:21392 X86Syntax <> B_ct constr
R21397:21404 X86Semantics X86_Decode get_flag def
R21406:21407 X86Semantics X86_MACHINE CF constr
R21417:21421 X86Syntax <> NB_ct constr
R21427:21430 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21442:21451 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21431:21438 X86Semantics X86_Decode get_flag def
R21440:21441 X86Semantics X86_MACHINE CF constr
R21452:21454 X86Semantics X86_Decode not def
R21466:21469 X86Syntax <> E_ct constr
R21474:21481 X86Semantics X86_Decode get_flag def
R21483:21484 X86Semantics X86_MACHINE ZF constr
R21494:21498 X86Syntax <> NE_ct constr
R21504:21507 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21519:21528 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21508:21515 X86Semantics X86_Decode get_flag def
R21517:21518 X86Semantics X86_MACHINE ZF constr
R21529:21531 X86Semantics X86_Decode not def
R21543:21547 X86Syntax <> BE_ct constr
R21554:21557 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21569:21578 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21558:21565 X86Semantics X86_Decode get_flag def
R21567:21568 X86Semantics X86_MACHINE CF constr
R21581:21584 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21596:21605 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21585:21592 X86Semantics X86_Decode get_flag def
R21594:21595 X86Semantics X86_MACHINE ZF constr
R21606:21610 X86Semantics X86_Decode arith def
R21612:21616 X86Semantics X86_RTL or_op constr
R21632:21637 X86Syntax <> NBE_ct constr
R21644:21647 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21659:21668 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21648:21655 X86Semantics X86_Decode get_flag def
R21657:21658 X86Semantics X86_MACHINE CF constr
R21671:21674 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21686:21695 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21675:21682 X86Semantics X86_Decode get_flag def
R21684:21685 X86Semantics X86_MACHINE ZF constr
R21697:21700 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21718:21727 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21701:21705 X86Semantics X86_Decode arith def
R21707:21711 X86Semantics X86_RTL or_op constr
R21728:21730 X86Semantics X86_Decode not def
R21742:21745 X86Syntax <> S_ct constr
R21750:21757 X86Semantics X86_Decode get_flag def
R21759:21760 X86Semantics X86_MACHINE SF constr
R21770:21774 X86Syntax <> NS_ct constr
R21780:21783 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21795:21804 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21784:21791 X86Semantics X86_Decode get_flag def
R21793:21794 X86Semantics X86_MACHINE SF constr
R21805:21807 X86Semantics X86_Decode not def
R21819:21822 X86Syntax <> P_ct constr
R21827:21834 X86Semantics X86_Decode get_flag def
R21836:21837 X86Semantics X86_MACHINE PF constr
R21847:21851 X86Syntax <> NP_ct constr
R21857:21860 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21872:21881 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21861:21868 X86Semantics X86_Decode get_flag def
R21870:21871 X86Semantics X86_MACHINE PF constr
R21882:21884 X86Semantics X86_Decode not def
R21896:21899 X86Syntax <> L_ct constr
R21906:21909 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21921:21930 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21910:21917 X86Semantics X86_Decode get_flag def
R21919:21920 X86Semantics X86_MACHINE SF constr
R21933:21936 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21948:21957 Monad <> :monad_scope:x_'<-'_x_';'_x not
R21937:21944 X86Semantics X86_Decode get_flag def
R21946:21947 X86Semantics X86_MACHINE OF constr
R21958:21962 X86Semantics X86_Decode arith def
R21964:21969 X86Semantics X86_RTL xor_op constr
R21985:21989 X86Syntax <> NL_ct constr
R21996:21999 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22011:22020 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22000:22007 X86Semantics X86_Decode get_flag def
R22009:22010 X86Semantics X86_MACHINE SF constr
R22023:22026 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22038:22047 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22027:22034 X86Semantics X86_Decode get_flag def
R22036:22037 X86Semantics X86_MACHINE OF constr
R22049:22052 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22071:22080 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22053:22057 X86Semantics X86_Decode arith def
R22059:22064 X86Semantics X86_RTL xor_op constr
R22081:22083 X86Semantics X86_Decode not def
R22095:22099 X86Syntax <> LE_ct constr
R22106:22109 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22121:22130 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22110:22117 X86Semantics X86_Decode get_flag def
R22119:22120 X86Semantics X86_MACHINE ZF constr
R22133:22136 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22148:22157 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22137:22144 X86Semantics X86_Decode get_flag def
R22146:22147 X86Semantics X86_MACHINE OF constr
R22160:22163 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22175:22184 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22164:22171 X86Semantics X86_Decode get_flag def
R22173:22174 X86Semantics X86_MACHINE SF constr
R22186:22189 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22208:22217 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22190:22194 X86Semantics X86_Decode arith def
R22196:22201 X86Semantics X86_RTL xor_op constr
R22218:22222 X86Semantics X86_Decode arith def
R22224:22228 X86Semantics X86_RTL or_op constr
R22243:22248 X86Syntax <> NLE_ct constr
R22255:22258 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22270:22279 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22259:22266 X86Semantics X86_Decode get_flag def
R22268:22269 X86Semantics X86_MACHINE ZF constr
R22282:22285 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22297:22306 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22286:22293 X86Semantics X86_Decode get_flag def
R22295:22296 X86Semantics X86_MACHINE OF constr
R22309:22312 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22324:22333 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22313:22320 X86Semantics X86_Decode get_flag def
R22322:22323 X86Semantics X86_MACHINE SF constr
R22336:22339 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22358:22367 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22340:22344 X86Semantics X86_Decode arith def
R22346:22351 X86Semantics X86_RTL xor_op constr
R22370:22373 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22391:22400 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22374:22378 X86Semantics X86_Decode arith def
R22380:22384 X86Semantics X86_RTL or_op constr
R22401:22403 X86Semantics X86_Decode not def
def 22429:22446 X86_Decode compute_parity_aux
R22463:22472 X86Semantics X86_RTL pseudo_reg ind
R22474:22478 RTL <> size1 def
R22485:22487 Coq.Init.Datatypes <> nat ind
R22496:22499 X86Semantics X86_Decode Conv def
R22502:22511 X86Semantics X86_RTL pseudo_reg ind
R22513:22517 RTL <> size1 def
R22548:22548 Coq.Init.Datatypes <> O constr
R22554:22559 X86Semantics X86_Decode load_Z def
R22561:22565 RTL <> size1 def
R22577:22577 Coq.Init.Datatypes <> S constr
R22595:22598 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22627:22636 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22599:22616 X86Semantics <> compute_parity_aux def
R22640:22643 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22654:22663 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22644:22649 X86Semantics X86_Decode load_Z def
R22667:22670 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22692:22702 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22671:22675 X86Semantics X86_Decode arith def
R22677:22683 X86Semantics X86_RTL shru_op constr
R22704:22707 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22724:22733 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22708:22713 X86Semantics X86_Decode cast_u def
R22715:22719 RTL <> size1 def
R22735:22739 X86Semantics X86_Decode arith def
R22747:22752 X86Semantics X86_RTL xor_op constr
R22741:22745 RTL <> size1 def
def 22785:22798 X86_Decode compute_parity
R22809:22812 X86Semantics X86_Decode Conv def
R22815:22824 X86Semantics X86_RTL pseudo_reg ind
R22826:22830 RTL <> size1 def
R22843:22846 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22861:22866 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22847:22852 X86Semantics X86_Decode load_Z def
R22854:22858 RTL <> size1 def
R22870:22873 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22888:22893 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22874:22879 X86Semantics X86_Decode load_Z def
R22881:22885 RTL <> size1 def
R22895:22898 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22928:22947 Monad <> :monad_scope:x_'<-'_x_';'_x not
R22900:22917 X86Semantics X86_Decode compute_parity_aux def
R22948:22952 X86Semantics X86_Decode arith def
R22954:22959 X86Semantics X86_RTL xor_op constr
def 23223:23230 X86_Decode conv_INC
R23237:23242 X86Syntax <> prefix rec
R23249:23252 Coq.Init.Datatypes <> bool ind
R23259:23265 X86Syntax <> operand ind
R23270:23273 X86Semantics X86_Decode Conv def
R23275:23278 Coq.Init.Datatypes <> unit ind
R23403:23406 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23418:23429 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23432:23435 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23446:23457 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23436:23441 X86Semantics X86_Decode load_Z def
R23460:23463 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23482:23493 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23464:23468 X86Semantics X86_Decode arith def
R23470:23475 X86Semantics X86_RTL add_op constr
R23507:23568 Monad <> :monad_scope:x_';;'_x not
R23573:23576 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23587:23596 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23577:23582 X86Semantics X86_Decode load_Z def
R23600:23603 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23620:23629 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23604:23607 X86Semantics X86_Decode test def
R23609:23613 X86Semantics X86_RTL lt_op constr
R23645:23656 Monad <> :monad_scope:x_';;'_x not
R23630:23637 X86Semantics X86_Decode set_flag def
R23639:23640 X86Semantics X86_MACHINE OF constr
R23660:23663 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23682:23691 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23664:23667 X86Semantics X86_Decode test def
R23669:23673 X86Semantics X86_RTL eq_op constr
R23707:23718 Monad <> :monad_scope:x_';;'_x not
R23692:23699 X86Semantics X86_Decode set_flag def
R23701:23702 X86Semantics X86_MACHINE ZF constr
R23722:23725 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23744:23753 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23726:23729 X86Semantics X86_Decode test def
R23731:23735 X86Semantics X86_RTL lt_op constr
R23769:23780 Monad <> :monad_scope:x_';;'_x not
R23754:23761 X86Semantics X86_Decode set_flag def
R23763:23764 X86Semantics X86_MACHINE SF constr
R23784:23787 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23805:23814 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23788:23801 X86Semantics X86_Decode compute_parity def
R23830:23841 Monad <> :monad_scope:x_';;'_x not
R23815:23822 X86Semantics X86_Decode set_flag def
R23824:23825 X86Semantics X86_MACHINE PF constr
R23844:23847 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23863:23872 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23848:23853 X86Semantics X86_Decode cast_u def
R23855:23859 RTL <> size4 def
R23875:23878 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23893:23902 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23879:23884 X86Semantics X86_Decode load_Z def
R23886:23890 RTL <> size4 def
R23905:23908 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23927:23936 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23909:23913 X86Semantics X86_Decode arith def
R23915:23920 X86Semantics X86_RTL add_op constr
R23940:23943 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23961:23970 Monad <> :monad_scope:x_'<-'_x_';'_x not
R23944:23947 X86Semantics X86_Decode test def
R23949:23954 X86Semantics X86_RTL ltu_op constr
R23971:23978 X86Semantics X86_Decode set_flag def
R23980:23981 X86Semantics X86_MACHINE AF constr
R23364:23377 X86Semantics X86_Decode get_segment_op def
R23383:23384 X86Syntax <> DS constr
R23332:23337 X86Semantics X86_Decode set_op def
R23299:23305 X86Semantics X86_Decode load_op def
def 24002:24009 X86_Decode conv_DEC
R24017:24022 X86Syntax <> prefix rec
R24029:24032 Coq.Init.Datatypes <> bool ind
R24040:24046 X86Syntax <> operand ind
R24051:24054 X86Semantics X86_Decode Conv def
R24056:24059 Coq.Init.Datatypes <> unit ind
R24183:24186 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24198:24207 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24210:24213 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24224:24233 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24214:24219 X86Semantics X86_Decode load_Z def
R24236:24239 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24258:24267 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24240:24244 X86Semantics X86_Decode arith def
R24246:24251 X86Semantics X86_RTL sub_op constr
R24281:24341 Monad <> :monad_scope:x_';;'_x not
R24346:24349 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24360:24369 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24350:24355 X86Semantics X86_Decode load_Z def
R24373:24376 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24393:24403 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24377:24380 X86Semantics X86_Decode test def
R24382:24386 X86Semantics X86_RTL lt_op constr
R24419:24430 Monad <> :monad_scope:x_';;'_x not
R24404:24411 X86Semantics X86_Decode set_flag def
R24413:24414 X86Semantics X86_MACHINE OF constr
R24434:24437 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24456:24465 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24438:24441 X86Semantics X86_Decode test def
R24443:24447 X86Semantics X86_RTL eq_op constr
R24481:24500 Monad <> :monad_scope:x_';;'_x not
R24466:24473 X86Semantics X86_Decode set_flag def
R24475:24476 X86Semantics X86_MACHINE ZF constr
R24504:24507 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24526:24535 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24508:24511 X86Semantics X86_Decode test def
R24513:24517 X86Semantics X86_RTL lt_op constr
R24551:24562 Monad <> :monad_scope:x_';;'_x not
R24536:24543 X86Semantics X86_Decode set_flag def
R24545:24546 X86Semantics X86_MACHINE SF constr
R24566:24569 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24587:24596 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24570:24583 X86Semantics X86_Decode compute_parity def
R24612:24623 Monad <> :monad_scope:x_';;'_x not
R24597:24604 X86Semantics X86_Decode set_flag def
R24606:24607 X86Semantics X86_MACHINE PF constr
R24626:24629 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24645:24654 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24630:24635 X86Semantics X86_Decode cast_u def
R24637:24641 RTL <> size4 def
R24657:24660 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24675:24684 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24661:24666 X86Semantics X86_Decode load_Z def
R24668:24672 RTL <> size4 def
R24687:24690 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24709:24718 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24691:24695 X86Semantics X86_Decode arith def
R24697:24702 X86Semantics X86_RTL sub_op constr
R24722:24725 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24743:24752 Monad <> :monad_scope:x_'<-'_x_';'_x not
R24726:24729 X86Semantics X86_Decode test def
R24731:24736 X86Semantics X86_RTL ltu_op constr
R24753:24760 X86Semantics X86_Decode set_flag def
R24762:24763 X86Semantics X86_MACHINE AF constr
R24145:24158 X86Semantics X86_Decode get_segment_op def
R24164:24165 X86Syntax <> DS constr
R24113:24118 X86Semantics X86_Decode set_op def
R24080:24086 X86Semantics X86_Decode load_op def
def 24784:24791 X86_Decode conv_ADC
R24799:24804 X86Syntax <> prefix rec
R24811:24814 Coq.Init.Datatypes <> bool ind
R24827:24833 X86Syntax <> operand ind
R24838:24841 X86Semantics X86_Decode Conv def
R24843:24846 Coq.Init.Datatypes <> unit ind
R25017:25020 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25031:25040 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25021:25026 X86Semantics X86_Decode load_Z def
R25043:25046 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25057:25093 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25047:25052 X86Semantics X86_Decode load_Z def
R25096:25099 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25112:25121 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25124:25127 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25140:25149 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25153:25156 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25168:25177 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25157:25164 X86Semantics X86_Decode get_flag def
R25166:25167 X86Semantics X86_MACHINE CF constr
R25183:25186 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25199:25209 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25187:25192 X86Semantics X86_Decode cast_u def
R25212:25215 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25234:25243 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25216:25220 X86Semantics X86_Decode arith def
R25222:25227 X86Semantics X86_RTL add_op constr
R25246:25249 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25271:25280 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25250:25254 X86Semantics X86_Decode arith def
R25256:25261 X86Semantics X86_RTL add_op constr
R25295:25339 Monad <> :monad_scope:x_';;'_x not
R25342:25345 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25364:25373 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25346:25349 X86Semantics X86_Decode test def
R25351:25355 X86Semantics X86_RTL lt_op constr
R25376:25379 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25398:25407 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25380:25383 X86Semantics X86_Decode test def
R25385:25389 X86Semantics X86_RTL lt_op constr
R25410:25413 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25432:25441 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25414:25417 X86Semantics X86_Decode test def
R25419:25423 X86Semantics X86_RTL lt_op constr
R25444:25447 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25473:25482 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25449:25453 X86Semantics X86_Decode arith def
R25461:25466 X86Semantics X86_RTL xor_op constr
R25455:25459 RTL <> size1 def
R25485:25488 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25514:25523 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25490:25494 X86Semantics X86_Decode arith def
R25502:25507 X86Semantics X86_RTL xor_op constr
R25496:25500 RTL <> size1 def
R25526:25529 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25555:25564 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25531:25535 X86Semantics X86_Decode arith def
R25543:25548 X86Semantics X86_RTL xor_op constr
R25537:25541 RTL <> size1 def
R25567:25570 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25596:25605 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25572:25576 X86Semantics X86_Decode arith def
R25584:25589 X86Semantics X86_RTL and_op constr
R25578:25582 RTL <> size1 def
R25620:25656 Monad <> :monad_scope:x_';;'_x not
R25606:25613 X86Semantics X86_Decode set_flag def
R25615:25616 X86Semantics X86_MACHINE OF constr
R25659:25662 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25680:25689 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25663:25666 X86Semantics X86_Decode test def
R25668:25673 X86Semantics X86_RTL ltu_op constr
R25692:25695 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25713:25722 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25696:25699 X86Semantics X86_Decode test def
R25701:25706 X86Semantics X86_RTL ltu_op constr
R25725:25728 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25753:25762 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25730:25734 X86Semantics X86_Decode arith def
R25742:25746 X86Semantics X86_RTL or_op constr
R25736:25740 RTL <> size1 def
R25777:25813 Monad <> :monad_scope:x_';;'_x not
R25763:25770 X86Semantics X86_Decode set_flag def
R25772:25773 X86Semantics X86_MACHINE CF constr
R25816:25819 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25838:25847 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25820:25823 X86Semantics X86_Decode test def
R25825:25829 X86Semantics X86_RTL eq_op constr
R25862:25898 Monad <> :monad_scope:x_';;'_x not
R25848:25855 X86Semantics X86_Decode set_flag def
R25857:25858 X86Semantics X86_MACHINE ZF constr
R25901:25904 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25923:25932 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25905:25908 X86Semantics X86_Decode test def
R25910:25914 X86Semantics X86_RTL lt_op constr
R25947:25983 Monad <> :monad_scope:x_';;'_x not
R25933:25940 X86Semantics X86_Decode set_flag def
R25942:25943 X86Semantics X86_MACHINE SF constr
R25986:25989 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26007:26016 Monad <> :monad_scope:x_'<-'_x_';'_x not
R25990:26003 X86Semantics X86_Decode compute_parity def
R26031:26067 Monad <> :monad_scope:x_';;'_x not
R26017:26024 X86Semantics X86_Decode set_flag def
R26026:26027 X86Semantics X86_MACHINE PF constr
R26070:26073 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26089:26098 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26074:26079 X86Semantics X86_Decode cast_u def
R26081:26085 RTL <> size4 def
R26101:26104 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26120:26129 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26105:26110 X86Semantics X86_Decode cast_u def
R26112:26116 RTL <> size4 def
R26133:26136 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26153:26162 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26137:26142 X86Semantics X86_Decode cast_u def
R26144:26148 RTL <> size4 def
R26165:26168 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26194:26203 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26170:26174 X86Semantics X86_Decode arith def
R26182:26187 X86Semantics X86_RTL add_op constr
R26176:26180 RTL <> size4 def
R26206:26209 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26236:26245 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26211:26215 X86Semantics X86_Decode arith def
R26223:26228 X86Semantics X86_RTL add_op constr
R26217:26221 RTL <> size4 def
R26248:26251 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26269:26278 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26252:26255 X86Semantics X86_Decode test def
R26257:26262 X86Semantics X86_RTL ltu_op constr
R26281:26284 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26302:26311 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26285:26288 X86Semantics X86_Decode test def
R26290:26295 X86Semantics X86_RTL ltu_op constr
R26314:26317 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26342:26351 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26319:26323 X86Semantics X86_Decode arith def
R26331:26335 X86Semantics X86_RTL or_op constr
R26325:26329 RTL <> size1 def
R26352:26359 X86Semantics X86_Decode set_flag def
R26361:26362 X86Semantics X86_MACHINE AF constr
R24932:24946 X86Semantics X86_Decode get_segment_op2 def
R24952:24953 X86Syntax <> DS constr
R24900:24905 X86Semantics X86_Decode set_op def
R24867:24873 X86Semantics X86_Decode load_op def
def 26380:26387 X86_Decode conv_STC
R26390:26393 X86Semantics X86_Decode Conv def
R26395:26398 Coq.Init.Datatypes <> unit ind
R26408:26411 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26426:26429 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26412:26417 X86Semantics X86_Decode load_Z def
R26419:26423 RTL <> size1 def
R26430:26437 X86Semantics X86_Decode set_flag def
R26439:26440 X86Semantics X86_MACHINE CF constr
def 26459:26466 X86_Decode conv_STD
R26469:26472 X86Semantics X86_Decode Conv def
R26474:26477 Coq.Init.Datatypes <> unit ind
R26487:26490 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26505:26508 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26491:26496 X86Semantics X86_Decode load_Z def
R26498:26502 RTL <> size1 def
R26509:26516 X86Semantics X86_Decode set_flag def
R26518:26519 X86Semantics X86_MACHINE DF constr
def 26539:26546 X86_Decode conv_CLC
R26549:26552 X86Semantics X86_Decode Conv def
R26554:26557 Coq.Init.Datatypes <> unit ind
R26568:26571 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26586:26589 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26572:26577 X86Semantics X86_Decode load_Z def
R26579:26583 RTL <> size1 def
R26590:26597 X86Semantics X86_Decode set_flag def
R26599:26600 X86Semantics X86_MACHINE CF constr
def 26620:26627 X86_Decode conv_CLD
R26630:26633 X86Semantics X86_Decode Conv def
R26635:26638 Coq.Init.Datatypes <> unit ind
R26649:26652 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26667:26670 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26653:26658 X86Semantics X86_Decode load_Z def
R26660:26664 RTL <> size1 def
R26671:26678 X86Semantics X86_Decode set_flag def
R26680:26681 X86Semantics X86_MACHINE DF constr
def 26701:26708 X86_Decode conv_CMC
R26711:26714 X86Semantics X86_Decode Conv def
R26716:26719 Coq.Init.Datatypes <> unit ind
R26730:26733 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26748:26751 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26734:26739 X86Semantics X86_Decode load_Z def
R26741:26745 RTL <> size1 def
R26754:26757 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26769:26772 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26758:26765 X86Semantics X86_Decode get_flag def
R26767:26768 X86Semantics X86_MACHINE CF constr
R26775:26778 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26797:26800 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26779:26782 X86Semantics X86_Decode test def
R26784:26788 X86Semantics X86_RTL eq_op constr
R26801:26808 X86Semantics X86_Decode set_flag def
R26810:26811 X86Semantics X86_MACHINE CF constr
def 26829:26837 X86_Decode conv_LAHF
R26840:26843 X86Semantics X86_Decode Conv def
R26845:26848 Coq.Init.Datatypes <> unit ind
R26858:26861 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26876:26880 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26862:26867 X86Semantics X86_Decode load_Z def
R26869:26873 RTL <> size8 def
R26883:26886 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26898:26901 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26887:26894 X86Semantics X86_Decode get_flag def
R26896:26897 X86Semantics X86_MACHINE SF constr
R26905:26908 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26923:26926 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26909:26914 X86Semantics X86_Decode load_Z def
R26916:26920 RTL <> size8 def
R26930:26933 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26949:26954 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26934:26939 X86Semantics X86_Decode cast_u def
R26941:26945 RTL <> size8 def
R26958:26961 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26989:26994 Monad <> :monad_scope:x_'<-'_x_';'_x not
R26963:26967 X86Semantics X86_Decode arith def
R26975:26980 X86Semantics X86_RTL shl_op constr
R26969:26973 RTL <> size8 def
R26998:27001 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27028:27033 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27003:27007 X86Semantics X86_Decode arith def
R27015:27019 X86Semantics X86_RTL or_op constr
R27009:27013 RTL <> size8 def
R27036:27039 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27051:27054 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27040:27047 X86Semantics X86_Decode get_flag def
R27049:27050 X86Semantics X86_MACHINE ZF constr
R27058:27061 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27076:27079 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27062:27067 X86Semantics X86_Decode load_Z def
R27069:27073 RTL <> size8 def
R27083:27086 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27102:27107 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27087:27092 X86Semantics X86_Decode cast_u def
R27094:27098 RTL <> size8 def
R27111:27114 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27142:27147 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27116:27120 X86Semantics X86_Decode arith def
R27128:27133 X86Semantics X86_RTL shl_op constr
R27122:27126 RTL <> size8 def
R27151:27154 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27181:27186 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27156:27160 X86Semantics X86_Decode arith def
R27168:27172 X86Semantics X86_RTL or_op constr
R27162:27166 RTL <> size8 def
R27189:27192 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27204:27207 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27193:27200 X86Semantics X86_Decode get_flag def
R27202:27203 X86Semantics X86_MACHINE AF constr
R27211:27214 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27229:27232 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27215:27220 X86Semantics X86_Decode load_Z def
R27222:27226 RTL <> size8 def
R27236:27239 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27255:27260 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27240:27245 X86Semantics X86_Decode cast_u def
R27247:27251 RTL <> size8 def
R27264:27267 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27295:27300 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27269:27273 X86Semantics X86_Decode arith def
R27281:27286 X86Semantics X86_RTL shl_op constr
R27275:27279 RTL <> size8 def
R27304:27307 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27334:27339 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27309:27313 X86Semantics X86_Decode arith def
R27321:27325 X86Semantics X86_RTL or_op constr
R27315:27319 RTL <> size8 def
R27342:27345 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27357:27360 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27346:27353 X86Semantics X86_Decode get_flag def
R27355:27356 X86Semantics X86_MACHINE PF constr
R27364:27367 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27382:27385 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27368:27373 X86Semantics X86_Decode load_Z def
R27375:27379 RTL <> size8 def
R27389:27392 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27408:27413 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27393:27398 X86Semantics X86_Decode cast_u def
R27400:27404 RTL <> size8 def
R27417:27420 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27448:27453 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27422:27426 X86Semantics X86_Decode arith def
R27434:27439 X86Semantics X86_RTL shl_op constr
R27428:27432 RTL <> size8 def
R27457:27460 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27487:27492 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27462:27466 X86Semantics X86_Decode arith def
R27474:27478 X86Semantics X86_RTL or_op constr
R27468:27472 RTL <> size8 def
R27495:27498 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27510:27513 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27499:27506 X86Semantics X86_Decode get_flag def
R27508:27509 X86Semantics X86_MACHINE CF constr
R27517:27520 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27535:27538 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27521:27526 X86Semantics X86_Decode load_Z def
R27528:27532 RTL <> size8 def
R27542:27545 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27561:27566 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27546:27551 X86Semantics X86_Decode cast_u def
R27553:27557 RTL <> size8 def
R27570:27573 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27601:27606 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27575:27579 X86Semantics X86_Decode arith def
R27587:27592 X86Semantics X86_RTL shl_op constr
R27581:27585 RTL <> size8 def
R27610:27613 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27640:27645 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27615:27619 X86Semantics X86_Decode arith def
R27627:27631 X86Semantics X86_RTL or_op constr
R27621:27625 RTL <> size8 def
R27648:27651 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27666:27669 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27652:27657 X86Semantics X86_Decode load_Z def
R27659:27663 RTL <> size8 def
R27673:27676 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27691:27694 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27677:27682 X86Semantics X86_Decode load_Z def
R27684:27688 RTL <> size8 def
R27698:27701 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27717:27722 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27702:27707 X86Semantics X86_Decode cast_u def
R27709:27713 RTL <> size8 def
R27726:27729 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27757:27762 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27731:27735 X86Semantics X86_Decode arith def
R27743:27748 X86Semantics X86_RTL shl_op constr
R27737:27741 RTL <> size8 def
R27766:27769 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27796:27801 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27771:27775 X86Semantics X86_Decode arith def
R27783:27787 X86Semantics X86_RTL or_op constr
R27777:27781 RTL <> size8 def
R27802:27809 X86Semantics X86_Decode iset_op8 def
R27819:27824 X86Syntax <> Reg_op constr
R27826:27828 X86Syntax <> ESP constr
R27811:27812 X86Syntax <> DS constr
def 27844:27852 X86_Decode conv_SAHF
R27855:27858 X86Semantics X86_Decode Conv def
R27860:27863 Coq.Init.Datatypes <> unit ind
R27873:27876 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27891:27894 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27877:27882 X86Semantics X86_Decode load_Z def
R27884:27888 RTL <> size8 def
R27897:27900 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27926:27930 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27901:27909 X86Semantics X86_Decode iload_op8 def
R27915:27920 X86Syntax <> Reg_op constr
R27922:27924 X86Syntax <> ESP constr
R27911:27912 X86Syntax <> DS constr
R27934:27937 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27952:27955 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27938:27943 X86Semantics X86_Decode load_Z def
R27945:27949 RTL <> size8 def
R27959:27962 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27989:27992 Monad <> :monad_scope:x_'<-'_x_';'_x not
R27964:27968 X86Semantics X86_Decode arith def
R27976:27981 X86Semantics X86_RTL shr_op constr
R27970:27974 RTL <> size8 def
R27996:27999 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28027:28030 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28001:28005 X86Semantics X86_Decode arith def
R28013:28018 X86Semantics X86_RTL and_op constr
R28007:28011 RTL <> size8 def
R28032:28035 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28054:28057 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28036:28039 X86Semantics X86_Decode test def
R28041:28045 X86Semantics X86_RTL eq_op constr
R28071:28076 Monad <> :monad_scope:x_';;'_x not
R28058:28065 X86Semantics X86_Decode set_flag def
R28067:28068 X86Semantics X86_MACHINE SF constr
R28080:28083 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28098:28101 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28084:28089 X86Semantics X86_Decode load_Z def
R28091:28095 RTL <> size8 def
R28105:28108 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28135:28138 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28110:28114 X86Semantics X86_Decode arith def
R28122:28127 X86Semantics X86_RTL shr_op constr
R28116:28120 RTL <> size8 def
R28142:28145 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28173:28176 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28147:28151 X86Semantics X86_Decode arith def
R28159:28164 X86Semantics X86_RTL and_op constr
R28153:28157 RTL <> size8 def
R28178:28181 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28200:28203 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28182:28185 X86Semantics X86_Decode test def
R28187:28191 X86Semantics X86_RTL eq_op constr
R28217:28222 Monad <> :monad_scope:x_';;'_x not
R28204:28211 X86Semantics X86_Decode set_flag def
R28213:28214 X86Semantics X86_MACHINE ZF constr
R28226:28229 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28244:28247 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28230:28235 X86Semantics X86_Decode load_Z def
R28237:28241 RTL <> size8 def
R28251:28254 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28281:28284 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28256:28260 X86Semantics X86_Decode arith def
R28268:28273 X86Semantics X86_RTL shr_op constr
R28262:28266 RTL <> size8 def
R28288:28291 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28319:28322 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28293:28297 X86Semantics X86_Decode arith def
R28305:28310 X86Semantics X86_RTL and_op constr
R28299:28303 RTL <> size8 def
R28324:28327 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28346:28349 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28328:28331 X86Semantics X86_Decode test def
R28333:28337 X86Semantics X86_RTL eq_op constr
R28363:28368 Monad <> :monad_scope:x_';;'_x not
R28350:28357 X86Semantics X86_Decode set_flag def
R28359:28360 X86Semantics X86_MACHINE AF constr
R28372:28375 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28390:28393 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28376:28381 X86Semantics X86_Decode load_Z def
R28383:28387 RTL <> size8 def
R28397:28400 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28427:28430 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28402:28406 X86Semantics X86_Decode arith def
R28414:28419 X86Semantics X86_RTL shr_op constr
R28408:28412 RTL <> size8 def
R28434:28437 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28465:28468 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28439:28443 X86Semantics X86_Decode arith def
R28451:28456 X86Semantics X86_RTL and_op constr
R28445:28449 RTL <> size8 def
R28470:28473 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28492:28495 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28474:28477 X86Semantics X86_Decode test def
R28479:28483 X86Semantics X86_RTL eq_op constr
R28509:28514 Monad <> :monad_scope:x_';;'_x not
R28496:28503 X86Semantics X86_Decode set_flag def
R28505:28506 X86Semantics X86_MACHINE PF constr
R28518:28521 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28536:28539 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28522:28527 X86Semantics X86_Decode load_Z def
R28529:28533 RTL <> size8 def
R28543:28546 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28573:28576 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28548:28552 X86Semantics X86_Decode arith def
R28560:28565 X86Semantics X86_RTL shr_op constr
R28554:28558 RTL <> size8 def
R28580:28583 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28611:28614 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28585:28589 X86Semantics X86_Decode arith def
R28597:28602 X86Semantics X86_RTL and_op constr
R28591:28595 RTL <> size8 def
R28616:28619 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28638:28641 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28620:28623 X86Semantics X86_Decode test def
R28625:28629 X86Semantics X86_RTL eq_op constr
R28642:28649 X86Semantics X86_Decode set_flag def
R28651:28652 X86Semantics X86_MACHINE CF constr
def 28673:28680 X86_Decode conv_ADD
R28688:28693 X86Syntax <> prefix rec
R28700:28703 Coq.Init.Datatypes <> bool ind
R28716:28722 X86Syntax <> operand ind
R28727:28730 X86Semantics X86_Decode Conv def
R28732:28735 Coq.Init.Datatypes <> unit ind
R28906:28909 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28920:28929 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28910:28915 X86Semantics X86_Decode load_Z def
R28932:28935 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28950:28986 Monad <> :monad_scope:x_'<-'_x_';'_x not
R28936:28941 X86Semantics X86_Decode load_Z def
R28943:28947 RTL <> size1 def
R28989:28992 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29005:29014 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29017:29020 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29033:29042 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29045:29048 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29067:29076 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29049:29053 X86Semantics X86_Decode arith def
R29055:29060 X86Semantics X86_RTL add_op constr
R29091:29135 Monad <> :monad_scope:x_';;'_x not
R29138:29141 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29160:29169 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29142:29145 X86Semantics X86_Decode test def
R29147:29151 X86Semantics X86_RTL lt_op constr
R29172:29175 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29194:29203 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29176:29179 X86Semantics X86_Decode test def
R29181:29185 X86Semantics X86_RTL lt_op constr
R29206:29209 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29228:29237 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29210:29213 X86Semantics X86_Decode test def
R29215:29219 X86Semantics X86_RTL lt_op constr
R29240:29243 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29269:29278 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29245:29249 X86Semantics X86_Decode arith def
R29257:29262 X86Semantics X86_RTL xor_op constr
R29251:29255 RTL <> size1 def
R29281:29284 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29310:29319 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29286:29290 X86Semantics X86_Decode arith def
R29298:29303 X86Semantics X86_RTL xor_op constr
R29292:29296 RTL <> size1 def
R29322:29325 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29351:29360 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29327:29331 X86Semantics X86_Decode arith def
R29339:29344 X86Semantics X86_RTL xor_op constr
R29333:29337 RTL <> size1 def
R29363:29366 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29392:29401 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29368:29372 X86Semantics X86_Decode arith def
R29380:29385 X86Semantics X86_RTL and_op constr
R29374:29378 RTL <> size1 def
R29416:29452 Monad <> :monad_scope:x_';;'_x not
R29402:29409 X86Semantics X86_Decode set_flag def
R29411:29412 X86Semantics X86_MACHINE OF constr
R29455:29458 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29476:29485 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29459:29462 X86Semantics X86_Decode test def
R29464:29469 X86Semantics X86_RTL ltu_op constr
R29488:29491 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29509:29518 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29492:29495 X86Semantics X86_Decode test def
R29497:29502 X86Semantics X86_RTL ltu_op constr
R29521:29524 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29549:29558 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29526:29530 X86Semantics X86_Decode arith def
R29538:29542 X86Semantics X86_RTL or_op constr
R29532:29536 RTL <> size1 def
R29573:29609 Monad <> :monad_scope:x_';;'_x not
R29559:29566 X86Semantics X86_Decode set_flag def
R29568:29569 X86Semantics X86_MACHINE CF constr
R29612:29615 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29634:29643 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29616:29619 X86Semantics X86_Decode test def
R29621:29625 X86Semantics X86_RTL eq_op constr
R29658:29694 Monad <> :monad_scope:x_';;'_x not
R29644:29651 X86Semantics X86_Decode set_flag def
R29653:29654 X86Semantics X86_MACHINE ZF constr
R29697:29700 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29719:29728 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29701:29704 X86Semantics X86_Decode test def
R29706:29710 X86Semantics X86_RTL lt_op constr
R29743:29779 Monad <> :monad_scope:x_';;'_x not
R29729:29736 X86Semantics X86_Decode set_flag def
R29738:29739 X86Semantics X86_MACHINE SF constr
R29782:29785 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29803:29812 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29786:29799 X86Semantics X86_Decode compute_parity def
R29827:29863 Monad <> :monad_scope:x_';;'_x not
R29813:29820 X86Semantics X86_Decode set_flag def
R29822:29823 X86Semantics X86_MACHINE PF constr
R29866:29869 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29885:29894 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29870:29875 X86Semantics X86_Decode cast_u def
R29877:29881 RTL <> size4 def
R29897:29900 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29916:29925 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29901:29906 X86Semantics X86_Decode cast_u def
R29908:29912 RTL <> size4 def
R29928:29931 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29957:29966 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29933:29937 X86Semantics X86_Decode arith def
R29945:29950 X86Semantics X86_RTL add_op constr
R29939:29943 RTL <> size4 def
R29969:29972 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29990:29999 Monad <> :monad_scope:x_'<-'_x_';'_x not
R29973:29976 X86Semantics X86_Decode test def
R29978:29983 X86Semantics X86_RTL ltu_op constr
R30002:30005 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30023:30032 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30006:30009 X86Semantics X86_Decode test def
R30011:30016 X86Semantics X86_RTL ltu_op constr
R30035:30038 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30063:30072 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30040:30044 X86Semantics X86_Decode arith def
R30052:30056 X86Semantics X86_RTL or_op constr
R30046:30050 RTL <> size1 def
R30073:30080 X86Semantics X86_Decode set_flag def
R30082:30083 X86Semantics X86_MACHINE AF constr
R28821:28835 X86Semantics X86_Decode get_segment_op2 def
R28841:28842 X86Syntax <> DS constr
R28789:28794 X86Semantics X86_Decode set_op def
R28756:28762 X86Semantics X86_Decode load_op def
def 30471:30490 X86_Decode conv_SUB_CMP_generic
R30496:30499 Coq.Init.Datatypes <> bool ind
R30508:30513 X86Syntax <> prefix rec
R30520:30523 Coq.Init.Datatypes <> bool ind
R30533:30539 X86Syntax <> operand ind
R30552:30558 X86Syntax <> operand ind
R30586:30601 X86Syntax <> segment_register ind
R30724:30727 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30738:30747 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30728:30733 X86Semantics X86_Decode load_Z def
R30750:30753 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30768:30804 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30754:30759 X86Semantics X86_Decode load_Z def
R30761:30765 RTL <> size1 def
R30807:30810 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30824:30833 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30836:30839 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30853:30862 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30865:30868 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30887:30922 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30869:30873 X86Semantics X86_Decode arith def
R30875:30880 X86Semantics X86_RTL sub_op constr
R30928:30931 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30952:30961 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30932:30936 X86Semantics X86_Decode arith def
R30938:30943 X86Semantics X86_RTL sub_op constr
R30964:30967 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30986:30995 Monad <> :monad_scope:x_'<-'_x_';'_x not
R30968:30971 X86Semantics X86_Decode test def
R30973:30977 X86Semantics X86_RTL lt_op constr
R30998:31001 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31023:31032 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31002:31005 X86Semantics X86_Decode test def
R31007:31011 X86Semantics X86_RTL lt_op constr
R31035:31038 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31057:31066 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31039:31042 X86Semantics X86_Decode test def
R31044:31048 X86Semantics X86_RTL lt_op constr
R31069:31072 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31098:31107 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31074:31078 X86Semantics X86_Decode arith def
R31086:31091 X86Semantics X86_RTL xor_op constr
R31080:31084 RTL <> size1 def
R31110:31113 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31139:31148 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31115:31119 X86Semantics X86_Decode arith def
R31127:31132 X86Semantics X86_RTL xor_op constr
R31121:31125 RTL <> size1 def
R31151:31154 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31180:31189 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31156:31160 X86Semantics X86_Decode arith def
R31168:31173 X86Semantics X86_RTL xor_op constr
R31162:31166 RTL <> size1 def
R31192:31195 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31221:31230 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31197:31201 X86Semantics X86_Decode arith def
R31209:31214 X86Semantics X86_RTL and_op constr
R31203:31207 RTL <> size1 def
R31245:31281 Monad <> :monad_scope:x_';;'_x not
R31231:31238 X86Semantics X86_Decode set_flag def
R31240:31241 X86Semantics X86_MACHINE OF constr
R31284:31287 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31305:31314 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31288:31291 X86Semantics X86_Decode test def
R31293:31298 X86Semantics X86_RTL ltu_op constr
R31329:31365 Monad <> :monad_scope:x_';;'_x not
R31315:31322 X86Semantics X86_Decode set_flag def
R31324:31325 X86Semantics X86_MACHINE CF constr
R31368:31371 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31390:31399 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31372:31375 X86Semantics X86_Decode test def
R31377:31381 X86Semantics X86_RTL eq_op constr
R31414:31450 Monad <> :monad_scope:x_';;'_x not
R31400:31407 X86Semantics X86_Decode set_flag def
R31409:31410 X86Semantics X86_MACHINE ZF constr
R31453:31456 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31475:31484 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31457:31460 X86Semantics X86_Decode test def
R31462:31466 X86Semantics X86_RTL lt_op constr
R31499:31535 Monad <> :monad_scope:x_';;'_x not
R31485:31492 X86Semantics X86_Decode set_flag def
R31494:31495 X86Semantics X86_MACHINE SF constr
R31538:31541 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31559:31568 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31542:31555 X86Semantics X86_Decode compute_parity def
R31583:31619 Monad <> :monad_scope:x_';;'_x not
R31569:31576 X86Semantics X86_Decode set_flag def
R31578:31579 X86Semantics X86_MACHINE PF constr
R31622:31625 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31641:31650 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31626:31631 X86Semantics X86_Decode cast_u def
R31633:31637 RTL <> size4 def
R31653:31656 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31672:31681 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31657:31662 X86Semantics X86_Decode cast_u def
R31664:31668 RTL <> size4 def
R31684:31687 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31705:31714 Monad <> :monad_scope:x_'<-'_x_';'_x not
R31688:31691 X86Semantics X86_Decode test def
R31693:31698 X86Semantics X86_RTL ltu_op constr
R31729:31740 Monad <> :monad_scope:x_';;'_x not
R31715:31722 X86Semantics X86_Decode set_flag def
R31724:31725 X86Semantics X86_MACHINE AF constr
R31805:31808 Monad <> :monad_scope:'ret'_x not
R31809:31810 Coq.Init.Datatypes <> tt constr
R30656:30661 X86Semantics X86_Decode set_op def
R30623:30629 X86Semantics X86_Decode load_op def
def 31827:31834 X86_Decode conv_CMP
R31842:31847 X86Syntax <> prefix rec
R31854:31857 Coq.Init.Datatypes <> bool ind
R31870:31876 X86Syntax <> operand ind
R31935:31954 X86Semantics X86_Decode conv_SUB_CMP_generic def
R31956:31960 Coq.Init.Datatypes <> false constr
R31897:31911 X86Semantics X86_Decode get_segment_op2 def
R31917:31918 X86Syntax <> DS constr
def 32006:32013 X86_Decode conv_SUB
R32021:32026 X86Syntax <> prefix rec
R32033:32036 Coq.Init.Datatypes <> bool ind
R32049:32055 X86Syntax <> operand ind
R32114:32133 X86Semantics X86_Decode conv_SUB_CMP_generic def
R32135:32138 Coq.Init.Datatypes <> true constr
R32076:32090 X86Semantics X86_Decode get_segment_op2 def
R32096:32097 X86Syntax <> DS constr
def 32184:32191 X86_Decode conv_NEG
R32199:32204 X86Syntax <> prefix rec
R32211:32214 Coq.Init.Datatypes <> bool ind
R32223:32229 X86Syntax <> operand ind
R32283:32302 X86Semantics X86_Decode conv_SUB_CMP_generic def
R32320:32325 X86Syntax <> Imm_op constr
R32327:32335 Bits Word zero def
R32304:32307 Coq.Init.Datatypes <> true constr
R32250:32263 X86Semantics X86_Decode get_segment_op def
R32269:32270 X86Syntax <> DS constr
def 32369:32376 X86_Decode conv_SBB
R32384:32389 X86Syntax <> prefix rec
R32396:32399 Coq.Init.Datatypes <> bool ind
R32412:32418 X86Syntax <> operand ind
R32590:32593 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32604:32613 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32594:32599 X86Semantics X86_Decode load_Z def
R32616:32619 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32634:32652 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32620:32625 X86Semantics X86_Decode load_Z def
R32627:32631 RTL <> size1 def
R32659:32662 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32674:32683 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32663:32670 X86Semantics X86_Decode get_flag def
R32672:32673 X86Semantics X86_MACHINE CF constr
R32694:32697 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32713:32748 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32698:32703 X86Semantics X86_Decode cast_u def
R32751:32754 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32767:32776 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32779:32782 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32795:32804 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32809:32812 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32831:32840 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32813:32817 X86Semantics X86_Decode arith def
R32819:32824 X86Semantics X86_RTL sub_op constr
R32843:32846 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32875:32910 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32847:32851 X86Semantics X86_Decode arith def
R32853:32858 X86Semantics X86_RTL sub_op constr
R32916:32919 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32940:32949 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32920:32924 X86Semantics X86_Decode arith def
R32926:32931 X86Semantics X86_RTL sub_op constr
R32952:32955 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32974:32983 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32956:32959 X86Semantics X86_Decode test def
R32961:32965 X86Semantics X86_RTL lt_op constr
R32986:32989 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33011:33020 Monad <> :monad_scope:x_'<-'_x_';'_x not
R32990:32993 X86Semantics X86_Decode test def
R32995:32999 X86Semantics X86_RTL lt_op constr
R33023:33026 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33045:33054 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33027:33030 X86Semantics X86_Decode test def
R33032:33036 X86Semantics X86_RTL lt_op constr
R33057:33060 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33086:33095 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33062:33066 X86Semantics X86_Decode arith def
R33074:33079 X86Semantics X86_RTL xor_op constr
R33068:33072 RTL <> size1 def
R33098:33101 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33127:33136 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33103:33107 X86Semantics X86_Decode arith def
R33115:33120 X86Semantics X86_RTL xor_op constr
R33109:33113 RTL <> size1 def
R33139:33142 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33168:33177 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33144:33148 X86Semantics X86_Decode arith def
R33156:33161 X86Semantics X86_RTL xor_op constr
R33150:33154 RTL <> size1 def
R33180:33183 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33209:33218 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33185:33189 X86Semantics X86_Decode arith def
R33197:33202 X86Semantics X86_RTL and_op constr
R33191:33195 RTL <> size1 def
R33233:33269 Monad <> :monad_scope:x_';;'_x not
R33219:33226 X86Semantics X86_Decode set_flag def
R33228:33229 X86Semantics X86_MACHINE OF constr
R33273:33276 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33294:33303 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33277:33280 X86Semantics X86_Decode test def
R33282:33287 X86Semantics X86_RTL ltu_op constr
R33308:33311 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33328:33337 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33312:33315 X86Semantics X86_Decode test def
R33317:33321 X86Semantics X86_RTL eq_op constr
R33340:33343 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33364:33373 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33344:33348 X86Semantics X86_Decode arith def
R33350:33354 X86Semantics X86_RTL or_op constr
R33388:33424 Monad <> :monad_scope:x_';;'_x not
R33374:33381 X86Semantics X86_Decode set_flag def
R33383:33384 X86Semantics X86_MACHINE CF constr
R33427:33430 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33449:33458 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33431:33434 X86Semantics X86_Decode test def
R33436:33440 X86Semantics X86_RTL eq_op constr
R33473:33509 Monad <> :monad_scope:x_';;'_x not
R33459:33466 X86Semantics X86_Decode set_flag def
R33468:33469 X86Semantics X86_MACHINE ZF constr
R33512:33515 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33534:33543 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33516:33519 X86Semantics X86_Decode test def
R33521:33525 X86Semantics X86_RTL lt_op constr
R33558:33594 Monad <> :monad_scope:x_';;'_x not
R33544:33551 X86Semantics X86_Decode set_flag def
R33553:33554 X86Semantics X86_MACHINE SF constr
R33597:33600 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33618:33627 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33601:33614 X86Semantics X86_Decode compute_parity def
R33642:33678 Monad <> :monad_scope:x_';;'_x not
R33628:33635 X86Semantics X86_Decode set_flag def
R33637:33638 X86Semantics X86_MACHINE PF constr
R33681:33684 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33700:33709 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33685:33690 X86Semantics X86_Decode cast_u def
R33692:33696 RTL <> size4 def
R33712:33715 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33731:33740 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33716:33721 X86Semantics X86_Decode cast_u def
R33723:33727 RTL <> size4 def
R33744:33747 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33765:33774 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33748:33751 X86Semantics X86_Decode test def
R33753:33758 X86Semantics X86_RTL ltu_op constr
R33779:33782 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33799:33808 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33783:33786 X86Semantics X86_Decode test def
R33788:33792 X86Semantics X86_RTL eq_op constr
R33811:33814 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33835:33844 Monad <> :monad_scope:x_'<-'_x_';'_x not
R33815:33819 X86Semantics X86_Decode arith def
R33821:33825 X86Semantics X86_RTL or_op constr
R33859:33869 Monad <> :monad_scope:x_';;'_x not
R33845:33852 X86Semantics X86_Decode set_flag def
R33854:33855 X86Semantics X86_MACHINE AF constr
R32505:32519 X86Semantics X86_Decode get_segment_op2 def
R32525:32526 X86Syntax <> DS constr
R32473:32478 X86Semantics X86_Decode set_op def
R32440:32446 X86Semantics X86_Decode load_op def
def 34100:34107 X86_Decode conv_DIV
R34115:34120 X86Syntax <> prefix rec
R34127:34130 Coq.Init.Datatypes <> bool ind
R34138:34144 X86Syntax <> operand ind
R34212:34220 Monad <> :monad_scope:x_';;'_x not
R34199:34208 X86Semantics X86_Decode undef_flag def
R34210:34211 X86Semantics X86_MACHINE CF constr
R34234:34242 Monad <> :monad_scope:x_';;'_x not
R34221:34230 X86Semantics X86_Decode undef_flag def
R34232:34233 X86Semantics X86_MACHINE OF constr
R34256:34264 Monad <> :monad_scope:x_';;'_x not
R34243:34252 X86Semantics X86_Decode undef_flag def
R34254:34255 X86Semantics X86_MACHINE SF constr
R34278:34286 Monad <> :monad_scope:x_';;'_x not
R34265:34274 X86Semantics X86_Decode undef_flag def
R34276:34277 X86Semantics X86_MACHINE ZF constr
R34300:34308 Monad <> :monad_scope:x_';;'_x not
R34287:34296 X86Semantics X86_Decode undef_flag def
R34298:34299 X86Semantics X86_MACHINE AF constr
R34322:34330 Monad <> :monad_scope:x_';;'_x not
R34309:34318 X86Semantics X86_Decode undef_flag def
R34320:34321 X86Semantics X86_MACHINE PF constr
R34337:34347 X86Syntax <> op_override proj
R34374:34378 Coq.Init.Datatypes <> false constr
R34391:34394 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34422:34445 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34395:34404 X86Semantics X86_Decode iload_op16 def
R34411:34416 X86Syntax <> Reg_op constr
R34418:34420 X86Syntax <> EAX constr
R34453:34456 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34473:34496 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34457:34465 X86Semantics X86_Decode iload_op8 def
R34501:34504 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34515:34538 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34505:34510 X86Semantics X86_Decode load_Z def
R34553:34556 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34580:34603 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34557:34560 X86Semantics X86_Decode test def
R34562:34566 X86Semantics X86_RTL eq_op constr
R34644:34668 Monad <> :monad_scope:x_';;'_x not
R34604:34608 X86Semantics X86_Decode :monad_scope:'emit'_x not
R34609:34614 X86Semantics X86_RTL if_rtl constr
R34631:34643 X86Semantics X86_RTL safe_fail_rtl constr
R34680:34683 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34700:34723 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34684:34689 X86Semantics X86_Decode cast_u def
R34732:34735 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34770:34793 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34736:34740 X86Semantics X86_Decode arith def
R34742:34748 X86Semantics X86_RTL divu_op constr
R34806:34809 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34822:34845 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34810:34815 X86Semantics X86_Decode load_Z def
R34855:34858 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34892:34915 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34859:34862 X86Semantics X86_Decode test def
R34864:34869 X86Semantics X86_RTL ltu_op constr
R34951:34975 Monad <> :monad_scope:x_';;'_x not
R34916:34920 X86Semantics X86_Decode :monad_scope:'emit'_x not
R34921:34926 X86Semantics X86_RTL if_rtl constr
R34938:34950 X86Semantics X86_RTL safe_fail_rtl constr
R34985:34988 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35023:35046 Monad <> :monad_scope:x_'<-'_x_';'_x not
R34989:34993 X86Semantics X86_Decode arith def
R34995:35001 X86Semantics X86_RTL modu_op constr
R35061:35064 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35082:35105 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35065:35070 X86Semantics X86_Decode cast_u def
R35121:35124 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35143:35166 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35125:35130 X86Semantics X86_Decode cast_u def
R35207:35231 Monad <> :monad_scope:x_';;'_x not
R35167:35174 X86Semantics X86_Decode iset_op8 def
R35196:35201 X86Syntax <> Reg_op constr
R35203:35205 X86Syntax <> EAX constr
R35232:35239 X86Semantics X86_Decode iset_op8 def
R35262:35267 X86Syntax <> Reg_op constr
R35269:35271 X86Syntax <> ESP constr
R35300:35303 Coq.Init.Datatypes <> true constr
R35306:35309 Coq.Init.Datatypes <> true constr
R35328:35331 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35359:35383 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35332:35341 X86Semantics X86_Decode iload_op16 def
R35348:35353 X86Syntax <> Reg_op constr
R35355:35357 X86Syntax <> EAX constr
R35398:35401 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35429:35453 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35402:35411 X86Semantics X86_Decode iload_op16 def
R35418:35423 X86Syntax <> Reg_op constr
R35425:35427 X86Syntax <> EDX constr
R35463:35466 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35495:35519 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35467:35472 X86Semantics X86_Decode cast_u def
R35474:35479 RTL <> size32 def
R35527:35530 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35547:35571 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35531:35536 X86Semantics X86_Decode load_Z def
R35538:35543 RTL <> size32 def
R35581:35584 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35615:35639 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35585:35589 X86Semantics X86_Decode arith def
R35591:35596 X86Semantics X86_RTL shl_op constr
R35658:35661 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35690:35714 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35662:35667 X86Semantics X86_Decode cast_u def
R35669:35674 RTL <> size32 def
R35723:35726 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35767:35791 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35727:35731 X86Semantics X86_Decode arith def
R35733:35737 X86Semantics X86_RTL or_op constr
R35799:35802 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35820:35844 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35803:35812 X86Semantics X86_Decode iload_op16 def
R35849:35852 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35863:35887 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35853:35858 X86Semantics X86_Decode load_Z def
R35902:35905 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35929:35953 Monad <> :monad_scope:x_'<-'_x_';'_x not
R35906:35909 X86Semantics X86_Decode test def
R35911:35915 X86Semantics X86_RTL eq_op constr
R35994:36019 Monad <> :monad_scope:x_';;'_x not
R35954:35958 X86Semantics X86_Decode :monad_scope:'emit'_x not
R35959:35964 X86Semantics X86_RTL if_rtl constr
R35981:35993 X86Semantics X86_RTL safe_fail_rtl constr
R36031:36034 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36051:36075 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36035:36040 X86Semantics X86_Decode cast_u def
R36084:36087 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36122:36146 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36088:36092 X86Semantics X86_Decode arith def
R36094:36100 X86Semantics X86_RTL divu_op constr
R36159:36162 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36177:36201 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36163:36168 X86Semantics X86_Decode load_Z def
R36211:36214 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36248:36272 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36215:36218 X86Semantics X86_Decode test def
R36220:36225 X86Semantics X86_RTL ltu_op constr
R36308:36333 Monad <> :monad_scope:x_';;'_x not
R36273:36277 X86Semantics X86_Decode :monad_scope:'emit'_x not
R36278:36283 X86Semantics X86_RTL if_rtl constr
R36295:36307 X86Semantics X86_RTL safe_fail_rtl constr
R36343:36346 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36381:36405 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36347:36351 X86Semantics X86_Decode arith def
R36353:36359 X86Semantics X86_RTL modu_op constr
R36420:36423 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36441:36465 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36424:36429 X86Semantics X86_Decode cast_u def
R36481:36484 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36503:36527 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36485:36490 X86Semantics X86_Decode cast_u def
R36569:36594 Monad <> :monad_scope:x_';;'_x not
R36528:36536 X86Semantics X86_Decode iset_op16 def
R36558:36563 X86Syntax <> Reg_op constr
R36565:36567 X86Syntax <> EAX constr
R36595:36603 X86Semantics X86_Decode iset_op16 def
R36626:36631 X86Syntax <> Reg_op constr
R36633:36635 X86Syntax <> EDX constr
R36648:36652 Coq.Init.Datatypes <> false constr
R36655:36658 Coq.Init.Datatypes <> true constr
R36677:36680 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36708:36732 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36681:36690 X86Semantics X86_Decode iload_op32 def
R36697:36702 X86Syntax <> Reg_op constr
R36704:36706 X86Syntax <> EAX constr
R36747:36750 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36778:36802 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36751:36760 X86Semantics X86_Decode iload_op32 def
R36767:36772 X86Syntax <> Reg_op constr
R36774:36776 X86Syntax <> EDX constr
R36812:36815 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36840:36864 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36816:36821 X86Semantics X86_Decode cast_u def
R36874:36877 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36890:36914 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36878:36883 X86Semantics X86_Decode load_Z def
R36924:36927 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36960:36984 Monad <> :monad_scope:x_'<-'_x_';'_x not
R36928:36932 X86Semantics X86_Decode arith def
R36934:36939 X86Semantics X86_RTL shl_op constr
R37003:37006 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37030:37054 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37007:37012 X86Semantics X86_Decode cast_u def
R37063:37066 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37107:37131 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37067:37071 X86Semantics X86_Decode arith def
R37073:37077 X86Semantics X86_RTL or_op constr
R37139:37142 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37160:37184 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37143:37152 X86Semantics X86_Decode iload_op32 def
R37189:37192 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37203:37227 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37193:37198 X86Semantics X86_Decode load_Z def
R37242:37245 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37269:37293 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37246:37249 X86Semantics X86_Decode test def
R37251:37255 X86Semantics X86_RTL eq_op constr
R37334:37359 Monad <> :monad_scope:x_';;'_x not
R37294:37298 X86Semantics X86_Decode :monad_scope:'emit'_x not
R37299:37304 X86Semantics X86_RTL if_rtl constr
R37321:37333 X86Semantics X86_RTL safe_fail_rtl constr
R37371:37374 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37391:37415 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37375:37380 X86Semantics X86_Decode cast_u def
R37424:37427 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37462:37486 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37428:37432 X86Semantics X86_Decode arith def
R37434:37440 X86Semantics X86_RTL divu_op constr
R37499:37502 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37522:37546 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37503:37508 X86Semantics X86_Decode load_Z def
R37556:37559 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37593:37617 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37560:37563 X86Semantics X86_Decode test def
R37565:37570 X86Semantics X86_RTL ltu_op constr
R37653:37678 Monad <> :monad_scope:x_';;'_x not
R37618:37622 X86Semantics X86_Decode :monad_scope:'emit'_x not
R37623:37628 X86Semantics X86_RTL if_rtl constr
R37640:37652 X86Semantics X86_RTL safe_fail_rtl constr
R37688:37691 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37726:37750 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37692:37696 X86Semantics X86_Decode arith def
R37698:37704 X86Semantics X86_RTL modu_op constr
R37765:37768 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37786:37810 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37769:37774 X86Semantics X86_Decode cast_u def
R37826:37829 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37848:37872 Monad <> :monad_scope:x_'<-'_x_';'_x not
R37830:37835 X86Semantics X86_Decode cast_u def
R37914:37939 Monad <> :monad_scope:x_';;'_x not
R37873:37881 X86Semantics X86_Decode iset_op32 def
R37903:37908 X86Syntax <> Reg_op constr
R37910:37912 X86Syntax <> EAX constr
R37940:37948 X86Semantics X86_Decode iset_op32 def
R37971:37976 X86Syntax <> Reg_op constr
R37978:37980 X86Syntax <> EDX constr
R34165:34178 X86Semantics X86_Decode get_segment_op def
R34184:34185 X86Syntax <> DS constr
def 38008:38016 X86_Decode conv_IDIV
R38024:38029 X86Syntax <> prefix rec
R38036:38039 Coq.Init.Datatypes <> bool ind
R38047:38053 X86Syntax <> operand ind
R38121:38129 Monad <> :monad_scope:x_';;'_x not
R38108:38117 X86Semantics X86_Decode undef_flag def
R38119:38120 X86Semantics X86_MACHINE CF constr
R38143:38151 Monad <> :monad_scope:x_';;'_x not
R38130:38139 X86Semantics X86_Decode undef_flag def
R38141:38142 X86Semantics X86_MACHINE OF constr
R38165:38173 Monad <> :monad_scope:x_';;'_x not
R38152:38161 X86Semantics X86_Decode undef_flag def
R38163:38164 X86Semantics X86_MACHINE SF constr
R38187:38195 Monad <> :monad_scope:x_';;'_x not
R38174:38183 X86Semantics X86_Decode undef_flag def
R38185:38186 X86Semantics X86_MACHINE ZF constr
R38209:38217 Monad <> :monad_scope:x_';;'_x not
R38196:38205 X86Semantics X86_Decode undef_flag def
R38207:38208 X86Semantics X86_MACHINE AF constr
R38231:38239 Monad <> :monad_scope:x_';;'_x not
R38218:38227 X86Semantics X86_Decode undef_flag def
R38229:38230 X86Semantics X86_MACHINE PF constr
R38246:38256 X86Syntax <> op_override proj
R38283:38287 Coq.Init.Datatypes <> false constr
R38300:38303 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38331:38354 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38304:38313 X86Semantics X86_Decode iload_op16 def
R38320:38325 X86Syntax <> Reg_op constr
R38327:38329 X86Syntax <> EAX constr
R38362:38365 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38382:38405 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38366:38374 X86Semantics X86_Decode iload_op8 def
R38410:38413 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38424:38447 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38414:38419 X86Semantics X86_Decode load_Z def
R38462:38465 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38489:38512 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38466:38469 X86Semantics X86_Decode test def
R38471:38475 X86Semantics X86_RTL eq_op constr
R38553:38577 Monad <> :monad_scope:x_';;'_x not
R38513:38517 X86Semantics X86_Decode :monad_scope:'emit'_x not
R38518:38523 X86Semantics X86_RTL if_rtl constr
R38540:38552 X86Semantics X86_RTL safe_fail_rtl constr
R38589:38592 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38609:38632 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38593:38598 X86Semantics X86_Decode cast_s def
R38641:38644 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38679:38702 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38645:38649 X86Semantics X86_Decode arith def
R38651:38657 X86Semantics X86_RTL divs_op constr
R38715:38718 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38731:38754 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38719:38724 X86Semantics X86_Decode load_Z def
R38767:38770 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38786:38809 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38771:38776 X86Semantics X86_Decode load_Z def
R38820:38823 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38856:38879 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38824:38827 X86Semantics X86_Decode test def
R38829:38833 X86Semantics X86_RTL lt_op constr
R38890:38893 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38926:38949 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38894:38897 X86Semantics X86_Decode test def
R38899:38903 X86Semantics X86_RTL lt_op constr
R38959:38962 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38996:39019 Monad <> :monad_scope:x_'<-'_x_';'_x not
R38963:38967 X86Semantics X86_Decode arith def
R38969:38973 X86Semantics X86_RTL or_op constr
R39055:39079 Monad <> :monad_scope:x_';;'_x not
R39020:39024 X86Semantics X86_Decode :monad_scope:'emit'_x not
R39025:39030 X86Semantics X86_RTL if_rtl constr
R39042:39054 X86Semantics X86_RTL safe_fail_rtl constr
R39089:39092 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39127:39150 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39093:39097 X86Semantics X86_Decode arith def
R39099:39105 X86Semantics X86_RTL mods_op constr
R39165:39168 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39186:39209 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39169:39174 X86Semantics X86_Decode cast_s def
R39225:39228 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39247:39270 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39229:39234 X86Semantics X86_Decode cast_s def
R39311:39335 Monad <> :monad_scope:x_';;'_x not
R39271:39278 X86Semantics X86_Decode iset_op8 def
R39300:39305 X86Syntax <> Reg_op constr
R39307:39309 X86Syntax <> EAX constr
R39336:39343 X86Semantics X86_Decode iset_op8 def
R39366:39371 X86Syntax <> Reg_op constr
R39373:39375 X86Syntax <> ESP constr
R39404:39407 Coq.Init.Datatypes <> true constr
R39410:39413 Coq.Init.Datatypes <> true constr
R39432:39435 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39463:39487 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39436:39445 X86Semantics X86_Decode iload_op16 def
R39452:39457 X86Syntax <> Reg_op constr
R39459:39461 X86Syntax <> EAX constr
R39502:39505 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39533:39557 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39506:39515 X86Semantics X86_Decode iload_op16 def
R39522:39527 X86Syntax <> Reg_op constr
R39529:39531 X86Syntax <> EDX constr
R39567:39570 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39599:39623 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39571:39576 X86Semantics X86_Decode cast_s def
R39578:39583 RTL <> size32 def
R39631:39634 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39651:39675 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39635:39640 X86Semantics X86_Decode load_Z def
R39642:39647 RTL <> size32 def
R39685:39688 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39719:39743 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39689:39693 X86Semantics X86_Decode arith def
R39695:39700 X86Semantics X86_RTL shl_op constr
R39762:39765 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39794:39818 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39766:39771 X86Semantics X86_Decode cast_s def
R39773:39778 RTL <> size32 def
R39827:39830 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39871:39895 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39831:39835 X86Semantics X86_Decode arith def
R39837:39841 X86Semantics X86_RTL or_op constr
R39903:39906 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39924:39948 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39907:39916 X86Semantics X86_Decode iload_op16 def
R39953:39956 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39967:39991 Monad <> :monad_scope:x_'<-'_x_';'_x not
R39957:39962 X86Semantics X86_Decode load_Z def
R40006:40009 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40033:40057 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40010:40013 X86Semantics X86_Decode test def
R40015:40019 X86Semantics X86_RTL eq_op constr
R40098:40123 Monad <> :monad_scope:x_';;'_x not
R40058:40062 X86Semantics X86_Decode :monad_scope:'emit'_x not
R40063:40068 X86Semantics X86_RTL if_rtl constr
R40085:40097 X86Semantics X86_RTL safe_fail_rtl constr
R40135:40138 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40155:40179 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40139:40144 X86Semantics X86_Decode cast_s def
R40188:40191 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40226:40250 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40192:40196 X86Semantics X86_Decode arith def
R40198:40204 X86Semantics X86_RTL divs_op constr
R40263:40266 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40281:40305 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40267:40272 X86Semantics X86_Decode load_Z def
R40318:40321 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40339:40363 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40322:40327 X86Semantics X86_Decode load_Z def
R40374:40377 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40410:40434 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40378:40381 X86Semantics X86_Decode test def
R40383:40387 X86Semantics X86_RTL lt_op constr
R40445:40448 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40481:40505 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40449:40452 X86Semantics X86_Decode test def
R40454:40458 X86Semantics X86_RTL lt_op constr
R40515:40518 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40552:40576 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40519:40523 X86Semantics X86_Decode arith def
R40525:40529 X86Semantics X86_RTL or_op constr
R40612:40637 Monad <> :monad_scope:x_';;'_x not
R40577:40581 X86Semantics X86_Decode :monad_scope:'emit'_x not
R40582:40587 X86Semantics X86_RTL if_rtl constr
R40599:40611 X86Semantics X86_RTL safe_fail_rtl constr
R40647:40650 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40685:40709 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40651:40655 X86Semantics X86_Decode arith def
R40657:40663 X86Semantics X86_RTL mods_op constr
R40724:40727 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40745:40769 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40728:40733 X86Semantics X86_Decode cast_s def
R40785:40788 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40807:40831 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40789:40794 X86Semantics X86_Decode cast_s def
R40873:40898 Monad <> :monad_scope:x_';;'_x not
R40832:40840 X86Semantics X86_Decode iset_op16 def
R40862:40867 X86Syntax <> Reg_op constr
R40869:40871 X86Syntax <> EAX constr
R40899:40907 X86Semantics X86_Decode iset_op16 def
R40930:40935 X86Syntax <> Reg_op constr
R40937:40939 X86Syntax <> EDX constr
R40952:40956 Coq.Init.Datatypes <> false constr
R40959:40962 Coq.Init.Datatypes <> true constr
R40981:40984 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41012:41036 Monad <> :monad_scope:x_'<-'_x_';'_x not
R40985:40994 X86Semantics X86_Decode iload_op32 def
R41001:41006 X86Syntax <> Reg_op constr
R41008:41010 X86Syntax <> EAX constr
R41051:41054 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41082:41106 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41055:41064 X86Semantics X86_Decode iload_op32 def
R41071:41076 X86Syntax <> Reg_op constr
R41078:41080 X86Syntax <> EDX constr
R41116:41119 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41144:41168 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41120:41125 X86Semantics X86_Decode cast_s def
R41178:41181 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41194:41218 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41182:41187 X86Semantics X86_Decode load_Z def
R41228:41231 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41264:41288 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41232:41236 X86Semantics X86_Decode arith def
R41238:41243 X86Semantics X86_RTL shl_op constr
R41307:41310 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41334:41358 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41311:41316 X86Semantics X86_Decode cast_s def
R41367:41370 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41411:41435 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41371:41375 X86Semantics X86_Decode arith def
R41377:41381 X86Semantics X86_RTL or_op constr
R41443:41446 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41464:41488 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41447:41456 X86Semantics X86_Decode iload_op32 def
R41493:41496 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41507:41531 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41497:41502 X86Semantics X86_Decode load_Z def
R41546:41549 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41573:41597 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41550:41553 X86Semantics X86_Decode test def
R41555:41559 X86Semantics X86_RTL eq_op constr
R41638:41663 Monad <> :monad_scope:x_';;'_x not
R41598:41602 X86Semantics X86_Decode :monad_scope:'emit'_x not
R41603:41608 X86Semantics X86_RTL if_rtl constr
R41625:41637 X86Semantics X86_RTL safe_fail_rtl constr
R41675:41678 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41695:41719 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41679:41684 X86Semantics X86_Decode cast_s def
R41728:41731 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41766:41790 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41732:41736 X86Semantics X86_Decode arith def
R41738:41744 X86Semantics X86_RTL divs_op constr
R41803:41806 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41826:41850 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41807:41812 X86Semantics X86_Decode load_Z def
R41863:41866 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41889:41913 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41867:41872 X86Semantics X86_Decode load_Z def
R41924:41927 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41960:41984 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41928:41931 X86Semantics X86_Decode test def
R41933:41937 X86Semantics X86_RTL lt_op constr
R41995:41998 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42031:42055 Monad <> :monad_scope:x_'<-'_x_';'_x not
R41999:42002 X86Semantics X86_Decode test def
R42004:42008 X86Semantics X86_RTL lt_op constr
R42065:42068 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42102:42126 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42069:42073 X86Semantics X86_Decode arith def
R42075:42079 X86Semantics X86_RTL or_op constr
R42162:42187 Monad <> :monad_scope:x_';;'_x not
R42127:42131 X86Semantics X86_Decode :monad_scope:'emit'_x not
R42132:42137 X86Semantics X86_RTL if_rtl constr
R42149:42161 X86Semantics X86_RTL safe_fail_rtl constr
R42197:42200 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42235:42259 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42201:42205 X86Semantics X86_Decode arith def
R42207:42213 X86Semantics X86_RTL mods_op constr
R42274:42277 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42295:42319 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42278:42283 X86Semantics X86_Decode cast_s def
R42335:42338 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42357:42381 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42339:42344 X86Semantics X86_Decode cast_s def
R42423:42448 Monad <> :monad_scope:x_';;'_x not
R42382:42390 X86Semantics X86_Decode iset_op32 def
R42412:42417 X86Syntax <> Reg_op constr
R42419:42421 X86Syntax <> EAX constr
R42449:42457 X86Semantics X86_Decode iset_op32 def
R42480:42485 X86Syntax <> Reg_op constr
R42487:42489 X86Syntax <> EDX constr
R38074:38087 X86Semantics X86_Decode get_segment_op def
R38093:38094 X86Syntax <> DS constr
def 42525:42533 X86_Decode conv_IMUL
R42645:42651 Monad <> :monad_scope:x_';;'_x not
R42632:42641 X86Semantics X86_Decode undef_flag def
R42643:42644 X86Semantics X86_MACHINE SF constr
R42665:42671 Monad <> :monad_scope:x_';;'_x not
R42652:42661 X86Semantics X86_Decode undef_flag def
R42663:42664 X86Semantics X86_MACHINE ZF constr
R42685:42691 Monad <> :monad_scope:x_';;'_x not
R42672:42681 X86Semantics X86_Decode undef_flag def
R42683:42684 X86Semantics X86_MACHINE AF constr
R42705:42712 Monad <> :monad_scope:x_';;'_x not
R45858:45858 Monad <> :monad_scope:x_';;'_x not
R42692:42701 X86Semantics X86_Decode undef_flag def
R42703:42704 X86Semantics X86_MACHINE PF constr
R42733:42736 Coq.Init.Datatypes <> None constr
R42845:42848 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42870:42888 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42859:42864 X86Syntax <> Reg_op constr
R42866:42868 X86Syntax <> EAX constr
R42891:42894 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42907:42925 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42931:42934 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42983:43001 Monad <> :monad_scope:x_'<-'_x_';'_x not
R42935:42940 X86Semantics X86_Decode cast_s def
R42977:42977 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R42944:42945 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42976:42976 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R42946:42946 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42973:42974 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R42947:42952 X86Semantics X86_Decode opsize def
R42955:42965 X86Syntax <> op_override proj
R43007:43010 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43059:43077 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43011:43016 X86Semantics X86_Decode cast_s def
R43053:43053 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R43020:43021 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R43052:43052 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R43022:43022 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43049:43050 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43023:43028 X86Semantics X86_Decode opsize def
R43031:43041 X86Syntax <> op_override proj
R43081:43084 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43109:43127 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43085:43089 X86Semantics X86_Decode arith def
R43091:43096 X86Semantics X86_RTL mul_op constr
R43137:43140 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43180:43198 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43141:43146 X86Semantics X86_Decode cast_s def
R43149:43154 X86Semantics X86_Decode opsize def
R43157:43167 X86Syntax <> op_override proj
R43204:43207 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43260:43278 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43208:43213 X86Semantics X86_Decode load_Z def
R43218:43225 Coq.ZArith.BinInt <> Z_of_nat def
R43254:43256 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43228:43233 X86Semantics X86_Decode opsize def
R43236:43246 X86Syntax <> op_override proj
R43290:43293 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43316:43334 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43294:43298 X86Semantics X86_Decode arith def
R43300:43305 X86Semantics X86_RTL shr_op constr
R43344:43347 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43395:43413 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43348:43353 X86Semantics X86_Decode cast_s def
R43356:43361 X86Semantics X86_Decode opsize def
R43364:43374 X86Syntax <> op_override proj
R43418:43421 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43433:43451 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43422:43427 X86Semantics X86_Decode load_Z def
R43455:43458 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43516:43534 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43459:43464 X86Semantics X86_Decode load_Z def
R43469:43485 Bits Word max_unsigned def
R43488:43493 X86Semantics X86_Decode opsize def
R43496:43506 X86Syntax <> op_override proj
R43537:43540 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43566:43584 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43541:43544 X86Semantics X86_Decode test def
R43546:43550 X86Semantics X86_RTL eq_op constr
R43587:43590 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43615:43633 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43591:43594 X86Semantics X86_Decode test def
R43596:43600 X86Semantics X86_RTL eq_op constr
R43636:43639 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43657:43675 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43640:43644 X86Semantics X86_Decode arith def
R43646:43650 X86Semantics X86_RTL or_op constr
R43680:43683 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43690:43708 Monad <> :monad_scope:x_'<-'_x_';'_x not
R43684:43686 X86Semantics X86_Decode not def
R43725:43744 Monad <> :monad_scope:x_';;'_x not
R43709:43716 X86Semantics X86_Decode set_flag def
R43718:43719 X86Semantics X86_MACHINE CF constr
R43761:43780 Monad <> :monad_scope:x_';;'_x not
R43745:43752 X86Semantics X86_Decode set_flag def
R43754:43755 X86Semantics X86_MACHINE OF constr
R43788:43798 X86Syntax <> op_override proj
R43837:43841 Coq.Init.Datatypes <> false constr
R43846:43854 X86Semantics X86_Decode iset_op16 def
R43865:43870 X86Syntax <> Reg_op constr
R43872:43874 X86Syntax <> EAX constr
R43902:43905 Coq.Init.Datatypes <> true constr
R44004:44042 Monad <> :monad_scope:x_';;'_x not
R43993:43998 X86Syntax <> Reg_op constr
R44000:44002 X86Syntax <> EAX constr
R44062:44067 X86Syntax <> Reg_op constr
R44069:44071 X86Syntax <> EDX constr
R43922:43927 X86Semantics X86_Decode set_op def
R42797:42810 X86Semantics X86_Decode get_segment_op def
R42816:42817 X86Syntax <> DS constr
R42753:42759 X86Semantics X86_Decode load_op def
R44103:44106 Coq.Init.Datatypes <> Some constr
R44152:44155 Coq.Init.Datatypes <> None constr
R44325:44328 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44341:44364 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44367:44370 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44383:44406 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44412:44415 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44464:44487 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44416:44421 X86Semantics X86_Decode cast_s def
R44458:44458 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44425:44426 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44457:44457 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44427:44427 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44454:44455 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44428:44433 X86Semantics X86_Decode opsize def
R44436:44446 X86Syntax <> op_override proj
R44493:44496 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44545:44568 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44497:44502 X86Semantics X86_Decode cast_s def
R44539:44539 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44506:44507 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44538:44538 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44508:44508 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44535:44536 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44509:44514 X86Semantics X86_Decode opsize def
R44517:44527 X86Syntax <> op_override proj
R44572:44575 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44600:44623 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44576:44580 X86Semantics X86_Decode arith def
R44582:44587 X86Semantics X86_RTL mul_op constr
R44633:44636 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44676:44699 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44637:44642 X86Semantics X86_Decode cast_s def
R44645:44650 X86Semantics X86_Decode opsize def
R44653:44663 X86Syntax <> op_override proj
R44708:44711 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44767:44790 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44712:44717 X86Semantics X86_Decode cast_s def
R44754:44754 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R44721:44722 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44753:44753 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R44723:44723 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44750:44751 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R44724:44729 X86Semantics X86_Decode opsize def
R44732:44742 X86Syntax <> op_override proj
R44793:44796 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44820:44843 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44797:44800 X86Semantics X86_Decode test def
R44802:44806 X86Semantics X86_RTL eq_op constr
R44848:44851 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44858:44881 Monad <> :monad_scope:x_'<-'_x_';'_x not
R44852:44854 X86Semantics X86_Decode not def
R44898:44922 Monad <> :monad_scope:x_';;'_x not
R44882:44889 X86Semantics X86_Decode set_flag def
R44891:44892 X86Semantics X86_MACHINE CF constr
R44939:44963 Monad <> :monad_scope:x_';;'_x not
R44923:44930 X86Semantics X86_Decode set_flag def
R44932:44933 X86Semantics X86_MACHINE OF constr
R44267:44281 X86Semantics X86_Decode get_segment_op2 def
R44287:44288 X86Syntax <> DS constr
R44220:44225 X86Semantics X86_Decode set_op def
R44172:44178 X86Semantics X86_Decode load_op def
R44997:45000 Coq.Init.Datatypes <> Some constr
R45177:45180 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45193:45216 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45219:45222 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45236:45259 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45223:45230 X86Semantics X86_Decode load_int def
R45265:45268 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45317:45340 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45269:45274 X86Semantics X86_Decode cast_s def
R45311:45311 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R45278:45279 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45310:45310 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45280:45280 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45307:45308 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45281:45286 X86Semantics X86_Decode opsize def
R45289:45299 X86Syntax <> op_override proj
R45346:45349 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45398:45421 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45350:45355 X86Semantics X86_Decode cast_s def
R45392:45392 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R45359:45360 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45391:45391 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45361:45361 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45388:45389 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45362:45367 X86Semantics X86_Decode opsize def
R45370:45380 X86Syntax <> op_override proj
R45425:45428 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45453:45476 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45429:45433 X86Semantics X86_Decode arith def
R45435:45440 X86Semantics X86_RTL mul_op constr
R45486:45489 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45529:45552 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45490:45495 X86Semantics X86_Decode cast_s def
R45498:45503 X86Semantics X86_Decode opsize def
R45506:45516 X86Syntax <> op_override proj
R45561:45564 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45620:45643 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45565:45570 X86Semantics X86_Decode cast_s def
R45607:45607 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R45574:45575 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45606:45606 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45576:45576 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45603:45604 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45577:45582 X86Semantics X86_Decode opsize def
R45585:45595 X86Syntax <> op_override proj
R45646:45649 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45673:45696 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45650:45653 X86Semantics X86_Decode test def
R45655:45659 X86Semantics X86_RTL eq_op constr
R45701:45704 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45711:45734 Monad <> :monad_scope:x_'<-'_x_';'_x not
R45705:45707 X86Semantics X86_Decode not def
R45751:45775 Monad <> :monad_scope:x_';;'_x not
R45735:45742 X86Semantics X86_Decode set_flag def
R45744:45745 X86Semantics X86_MACHINE CF constr
R45792:45816 Monad <> :monad_scope:x_';;'_x not
R45776:45783 X86Semantics X86_Decode set_flag def
R45785:45786 X86Semantics X86_MACHINE OF constr
R45119:45133 X86Semantics X86_Decode get_segment_op2 def
R45139:45140 X86Syntax <> DS constr
R45072:45077 X86Semantics X86_Decode set_op def
R45024:45030 X86Semantics X86_Decode load_op def
R42611:42616 Coq.Init.Datatypes <> option ind
R42618:42622 Bits <> int32 def
R42588:42593 Coq.Init.Datatypes <> option ind
R42595:42601 X86Syntax <> operand ind
R42565:42571 X86Syntax <> operand ind
R42553:42556 Coq.Init.Datatypes <> bool ind
R42541:42546 X86Syntax <> prefix rec
R45911:45921 X86Syntax <> op_override proj
R45911:45921 X86Syntax <> op_override proj
def 45967:45974 X86_Decode conv_MUL
R45982:45987 X86Syntax <> prefix rec
R45994:45997 Coq.Init.Datatypes <> bool ind
R46005:46011 X86Syntax <> operand ind
R46077:46083 Monad <> :monad_scope:x_';;'_x not
R46064:46073 X86Semantics X86_Decode undef_flag def
R46075:46076 X86Semantics X86_MACHINE SF constr
R46097:46103 Monad <> :monad_scope:x_';;'_x not
R46084:46093 X86Semantics X86_Decode undef_flag def
R46095:46096 X86Semantics X86_MACHINE ZF constr
R46117:46123 Monad <> :monad_scope:x_';;'_x not
R46104:46113 X86Semantics X86_Decode undef_flag def
R46115:46116 X86Semantics X86_MACHINE AF constr
R46137:46143 Monad <> :monad_scope:x_';;'_x not
R46124:46133 X86Semantics X86_Decode undef_flag def
R46135:46136 X86Semantics X86_MACHINE PF constr
R46150:46160 X86Syntax <> op_override proj
R46185:46189 Coq.Init.Datatypes <> false constr
R46196:46199 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46216:46237 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46200:46208 X86Semantics X86_Decode iload_op8 def
R46240:46243 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46270:46291 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46244:46252 X86Semantics X86_Decode iload_op8 def
R46259:46264 X86Syntax <> Reg_op constr
R46266:46268 X86Syntax <> EAX constr
R46297:46300 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46317:46338 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46301:46306 X86Semantics X86_Decode cast_u def
R46308:46313 RTL <> size16 def
R46344:46347 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46364:46385 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46348:46353 X86Semantics X86_Decode cast_u def
R46355:46360 RTL <> size16 def
R46389:46392 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46417:46438 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46393:46397 X86Semantics X86_Decode arith def
R46399:46404 X86Semantics X86_RTL mul_op constr
R46469:46491 Monad <> :monad_scope:x_';;'_x not
R46439:46447 X86Semantics X86_Decode iset_op16 def
R46458:46463 X86Syntax <> Reg_op constr
R46465:46467 X86Syntax <> EAX constr
R46495:46498 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46511:46532 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46499:46504 X86Semantics X86_Decode load_Z def
R46540:46543 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46563:46584 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46544:46547 X86Semantics X86_Decode test def
R46549:46554 X86Semantics X86_RTL ltu_op constr
R46604:46626 Monad <> :monad_scope:x_';;'_x not
R46585:46592 X86Semantics X86_Decode set_flag def
R46594:46595 X86Semantics X86_MACHINE CF constr
R46627:46634 X86Semantics X86_Decode set_flag def
R46636:46637 X86Semantics X86_MACHINE OF constr
R46655:46658 Coq.Init.Datatypes <> true constr
R46661:46664 Coq.Init.Datatypes <> true constr
R46671:46674 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46692:46713 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46675:46684 X86Semantics X86_Decode iload_op16 def
R46716:46719 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46747:46768 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46720:46729 X86Semantics X86_Decode iload_op16 def
R46736:46741 X86Syntax <> Reg_op constr
R46743:46745 X86Syntax <> EAX constr
R46774:46777 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46794:46815 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46778:46783 X86Semantics X86_Decode cast_u def
R46785:46790 RTL <> size32 def
R46821:46824 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46841:46862 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46825:46830 X86Semantics X86_Decode cast_u def
R46832:46837 RTL <> size32 def
R46866:46869 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46894:46915 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46870:46874 X86Semantics X86_Decode arith def
R46876:46881 X86Semantics X86_RTL mul_op constr
R46925:46928 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46946:46967 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46929:46934 X86Semantics X86_Decode cast_u def
R46936:46941 RTL <> size16 def
R46975:46978 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46995:47016 Monad <> :monad_scope:x_'<-'_x_';'_x not
R46979:46984 X86Semantics X86_Decode load_Z def
R46986:46991 RTL <> size32 def
R47028:47031 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47057:47078 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47032:47036 X86Semantics X86_Decode arith def
R47038:47044 X86Semantics X86_RTL shru_op constr
R47088:47091 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47117:47138 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47092:47097 X86Semantics X86_Decode cast_u def
R47099:47104 RTL <> size16 def
R47175:47197 Monad <> :monad_scope:x_';;'_x not
R47139:47147 X86Semantics X86_Decode iset_op16 def
R47164:47169 X86Syntax <> Reg_op constr
R47171:47173 X86Syntax <> EAX constr
R47234:47256 Monad <> :monad_scope:x_';;'_x not
R47198:47206 X86Semantics X86_Decode iset_op16 def
R47223:47228 X86Syntax <> Reg_op constr
R47230:47232 X86Syntax <> EDX constr
R47261:47264 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47280:47301 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47265:47270 X86Semantics X86_Decode load_Z def
R47272:47277 RTL <> size16 def
R47309:47312 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47339:47360 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47313:47316 X86Semantics X86_Decode test def
R47318:47323 X86Semantics X86_RTL ltu_op constr
R47380:47402 Monad <> :monad_scope:x_';;'_x not
R47361:47368 X86Semantics X86_Decode set_flag def
R47370:47371 X86Semantics X86_MACHINE CF constr
R47403:47410 X86Semantics X86_Decode set_flag def
R47412:47413 X86Semantics X86_MACHINE OF constr
R47431:47435 Coq.Init.Datatypes <> false constr
R47438:47441 Coq.Init.Datatypes <> true constr
R47448:47451 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47469:47490 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47452:47461 X86Semantics X86_Decode iload_op32 def
R47493:47496 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47524:47545 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47497:47506 X86Semantics X86_Decode iload_op32 def
R47513:47518 X86Syntax <> Reg_op constr
R47520:47522 X86Syntax <> EAX constr
R47551:47554 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47567:47588 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47555:47560 X86Semantics X86_Decode cast_u def
R47594:47597 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47610:47631 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47598:47603 X86Semantics X86_Decode cast_u def
R47635:47638 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47663:47684 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47639:47643 X86Semantics X86_Decode arith def
R47645:47650 X86Semantics X86_RTL mul_op constr
R47694:47697 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47715:47736 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47698:47703 X86Semantics X86_Decode cast_u def
R47705:47710 RTL <> size32 def
R47746:47749 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47762:47783 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47750:47755 X86Semantics X86_Decode load_Z def
R47795:47798 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47826:47847 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47799:47803 X86Semantics X86_Decode arith def
R47805:47811 X86Semantics X86_RTL shru_op constr
R47857:47860 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47886:47907 Monad <> :monad_scope:x_'<-'_x_';'_x not
R47861:47866 X86Semantics X86_Decode cast_u def
R47868:47873 RTL <> size32 def
R47944:47966 Monad <> :monad_scope:x_';;'_x not
R47908:47916 X86Semantics X86_Decode iset_op32 def
R47933:47938 X86Syntax <> Reg_op constr
R47940:47942 X86Syntax <> EAX constr
R48003:48025 Monad <> :monad_scope:x_';;'_x not
R47967:47975 X86Semantics X86_Decode iset_op32 def
R47992:47997 X86Syntax <> Reg_op constr
R47999:48001 X86Syntax <> EDX constr
R48030:48033 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48049:48070 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48034:48039 X86Semantics X86_Decode load_Z def
R48041:48046 RTL <> size32 def
R48078:48081 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48108:48129 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48082:48085 X86Semantics X86_Decode test def
R48087:48092 X86Semantics X86_RTL ltu_op constr
R48149:48171 Monad <> :monad_scope:x_';;'_x not
R48130:48137 X86Semantics X86_Decode set_flag def
R48139:48140 X86Semantics X86_MACHINE CF constr
R48172:48179 X86Semantics X86_Decode set_flag def
R48181:48182 X86Semantics X86_MACHINE OF constr
R46032:46045 X86Semantics X86_Decode get_segment_op def
R46051:46052 X86Syntax <> DS constr
def 48214:48223 X86_Decode conv_shift
R48237:48242 X86Syntax <> prefix rec
R48249:48252 Coq.Init.Datatypes <> bool ind
R48261:48267 X86Syntax <> operand ind
R48276:48287 X86Syntax <> reg_or_immed ind
R48532:48540 Monad <> :monad_scope:x_';;'_x not
R48519:48528 X86Semantics X86_Decode undef_flag def
R48530:48531 X86Semantics X86_MACHINE OF constr
R48554:48562 Monad <> :monad_scope:x_';;'_x not
R48541:48550 X86Semantics X86_Decode undef_flag def
R48552:48553 X86Semantics X86_MACHINE CF constr
R48576:48584 Monad <> :monad_scope:x_';;'_x not
R48563:48572 X86Semantics X86_Decode undef_flag def
R48574:48575 X86Semantics X86_MACHINE SF constr
R48598:48606 Monad <> :monad_scope:x_';;'_x not
R48585:48594 X86Semantics X86_Decode undef_flag def
R48596:48597 X86Semantics X86_MACHINE ZF constr
R48620:48628 Monad <> :monad_scope:x_';;'_x not
R48607:48616 X86Semantics X86_Decode undef_flag def
R48618:48619 X86Semantics X86_MACHINE PF constr
R48642:48650 Monad <> :monad_scope:x_';;'_x not
R48629:48638 X86Semantics X86_Decode undef_flag def
R48640:48641 X86Semantics X86_MACHINE AF constr
R48653:48656 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48669:48676 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48679:48683 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48808:48816 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48715:48720 X86Syntax <> Reg_ri constr
R48727:48735 X86Semantics X86_Decode iload_op8 def
R48742:48747 X86Syntax <> Reg_op constr
R48769:48774 X86Syntax <> Imm_ri constr
R48781:48788 X86Semantics X86_Decode load_int def
R48821:48824 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48836:48843 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48825:48830 X86Semantics X86_Decode load_Z def
R48846:48849 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48870:48877 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48850:48854 X86Semantics X86_Decode arith def
R48856:48861 X86Semantics X86_RTL and_op constr
R48884:48887 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48926:48933 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48888:48893 X86Semantics X86_Decode cast_u def
R48896:48901 X86Semantics X86_Decode opsize def
R48904:48914 X86Syntax <> op_override proj
R48936:48939 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48961:48968 Monad <> :monad_scope:x_'<-'_x_';'_x not
R48940:48944 X86Semantics X86_Decode arith def
R48374:48387 X86Semantics X86_Decode get_segment_op def
R48393:48394 X86Syntax <> DS constr
R48342:48347 X86Semantics X86_Decode set_op def
R48309:48315 X86Semantics X86_Decode load_op def
def 49014:49021 X86_Decode conv_SHL
R49040:49049 X86Semantics X86_Decode conv_shift def
R49051:49056 X86Semantics X86_RTL shl_op constr
def 49086:49093 X86_Decode conv_SAR
R49112:49121 X86Semantics X86_Decode conv_shift def
R49123:49128 X86Semantics X86_RTL shr_op constr
def 49158:49165 X86_Decode conv_SHR
R49184:49193 X86Semantics X86_Decode conv_shift def
R49195:49201 X86Semantics X86_RTL shru_op constr
def 49232:49239 X86_Decode conv_ROR
R49258:49267 X86Semantics X86_Decode conv_shift def
R49269:49274 X86Semantics X86_RTL ror_op constr
def 49305:49312 X86_Decode conv_ROL
R49331:49340 X86Semantics X86_Decode conv_shift def
R49342:49347 X86Semantics X86_RTL rol_op constr
def 49422:49429 X86_Decode conv_RCL
R49565:49568 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49581:49586 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49589:49593 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49724:49730 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49625:49630 X86Syntax <> Reg_ri constr
R49637:49645 X86Semantics X86_Decode iload_op8 def
R49652:49657 X86Syntax <> Reg_op constr
R49679:49684 X86Syntax <> Imm_ri constr
R49691:49698 X86Semantics X86_Decode load_int def
R49735:49738 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49754:49759 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49739:49744 X86Semantics X86_Decode load_Z def
R49746:49750 RTL <> size8 def
R49762:49765 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49786:49791 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49766:49770 X86Semantics X86_Decode arith def
R49772:49777 X86Semantics X86_RTL and_op constr
R49792:49792 Monad <> :monad_scope:x_';;'_x not
R50076:50083 Monad <> :monad_scope:x_';;'_x not
R49799:49804 X86Semantics X86_Decode opsize def
R49807:49817 X86Syntax <> op_override proj
R49853:49856 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49867:49883 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49857:49862 X86Semantics X86_Decode load_Z def
R49886:49889 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49914:49930 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49890:49894 X86Semantics X86_Decode arith def
R49896:49902 X86Semantics X86_RTL modu_op constr
R49931:49934 Monad <> :monad_scope:'ret'_x not
R49935:49936 Coq.Init.Datatypes <> tt constr
R49960:49963 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49975:49991 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49964:49969 X86Semantics X86_Decode load_Z def
R49994:49997 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50022:50038 Monad <> :monad_scope:x_'<-'_x_';'_x not
R49998:50002 X86Semantics X86_Decode arith def
R50004:50010 X86Semantics X86_RTL modu_op constr
R50039:50042 Monad <> :monad_scope:'ret'_x not
R50043:50044 Coq.Init.Datatypes <> tt constr
R50061:50064 Monad <> :monad_scope:'ret'_x not
R50065:50066 Coq.Init.Datatypes <> tt constr
R50090:50093 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50138:50148 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50094:50099 X86Semantics X86_Decode cast_u def
R50102:50102 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50129:50132 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50103:50108 X86Semantics X86_Decode opsize def
R50111:50121 X86Syntax <> op_override proj
R50152:50155 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50200:50205 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50156:50161 X86Semantics X86_Decode cast_u def
R50164:50164 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50191:50194 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50165:50170 X86Semantics X86_Decode opsize def
R50173:50183 X86Syntax <> op_override proj
R50208:50211 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50223:50228 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50212:50219 X86Semantics X86_Decode get_flag def
R50221:50222 X86Semantics X86_MACHINE CF constr
R50231:50234 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50279:50284 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50235:50240 X86Semantics X86_Decode cast_u def
R50243:50243 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50270:50273 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50244:50249 X86Semantics X86_Decode opsize def
R50252:50262 X86Syntax <> op_override proj
R50287:50290 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50345:50350 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50291:50296 X86Semantics X86_Decode load_Z def
R50301:50308 Coq.ZArith.BinInt <> Z_of_nat def
R50311:50311 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50338:50341 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50312:50317 X86Semantics X86_Decode opsize def
R50320:50330 X86Syntax <> op_override proj
R50353:50356 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50375:50380 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50357:50361 X86Semantics X86_Decode arith def
R50363:50368 X86Semantics X86_RTL shl_op constr
R50384:50387 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50406:50411 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50388:50392 X86Semantics X86_Decode arith def
R50394:50398 X86Semantics X86_RTL or_op constr
R50415:50418 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50442:50453 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50419:50423 X86Semantics X86_Decode arith def
R50425:50430 X86Semantics X86_RTL rol_op constr
R50456:50459 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50499:50504 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50460:50465 X86Semantics X86_Decode cast_u def
R50468:50473 X86Semantics X86_Decode opsize def
R50476:50486 X86Syntax <> op_override proj
R50507:50510 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50530:50535 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50511:50515 X86Semantics X86_Decode arith def
R50517:50522 X86Semantics X86_RTL shr_op constr
R50538:50541 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50557:50562 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50542:50547 X86Semantics X86_Decode cast_u def
R50549:50553 RTL <> size1 def
R50576:50582 Monad <> :monad_scope:x_';;'_x not
R50563:50572 X86Semantics X86_Decode undef_flag def
R50574:50575 X86Semantics X86_MACHINE OF constr
R50597:50603 Monad <> :monad_scope:x_';;'_x not
R50583:50590 X86Semantics X86_Decode set_flag def
R50592:50593 X86Semantics X86_MACHINE CF constr
R49529:49542 X86Semantics X86_Decode get_segment_op def
R49548:49549 X86Syntax <> DS constr
R49497:49502 X86Semantics X86_Decode set_op def
R49464:49470 X86Semantics X86_Decode load_op def
def 50634:50641 X86_Decode conv_RCR
R50776:50779 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50792:50797 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50800:50804 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50935:50944 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50836:50841 X86Syntax <> Reg_ri constr
R50848:50856 X86Semantics X86_Decode iload_op8 def
R50863:50868 X86Syntax <> Reg_op constr
R50890:50895 X86Syntax <> Imm_ri constr
R50902:50909 X86Semantics X86_Decode load_int def
R50949:50952 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50968:50973 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50953:50958 X86Semantics X86_Decode load_Z def
R50960:50964 RTL <> size8 def
R50976:50979 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51000:51005 Monad <> :monad_scope:x_'<-'_x_';'_x not
R50980:50984 X86Semantics X86_Decode arith def
R50986:50991 X86Semantics X86_RTL and_op constr
R51006:51006 Monad <> :monad_scope:x_';;'_x not
R51290:51296 Monad <> :monad_scope:x_';;'_x not
R51013:51018 X86Semantics X86_Decode opsize def
R51021:51031 X86Syntax <> op_override proj
R51067:51070 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51081:51097 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51071:51076 X86Semantics X86_Decode load_Z def
R51100:51103 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51128:51144 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51104:51108 X86Semantics X86_Decode arith def
R51110:51116 X86Semantics X86_RTL modu_op constr
R51145:51148 Monad <> :monad_scope:'ret'_x not
R51149:51150 Coq.Init.Datatypes <> tt constr
R51174:51177 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51189:51205 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51178:51183 X86Semantics X86_Decode load_Z def
R51208:51211 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51236:51252 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51212:51216 X86Semantics X86_Decode arith def
R51218:51224 X86Semantics X86_RTL modu_op constr
R51253:51256 Monad <> :monad_scope:'ret'_x not
R51257:51258 Coq.Init.Datatypes <> tt constr
R51275:51278 Monad <> :monad_scope:'ret'_x not
R51279:51280 Coq.Init.Datatypes <> tt constr
R51303:51306 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51351:51357 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51307:51312 X86Semantics X86_Decode cast_u def
R51315:51315 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51342:51345 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51316:51321 X86Semantics X86_Decode opsize def
R51324:51334 X86Syntax <> op_override proj
R51366:51369 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51380:51386 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51370:51375 X86Semantics X86_Decode load_Z def
R51390:51393 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51438:51443 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51394:51399 X86Semantics X86_Decode cast_u def
R51402:51402 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51429:51432 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51403:51408 X86Semantics X86_Decode opsize def
R51411:51421 X86Syntax <> op_override proj
R51447:51450 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51476:51481 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51451:51455 X86Semantics X86_Decode arith def
R51457:51462 X86Semantics X86_RTL shl_op constr
R51484:51487 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51499:51504 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51488:51495 X86Semantics X86_Decode get_flag def
R51497:51498 X86Semantics X86_MACHINE CF constr
R51507:51510 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51555:51560 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51511:51516 X86Semantics X86_Decode cast_u def
R51519:51519 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51546:51549 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51520:51525 X86Semantics X86_Decode opsize def
R51528:51538 X86Syntax <> op_override proj
R51564:51567 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51586:51591 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51568:51572 X86Semantics X86_Decode arith def
R51574:51578 X86Semantics X86_RTL or_op constr
R51595:51598 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51622:51632 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51599:51603 X86Semantics X86_Decode arith def
R51605:51610 X86Semantics X86_RTL ror_op constr
R51635:51638 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51655:51660 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51639:51644 X86Semantics X86_Decode cast_u def
R51646:51650 RTL <> size1 def
R51663:51666 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51692:51697 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51667:51671 X86Semantics X86_Decode arith def
R51673:51678 X86Semantics X86_RTL shr_op constr
R51700:51703 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51744:51749 Monad <> :monad_scope:x_'<-'_x_';'_x not
R51704:51709 X86Semantics X86_Decode cast_u def
R51713:51718 X86Semantics X86_Decode opsize def
R51721:51731 X86Syntax <> op_override proj
R51763:51769 Monad <> :monad_scope:x_';;'_x not
R51750:51759 X86Semantics X86_Decode undef_flag def
R51761:51762 X86Semantics X86_MACHINE OF constr
R51784:51790 Monad <> :monad_scope:x_';;'_x not
R51770:51777 X86Semantics X86_Decode set_flag def
R51779:51780 X86Semantics X86_MACHINE CF constr
R50741:50754 X86Semantics X86_Decode get_segment_op def
R50760:50761 X86Syntax <> DS constr
R50709:50714 X86Semantics X86_Decode set_op def
R50676:50682 X86Semantics X86_Decode load_op def
def 51821:51829 X86_Decode conv_SHLD
R51841:51847 X86Syntax <> operand ind
R51854:51861 X86Syntax <> register ind
R51995:51999 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52123:52131 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52030:52035 X86Syntax <> Reg_ri constr
R52042:52050 X86Semantics X86_Decode iload_op8 def
R52057:52062 X86Syntax <> Reg_op constr
R52084:52089 X86Syntax <> Imm_ri constr
R52096:52103 X86Semantics X86_Decode load_int def
R52141:52144 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52156:52163 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52145:52150 X86Semantics X86_Decode load_Z def
R52169:52172 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52202:52326 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52173:52177 X86Semantics X86_Decode arith def
R52179:52185 X86Semantics X86_RTL modu_op constr
R52340:52348 Monad <> :monad_scope:x_';;'_x not
R52327:52336 X86Semantics X86_Decode undef_flag def
R52338:52339 X86Semantics X86_MACHINE CF constr
R52362:52370 Monad <> :monad_scope:x_';;'_x not
R52349:52358 X86Semantics X86_Decode undef_flag def
R52360:52361 X86Semantics X86_MACHINE SF constr
R52384:52392 Monad <> :monad_scope:x_';;'_x not
R52371:52380 X86Semantics X86_Decode undef_flag def
R52382:52383 X86Semantics X86_MACHINE ZF constr
R52406:52414 Monad <> :monad_scope:x_';;'_x not
R52393:52402 X86Semantics X86_Decode undef_flag def
R52404:52405 X86Semantics X86_MACHINE PF constr
R52428:52436 Monad <> :monad_scope:x_';;'_x not
R52415:52424 X86Semantics X86_Decode undef_flag def
R52426:52427 X86Semantics X86_MACHINE AF constr
R52439:52442 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52455:52462 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52465:52468 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52488:52495 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52479:52484 X86Syntax <> Reg_op constr
R52503:52507 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52645:52653 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52515:52525 X86Syntax <> op_override proj
R52559:52562 Coq.Init.Datatypes <> true constr
R52567:52572 X86Semantics X86_Decode load_Z def
R52602:52606 Coq.Init.Datatypes <> false constr
R52611:52616 X86Semantics X86_Decode load_Z def
R52661:52664 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52677:52684 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52665:52670 X86Semantics X86_Decode cast_u def
R52692:52695 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52724:52731 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52696:52700 X86Semantics X86_Decode arith def
R52702:52707 X86Semantics X86_RTL shl_op constr
R52739:52742 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52755:52762 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52743:52748 X86Semantics X86_Decode cast_u def
R52771:52774 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52802:52809 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52775:52779 X86Semantics X86_Decode arith def
R52781:52785 X86Semantics X86_RTL or_op constr
R52820:52823 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52839:52846 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52824:52829 X86Semantics X86_Decode cast_u def
R52854:52857 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52890:52897 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52858:52862 X86Semantics X86_Decode arith def
R52864:52869 X86Semantics X86_RTL shl_op constr
R52905:52908 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52938:52945 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52909:52913 X86Semantics X86_Decode arith def
R52915:52921 X86Semantics X86_RTL shru_op constr
R52953:52956 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52973:52980 Monad <> :monad_scope:x_'<-'_x_';'_x not
R52957:52962 X86Semantics X86_Decode cast_u def
R52989:52993 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53137:53145 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53001:53011 X86Syntax <> op_override proj
R53045:53048 Coq.Init.Datatypes <> true constr
R53053:53058 X86Semantics X86_Decode load_Z def
R53060:53064 RTL <> size8 def
R53091:53095 Coq.Init.Datatypes <> false constr
R53100:53105 X86Semantics X86_Decode load_Z def
R53107:53111 RTL <> size8 def
R53152:53155 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53182:53189 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53156:53159 X86Semantics X86_Decode test def
R53161:53166 X86Semantics X86_RTL ltu_op constr
R53196:53199 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53225:53232 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53200:53203 X86Semantics X86_Decode test def
R53205:53209 X86Semantics X86_RTL eq_op constr
R53238:53241 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53267:53274 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53242:53246 X86Semantics X86_Decode arith def
R53248:53252 X86Semantics X86_RTL or_op constr
R53315:53323 Monad <> :monad_scope:x_';;'_x not
R53275:53280 X86Semantics X86_Decode :monad_scope:'emit'_x not
R53314:53314 X86Semantics X86_Decode :monad_scope:'emit'_x not
R53281:53286 X86Semantics X86_RTL if_rtl constr
R53295:53304 X86Semantics X86_RTL choose_rtl constr
R51955:51968 X86Semantics X86_Decode get_segment_op def
R51974:51975 X86Syntax <> DS constr
R51921:51926 X86Semantics X86_Decode set_op def
R51932:51935 Coq.Init.Datatypes <> true constr
R51886:51892 X86Semantics X86_Decode load_op def
R51898:51901 Coq.Init.Datatypes <> true constr
def 53359:53367 X86_Decode conv_SHRD
R53379:53385 X86Syntax <> operand ind
R53392:53399 X86Syntax <> register ind
R53533:53537 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53661:53669 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53568:53573 X86Syntax <> Reg_ri constr
R53580:53588 X86Semantics X86_Decode iload_op8 def
R53595:53600 X86Syntax <> Reg_op constr
R53622:53627 X86Syntax <> Imm_ri constr
R53634:53641 X86Semantics X86_Decode load_int def
R53679:53682 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53694:53701 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53683:53688 X86Semantics X86_Decode load_Z def
R53707:53710 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53740:53864 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53711:53715 X86Semantics X86_Decode arith def
R53717:53723 X86Semantics X86_RTL modu_op constr
R53878:53886 Monad <> :monad_scope:x_';;'_x not
R53865:53874 X86Semantics X86_Decode undef_flag def
R53876:53877 X86Semantics X86_MACHINE CF constr
R53900:53908 Monad <> :monad_scope:x_';;'_x not
R53887:53896 X86Semantics X86_Decode undef_flag def
R53898:53899 X86Semantics X86_MACHINE SF constr
R53922:53930 Monad <> :monad_scope:x_';;'_x not
R53909:53918 X86Semantics X86_Decode undef_flag def
R53920:53921 X86Semantics X86_MACHINE ZF constr
R53944:53952 Monad <> :monad_scope:x_';;'_x not
R53931:53940 X86Semantics X86_Decode undef_flag def
R53942:53943 X86Semantics X86_MACHINE PF constr
R53966:53974 Monad <> :monad_scope:x_';;'_x not
R53953:53962 X86Semantics X86_Decode undef_flag def
R53964:53965 X86Semantics X86_MACHINE AF constr
R53977:53980 Monad <> :monad_scope:x_'<-'_x_';'_x not
R53993:54000 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54003:54006 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54026:54033 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54017:54022 X86Syntax <> Reg_op constr
R54041:54044 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54057:54064 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54045:54050 X86Semantics X86_Decode cast_u def
R54072:54076 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54214:54222 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54084:54094 X86Syntax <> op_override proj
R54128:54131 Coq.Init.Datatypes <> true constr
R54136:54141 X86Semantics X86_Decode load_Z def
R54171:54175 Coq.Init.Datatypes <> false constr
R54180:54185 X86Semantics X86_Decode load_Z def
R54230:54233 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54246:54253 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54234:54239 X86Semantics X86_Decode cast_u def
R54261:54264 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54293:54300 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54265:54269 X86Semantics X86_Decode arith def
R54271:54276 X86Semantics X86_RTL shl_op constr
R54309:54312 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54340:54347 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54313:54317 X86Semantics X86_Decode arith def
R54319:54323 X86Semantics X86_RTL or_op constr
R54358:54361 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54377:54384 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54362:54367 X86Semantics X86_Decode cast_u def
R54392:54395 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54429:54436 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54396:54400 X86Semantics X86_Decode arith def
R54402:54408 X86Semantics X86_RTL shru_op constr
R54444:54447 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54464:54471 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54448:54453 X86Semantics X86_Decode cast_u def
R54480:54484 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54628:54636 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54492:54502 X86Syntax <> op_override proj
R54536:54539 Coq.Init.Datatypes <> true constr
R54544:54549 X86Semantics X86_Decode load_Z def
R54551:54555 RTL <> size8 def
R54582:54586 Coq.Init.Datatypes <> false constr
R54591:54596 X86Semantics X86_Decode load_Z def
R54598:54602 RTL <> size8 def
R54643:54646 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54673:54680 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54647:54650 X86Semantics X86_Decode test def
R54652:54657 X86Semantics X86_RTL ltu_op constr
R54687:54690 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54716:54723 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54691:54694 X86Semantics X86_Decode test def
R54696:54700 X86Semantics X86_RTL eq_op constr
R54729:54732 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54758:54765 Monad <> :monad_scope:x_'<-'_x_';'_x not
R54733:54737 X86Semantics X86_Decode arith def
R54739:54743 X86Semantics X86_RTL or_op constr
R54806:54814 Monad <> :monad_scope:x_';;'_x not
R54766:54771 X86Semantics X86_Decode :monad_scope:'emit'_x not
R54805:54805 X86Semantics X86_Decode :monad_scope:'emit'_x not
R54772:54777 X86Semantics X86_RTL if_rtl constr
R54786:54795 X86Semantics X86_RTL choose_rtl constr
R53493:53506 X86Semantics X86_Decode get_segment_op def
R53512:53513 X86Syntax <> DS constr
R53459:53464 X86Semantics X86_Decode set_op def
R53470:53473 Coq.Init.Datatypes <> true constr
R53424:53430 X86Semantics X86_Decode load_op def
R53436:53439 Coq.Init.Datatypes <> true constr
def 55239:55244 X86_Decode get_AH
R55248:55251 X86Semantics X86_Decode Conv def
R55254:55263 X86Semantics X86_RTL pseudo_reg ind
R55265:55269 RTL <> size8 def
R55279:55287 X86Semantics X86_Decode iload_op8 def
R55293:55298 X86Syntax <> Reg_op constr
R55300:55302 X86Syntax <> ESP constr
R55289:55290 X86Syntax <> DS constr
def 55322:55327 X86_Decode set_AH
R55332:55335 X86Semantics X86_Decode Conv def
R55337:55340 Coq.Init.Datatypes <> unit ind
R55349:55356 X86Semantics X86_Decode iset_op8 def
R55364:55369 X86Syntax <> Reg_op constr
R55371:55373 X86Syntax <> ESP constr
R55358:55359 X86Syntax <> DS constr
def 55394:55399 X86_Decode get_AL
R55403:55406 X86Semantics X86_Decode Conv def
R55409:55418 X86Semantics X86_RTL pseudo_reg ind
R55420:55424 RTL <> size8 def
R55434:55442 X86Semantics X86_Decode iload_op8 def
R55448:55453 X86Syntax <> Reg_op constr
R55455:55457 X86Syntax <> EAX constr
R55444:55445 X86Syntax <> DS constr
def 55477:55482 X86_Decode set_AL
R55487:55490 X86Semantics X86_Decode Conv def
R55492:55495 Coq.Init.Datatypes <> unit ind
R55504:55511 X86Semantics X86_Decode iset_op8 def
R55519:55524 X86Syntax <> Reg_op constr
R55526:55528 X86Syntax <> EAX constr
R55513:55514 X86Syntax <> DS constr
def 55549:55553 X86_Decode ifset
R55566:55575 X86Semantics X86_RTL pseudo_reg ind
R55584:55593 X86Semantics X86_RTL pseudo_reg ind
R55600:55603 X86Semantics X86_Decode Conv def
R55605:55608 Coq.Init.Datatypes <> unit ind
R55617:55622 X86Semantics X86_Decode :monad_scope:'emit'_x not
R55653:55653 X86Semantics X86_Decode :monad_scope:'emit'_x not
R55623:55628 X86Semantics X86_RTL if_rtl constr
R55636:55645 X86Semantics X86_RTL cast_u_rtl constr
def 55670:55681 X86_Decode conv_AAA_AAS
R55689:55701 X86Semantics X86_RTL bit_vector_op ind
R55706:55709 X86Semantics X86_Decode Conv def
R55711:55714 Coq.Init.Datatypes <> unit ind
R55728:55731 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55746:55751 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55732:55737 X86Semantics X86_Decode load_Z def
R55739:55743 RTL <> size8 def
R55759:55762 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55778:55783 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55763:55768 X86Semantics X86_Decode load_Z def
R55770:55774 RTL <> size8 def
R55787:55790 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55802:55807 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55791:55798 X86Semantics X86_Decode get_flag def
R55800:55801 X86Semantics X86_MACHINE AF constr
R55811:55814 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55821:55826 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55815:55820 X86Semantics X86_Decode get_AL def
R55833:55836 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55861:55866 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55837:55841 X86Semantics X86_Decode arith def
R55843:55848 X86Semantics X86_RTL and_op constr
R55872:55875 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55899:55904 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55876:55879 X86Semantics X86_Decode test def
R55881:55885 X86Semantics X86_RTL lt_op constr
R55909:55912 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55934:55940 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55913:55917 X86Semantics X86_Decode arith def
R55919:55923 X86Semantics X86_RTL or_op constr
R55944:55947 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55954:55979 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55948:55953 X86Semantics X86_Decode get_AH def
R55986:55989 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56004:56009 Monad <> :monad_scope:x_'<-'_x_';'_x not
R55990:55995 X86Semantics X86_Decode load_Z def
R55997:56001 RTL <> size1 def
R56014:56017 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56029:56034 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56018:56024 X86Semantics X86_Decode copy_ps def
R56039:56042 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56057:56062 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56043:56049 X86Semantics X86_Decode copy_ps def
R56067:56070 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56085:56090 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56071:56077 X86Semantics X86_Decode copy_ps def
R56095:56098 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56123:56151 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56099:56103 X86Semantics X86_Decode arith def
R56105:56110 X86Semantics X86_RTL and_op constr
R56156:56159 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56174:56179 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56160:56165 X86Semantics X86_Decode load_Z def
R56167:56171 RTL <> size8 def
R56184:56187 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56202:56207 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56188:56193 X86Semantics X86_Decode load_Z def
R56195:56199 RTL <> size8 def
R56213:56216 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56231:56236 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56217:56222 X86Semantics X86_Decode load_Z def
R56224:56228 RTL <> size1 def
R56242:56245 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56264:56269 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56246:56250 X86Semantics X86_Decode arith def
R56279:56282 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56309:56314 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56283:56287 X86Semantics X86_Decode arith def
R56289:56294 X86Semantics X86_RTL and_op constr
R56340:56351 Monad <> :monad_scope:x_';;'_x not
R56315:56319 X86Semantics X86_Decode ifset def
R56355:56358 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56365:56370 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56359:56364 X86Semantics X86_Decode get_AH def
R56376:56379 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56398:56403 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56380:56384 X86Semantics X86_Decode arith def
R56425:56431 Monad <> :monad_scope:x_';;'_x not
R56404:56408 X86Semantics X86_Decode ifset def
R56453:56459 Monad <> :monad_scope:x_';;'_x not
R56432:56436 X86Semantics X86_Decode ifset def
R56481:56517 Monad <> :monad_scope:x_';;'_x not
R56460:56464 X86Semantics X86_Decode ifset def
R56529:56535 Monad <> :monad_scope:x_';;'_x not
R56518:56523 X86Semantics X86_Decode set_AL def
R56547:56553 Monad <> :monad_scope:x_';;'_x not
R56536:56541 X86Semantics X86_Decode set_AH def
R56570:56576 Monad <> :monad_scope:x_';;'_x not
R56554:56561 X86Semantics X86_Decode set_flag def
R56563:56564 X86Semantics X86_MACHINE AF constr
R56593:56600 Monad <> :monad_scope:x_';;'_x not
R56577:56584 X86Semantics X86_Decode set_flag def
R56586:56587 X86Semantics X86_MACHINE CF constr
R56614:56620 Monad <> :monad_scope:x_';;'_x not
R56601:56610 X86Semantics X86_Decode undef_flag def
R56612:56613 X86Semantics X86_MACHINE OF constr
R56634:56640 Monad <> :monad_scope:x_';;'_x not
R56621:56630 X86Semantics X86_Decode undef_flag def
R56632:56633 X86Semantics X86_MACHINE SF constr
R56654:56660 Monad <> :monad_scope:x_';;'_x not
R56641:56650 X86Semantics X86_Decode undef_flag def
R56652:56653 X86Semantics X86_MACHINE ZF constr
R56661:56670 X86Semantics X86_Decode undef_flag def
R56672:56673 X86Semantics X86_MACHINE PF constr
def 56694:56701 X86_Decode conv_AAD
R56705:56708 X86Semantics X86_Decode Conv def
R56710:56713 Coq.Init.Datatypes <> unit ind
R56725:56728 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56735:56740 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56729:56734 X86Semantics X86_Decode get_AL def
R56744:56747 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56754:56759 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56748:56753 X86Semantics X86_Decode get_AH def
R56764:56767 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56783:56788 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56768:56773 X86Semantics X86_Decode load_Z def
R56775:56779 RTL <> size8 def
R56792:56795 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56812:56817 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56796:56801 X86Semantics X86_Decode load_Z def
R56803:56807 RTL <> size8 def
R56823:56826 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56841:56847 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56827:56832 X86Semantics X86_Decode load_Z def
R56834:56838 RTL <> size8 def
R56855:56858 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56880:56885 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56859:56863 X86Semantics X86_Decode arith def
R56865:56870 X86Semantics X86_RTL mul_op constr
R56891:56894 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56919:56924 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56895:56899 X86Semantics X86_Decode arith def
R56901:56906 X86Semantics X86_RTL add_op constr
R56934:56937 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56960:56965 Monad <> :monad_scope:x_'<-'_x_';'_x not
R56938:56942 X86Semantics X86_Decode arith def
R56944:56949 X86Semantics X86_RTL and_op constr
R56982:56988 Monad <> :monad_scope:x_';;'_x not
R56966:56971 X86Semantics X86_Decode set_AL def
R57001:57008 Monad <> :monad_scope:x_';;'_x not
R56989:56994 X86Semantics X86_Decode set_AH def
R57011:57014 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57041:57046 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57015:57018 X86Semantics X86_Decode test def
R57020:57024 X86Semantics X86_RTL eq_op constr
R57061:57067 Monad <> :monad_scope:x_';;'_x not
R57047:57054 X86Semantics X86_Decode set_flag def
R57056:57057 X86Semantics X86_MACHINE ZF constr
R57070:57073 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57100:57105 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57074:57077 X86Semantics X86_Decode test def
R57079:57083 X86Semantics X86_RTL lt_op constr
R57120:57126 Monad <> :monad_scope:x_';;'_x not
R57106:57113 X86Semantics X86_Decode set_flag def
R57115:57116 X86Semantics X86_MACHINE SF constr
R57129:57132 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57157:57162 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57133:57146 X86Semantics X86_Decode compute_parity def
R57177:57183 Monad <> :monad_scope:x_';;'_x not
R57163:57170 X86Semantics X86_Decode set_flag def
R57172:57173 X86Semantics X86_MACHINE PF constr
R57197:57203 Monad <> :monad_scope:x_';;'_x not
R57184:57193 X86Semantics X86_Decode undef_flag def
R57195:57196 X86Semantics X86_MACHINE OF constr
R57217:57223 Monad <> :monad_scope:x_';;'_x not
R57204:57213 X86Semantics X86_Decode undef_flag def
R57215:57216 X86Semantics X86_MACHINE AF constr
R57224:57233 X86Semantics X86_Decode undef_flag def
R57235:57236 X86Semantics X86_MACHINE CF constr
def 57258:57265 X86_Decode conv_AAM
R57269:57272 X86Semantics X86_Decode Conv def
R57274:57277 Coq.Init.Datatypes <> unit ind
R57289:57292 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57299:57304 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57293:57298 X86Semantics X86_Decode get_AL def
R57309:57312 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57328:57333 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57313:57318 X86Semantics X86_Decode load_Z def
R57320:57324 RTL <> size8 def
R57340:57343 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57366:57371 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57344:57348 X86Semantics X86_Decode arith def
R57350:57356 X86Semantics X86_RTL divu_op constr
R57378:57381 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57404:57409 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57382:57386 X86Semantics X86_Decode arith def
R57388:57394 X86Semantics X86_RTL modu_op constr
R57423:57429 Monad <> :monad_scope:x_';;'_x not
R57410:57415 X86Semantics X86_Decode set_AH def
R57443:57450 Monad <> :monad_scope:x_';;'_x not
R57430:57435 X86Semantics X86_Decode set_AL def
R57456:57459 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57474:57479 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57460:57465 X86Semantics X86_Decode load_Z def
R57467:57471 RTL <> size8 def
R57482:57485 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57509:57514 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57486:57489 X86Semantics X86_Decode test def
R57491:57495 X86Semantics X86_RTL eq_op constr
R57529:57535 Monad <> :monad_scope:x_';;'_x not
R57515:57522 X86Semantics X86_Decode set_flag def
R57524:57525 X86Semantics X86_MACHINE ZF constr
R57538:57541 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57565:57570 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57542:57545 X86Semantics X86_Decode test def
R57547:57551 X86Semantics X86_RTL lt_op constr
R57585:57591 Monad <> :monad_scope:x_';;'_x not
R57571:57578 X86Semantics X86_Decode set_flag def
R57580:57581 X86Semantics X86_MACHINE SF constr
R57594:57597 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57619:57624 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57598:57611 X86Semantics X86_Decode compute_parity def
R57639:57645 Monad <> :monad_scope:x_';;'_x not
R57625:57632 X86Semantics X86_Decode set_flag def
R57634:57635 X86Semantics X86_MACHINE PF constr
R57659:57665 Monad <> :monad_scope:x_';;'_x not
R57646:57655 X86Semantics X86_Decode undef_flag def
R57657:57658 X86Semantics X86_MACHINE OF constr
R57679:57685 Monad <> :monad_scope:x_';;'_x not
R57666:57675 X86Semantics X86_Decode undef_flag def
R57677:57678 X86Semantics X86_MACHINE AF constr
R57686:57695 X86Semantics X86_Decode undef_flag def
R57697:57698 X86Semantics X86_MACHINE CF constr
def 57720:57731 X86_Decode testcarryAdd
R57739:57748 X86Semantics X86_RTL pseudo_reg ind
R57761:57764 X86Semantics X86_Decode Conv def
R57767:57776 X86Semantics X86_RTL pseudo_reg ind
R57778:57782 RTL <> size1 def
R57794:57796 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57814:57819 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57797:57800 X86Semantics X86_Decode test def
R57802:57807 X86Semantics X86_RTL ltu_op constr
R57822:57824 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57842:57847 Monad <> :monad_scope:x_'<-'_x_';'_x not
R57825:57828 X86Semantics X86_Decode test def
R57830:57835 X86Semantics X86_RTL ltu_op constr
R57848:57852 X86Semantics X86_Decode arith def
R57854:57858 X86Semantics X86_RTL or_op constr
def 57881:57892 X86_Decode testcarrySub
R57900:57909 X86Semantics X86_RTL pseudo_reg ind
R57921:57930 X86Semantics X86_RTL pseudo_reg ind
R57937:57940 X86Semantics X86_Decode Conv def
R57943:57952 X86Semantics X86_RTL pseudo_reg ind
R57954:57958 RTL <> size1 def
R57968:57971 X86Semantics X86_Decode test def
R57973:57978 X86Semantics X86_RTL ltu_op constr
def 58026:58037 X86_Decode conv_DAA_DAS
R58045:58057 X86Semantics X86_RTL bit_vector_op ind
R58146:58149 X86Semantics X86_Decode Conv def
R58152:58161 X86Semantics X86_RTL pseudo_reg ind
R58163:58167 RTL <> size1 def
R58119:58128 X86Semantics X86_RTL pseudo_reg ind
R58130:58134 RTL <> size8 def
R58097:58106 X86Semantics X86_RTL pseudo_reg ind
R58108:58112 RTL <> size8 def
R58075:58084 X86Semantics X86_RTL pseudo_reg ind
R58086:58090 RTL <> size8 def
R58173:58176 X86Semantics X86_Decode Conv def
R58178:58181 Coq.Init.Datatypes <> unit ind
R58193:58196 Monad <> :monad_scope:x_'<-'_x_';'_x not
R58222:58227 Monad <> :monad_scope:x_'<-'_x_';'_x not
R58197:58201 X86Semantics X86_Decode fresh def
R58205:58214 X86Semantics X86_RTL choose_rtl constr
R58216:58220 RTL <> size8 def
R58238:58244 Monad <> :monad_scope:x_';;'_x not
R58228:58233 X86Semantics X86_Decode set_AL def
R58258:58264 Monad <> :monad_scope:x_';;'_x not
R58245:58254 X86Semantics X86_Decode undef_flag def
R58256:58257 X86Semantics X86_MACHINE CF constr
R58278:58284 Monad <> :monad_scope:x_';;'_x not
R58265:58274 X86Semantics X86_Decode undef_flag def
R58276:58277 X86Semantics X86_MACHINE AF constr
R58298:58304 Monad <> :monad_scope:x_';;'_x not
R58285:58294 X86Semantics X86_Decode undef_flag def
R58296:58297 X86Semantics X86_MACHINE SF constr
R58318:58324 Monad <> :monad_scope:x_';;'_x not
R58305:58314 X86Semantics X86_Decode undef_flag def
R58316:58317 X86Semantics X86_MACHINE ZF constr
R58338:58344 Monad <> :monad_scope:x_';;'_x not
R58325:58334 X86Semantics X86_Decode undef_flag def
R58336:58337 X86Semantics X86_MACHINE PF constr
R58345:58354 X86Semantics X86_Decode undef_flag def
R58356:58357 X86Semantics X86_MACHINE OF constr
def 60041:60055 X86_Decode conv_logical_op
R60069:60072 Coq.Init.Datatypes <> bool ind
R60079:60091 X86Semantics X86_RTL bit_vector_op ind
R60100:60105 X86Syntax <> prefix rec
R60117:60120 Coq.Init.Datatypes <> bool ind
R60133:60139 X86Syntax <> operand ind
R60144:60147 X86Semantics X86_Decode Conv def
R60149:60152 Coq.Init.Datatypes <> unit ind
R60282:60285 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60298:60307 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60310:60313 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60326:60335 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60338:60341 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60355:60364 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60342:60346 X86Semantics X86_Decode arith def
R60369:60372 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60383:60392 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60373:60378 X86Semantics X86_Decode load_Z def
R60396:60399 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60418:60427 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60400:60403 X86Semantics X86_Decode test def
R60405:60409 X86Semantics X86_RTL eq_op constr
R60431:60434 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60453:60462 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60435:60438 X86Semantics X86_Decode test def
R60440:60444 X86Semantics X86_RTL lt_op constr
R60466:60469 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60487:60496 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60470:60483 X86Semantics X86_Decode compute_parity def
R60502:60505 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60520:60529 Monad <> :monad_scope:x_'<-'_x_';'_x not
R60506:60511 X86Semantics X86_Decode load_Z def
R60513:60517 RTL <> size1 def
R60547:60558 Monad <> :monad_scope:x_';;'_x not
R60530:60537 X86Semantics X86_Decode set_flag def
R60539:60540 X86Semantics X86_MACHINE OF constr
R60576:60587 Monad <> :monad_scope:x_';;'_x not
R60559:60566 X86Semantics X86_Decode set_flag def
R60568:60569 X86Semantics X86_MACHINE CF constr
R60603:60616 Monad <> :monad_scope:x_';;'_x not
R60588:60595 X86Semantics X86_Decode set_flag def
R60597:60598 X86Semantics X86_MACHINE ZF constr
R60632:60643 Monad <> :monad_scope:x_';;'_x not
R60617:60624 X86Semantics X86_Decode set_flag def
R60626:60627 X86Semantics X86_MACHINE SF constr
R60659:60670 Monad <> :monad_scope:x_';;'_x not
R60644:60651 X86Semantics X86_Decode set_flag def
R60653:60654 X86Semantics X86_MACHINE PF constr
R60684:60694 Monad <> :monad_scope:x_';;'_x not
R60671:60680 X86Semantics X86_Decode undef_flag def
R60682:60683 X86Semantics X86_MACHINE AF constr
R60761:60764 Monad <> :monad_scope:'ret'_x not
R60765:60766 Coq.Init.Datatypes <> tt constr
R60238:60252 X86Semantics X86_Decode get_segment_op2 def
R60258:60259 X86Syntax <> DS constr
R60206:60211 X86Semantics X86_Decode set_op def
R60173:60179 X86Semantics X86_Decode load_op def
def 60785:60792 X86_Decode conv_AND
R60809:60823 X86Semantics X86_Decode conv_logical_op def
R60830:60835 X86Semantics X86_RTL and_op constr
R60825:60828 Coq.Init.Datatypes <> true constr
def 60863:60869 X86_Decode conv_OR
R60886:60900 X86Semantics X86_Decode conv_logical_op def
R60907:60911 X86Semantics X86_RTL or_op constr
R60902:60905 Coq.Init.Datatypes <> true constr
def 60939:60946 X86_Decode conv_XOR
R60963:60977 X86Semantics X86_Decode conv_logical_op def
R60984:60989 X86Semantics X86_RTL xor_op constr
R60979:60982 Coq.Init.Datatypes <> true constr
def 61093:61101 X86_Decode conv_TEST
R61118:61132 X86Semantics X86_Decode conv_logical_op def
R61140:61145 X86Semantics X86_RTL and_op constr
R61134:61138 Coq.Init.Datatypes <> false constr
def 61258:61265 X86_Decode conv_NOT
R61273:61278 X86Syntax <> prefix rec
R61285:61288 Coq.Init.Datatypes <> bool ind
R61296:61302 X86Syntax <> operand ind
R61307:61310 X86Semantics X86_Decode Conv def
R61312:61315 Coq.Init.Datatypes <> unit ind
R61439:61442 Monad <> :monad_scope:x_'<-'_x_';'_x not
R61454:61463 Monad <> :monad_scope:x_'<-'_x_';'_x not
R61476:61479 Monad <> :monad_scope:x_'<-'_x_';'_x not
R61515:61524 Monad <> :monad_scope:x_'<-'_x_';'_x not
R61480:61485 X86Semantics X86_Decode load_Z def
R61490:61506 Bits Word max_unsigned def
R61508:61513 RTL <> size32 def
R61527:61530 Monad <> :monad_scope:x_'<-'_x_';'_x not
R61559:61568 Monad <> :monad_scope:x_'<-'_x_';'_x not
R61531:61535 X86Semantics X86_Decode arith def
R61537:61542 X86Semantics X86_RTL xor_op constr
R61401:61414 X86Semantics X86_Decode get_segment_op def
R61420:61421 X86Syntax <> DS constr
R61369:61374 X86Semantics X86_Decode set_op def
R61336:61342 X86Semantics X86_Decode load_op def
def 61686:61693 X86_Decode conv_POP
R61701:61706 X86Syntax <> prefix rec
R61714:61720 X86Syntax <> operand ind
R62032:62035 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62048:62055 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62036:62043 X86Semantics X86_Decode load_reg def
R62045:62047 X86Syntax <> ESP constr
R62061:62064 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62079:62086 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62093:62096 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62120:62127 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62097:62102 X86Semantics X86_Decode load_Z def
R62104:62109 RTL <> size32 def
R62134:62137 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62164:62171 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62138:62142 X86Semantics X86_Decode arith def
R62144:62149 X86Semantics X86_RTL add_op constr
R62190:62198 Monad <> :monad_scope:x_';;'_x not
R62172:62178 X86Semantics X86_Decode set_reg def
R62187:62189 X86Syntax <> ESP constr
R61895:61905 X86Syntax <> op_override proj
R61942:61945 Coq.Init.Datatypes <> true constr
R61979:61983 Coq.Init.Datatypes <> false constr
R61841:61848 X86Semantics X86_Decode load_mem def
R61854:61857 Coq.Init.Datatypes <> true constr
R61799:61804 X86Semantics X86_Decode set_op def
R61810:61813 Coq.Init.Datatypes <> true constr
R61777:61778 X86Syntax <> SS constr
def 62233:62241 X86_Decode conv_POPA
R62248:62253 X86Syntax <> prefix rec
R62473:62479 Monad <> :monad_scope:x_';;'_x not
R62470:62472 X86Syntax <> EDI constr
R62490:62496 Monad <> :monad_scope:x_';;'_x not
R62487:62489 X86Syntax <> ESI constr
R62507:62513 Monad <> :monad_scope:x_';;'_x not
R62504:62506 X86Syntax <> EBP constr
R62520:62523 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62536:62541 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62524:62531 X86Semantics X86_Decode load_reg def
R62533:62535 X86Syntax <> ESP constr
R62548:62551 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62575:62580 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62552:62557 X86Semantics X86_Decode load_Z def
R62559:62564 RTL <> size32 def
R62587:62590 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62617:62622 Monad <> :monad_scope:x_'<-'_x_';'_x not
R62591:62595 X86Semantics X86_Decode arith def
R62597:62602 X86Semantics X86_RTL add_op constr
R62641:62647 Monad <> :monad_scope:x_';;'_x not
R62623:62629 X86Semantics X86_Decode set_reg def
R62638:62640 X86Syntax <> ESP constr
R62658:62664 Monad <> :monad_scope:x_';;'_x not
R62655:62657 X86Syntax <> EBX constr
R62675:62681 Monad <> :monad_scope:x_';;'_x not
R62672:62674 X86Syntax <> EDX constr
R62692:62698 Monad <> :monad_scope:x_';;'_x not
R62689:62691 X86Syntax <> ECX constr
R62706:62708 X86Syntax <> EAX constr
R62432:62439 X86Semantics X86_Decode conv_POP def
R62446:62451 X86Syntax <> Reg_op constr
R62287:62297 X86Syntax <> op_override proj
R62334:62337 Coq.Init.Datatypes <> true constr
R62371:62375 Coq.Init.Datatypes <> false constr
def 62725:62733 X86_Decode conv_PUSH
R62741:62746 X86Syntax <> prefix rec
R62753:62756 Coq.Init.Datatypes <> bool ind
R62764:62770 X86Syntax <> operand ind
R63052:63055 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63063:63068 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63075:63078 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63091:63096 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63079:63086 X86Semantics X86_Decode load_reg def
R63088:63090 X86Syntax <> ESP constr
R63103:63106 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63130:63135 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63107:63112 X86Semantics X86_Decode load_Z def
R63114:63119 RTL <> size32 def
R63142:63145 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63172:63177 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63146:63150 X86Semantics X86_Decode arith def
R63152:63157 X86Semantics X86_RTL sub_op constr
R63194:63200 Monad <> :monad_scope:x_';;'_x not
R63201:63207 X86Semantics X86_Decode set_reg def
R63216:63218 X86Syntax <> ESP constr
R62906:62916 X86Syntax <> op_override proj
R62931:62931 Coq.ZArith.BinInt <> Z ind
R62964:62967 Coq.Init.Datatypes <> true constr
R63003:63007 Coq.Init.Datatypes <> false constr
R62855:62861 X86Semantics X86_Decode set_mem def
R62867:62870 Coq.Init.Datatypes <> true constr
R62813:62819 X86Semantics X86_Decode load_op def
R62825:62828 Coq.Init.Datatypes <> true constr
R62791:62792 X86Syntax <> SS constr
def 63240:63255 X86_Decode conv_PUSH_pseudo
R63262:63267 X86Syntax <> prefix rec
R63273:63276 Coq.Init.Datatypes <> bool ind
R63626:63629 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63642:63647 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63630:63637 X86Semantics X86_Decode load_reg def
R63639:63641 X86Syntax <> ESP constr
R63654:63657 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63681:63686 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63658:63663 X86Semantics X86_Decode load_Z def
R63665:63670 RTL <> size32 def
R63693:63696 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63723:63728 Monad <> :monad_scope:x_'<-'_x_';'_x not
R63697:63701 X86Semantics X86_Decode arith def
R63703:63708 X86Semantics X86_RTL sub_op constr
R63745:63751 Monad <> :monad_scope:x_';;'_x not
R63752:63758 X86Semantics X86_Decode set_reg def
R63767:63769 X86Syntax <> ESP constr
R63430:63440 X86Syntax <> op_override proj
R63455:63455 Coq.ZArith.BinInt <> Z ind
R63490:63494 Coq.Init.Datatypes <> false constr
R63528:63531 Coq.Init.Datatypes <> true constr
R63533:63536 Coq.Init.Datatypes <> true constr
R63570:63574 Coq.Init.Datatypes <> false constr
R63576:63579 Coq.Init.Datatypes <> true constr
R63382:63388 X86Semantics X86_Decode set_mem def
R63358:63359 X86Syntax <> SS constr
def 64263:64272 X86_Decode conv_PUSHA
R64279:64284 X86Syntax <> prefix rec
R64393:64396 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64414:64419 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64403:64408 X86Syntax <> Reg_op constr
R64410:64412 X86Syntax <> ESP constr
R64431:64437 Monad <> :monad_scope:x_';;'_x not
R64428:64430 X86Syntax <> EAX constr
R64449:64455 Monad <> :monad_scope:x_';;'_x not
R64446:64448 X86Syntax <> ECX constr
R64467:64473 Monad <> :monad_scope:x_';;'_x not
R64464:64466 X86Syntax <> EDX constr
R64485:64491 Monad <> :monad_scope:x_';;'_x not
R64482:64484 X86Syntax <> EBX constr
R64524:64530 Monad <> :monad_scope:x_';;'_x not
R64492:64507 X86Semantics X86_Decode conv_PUSH_pseudo def
R64513:64516 Coq.Init.Datatypes <> true constr
R64542:64548 Monad <> :monad_scope:x_';;'_x not
R64539:64541 X86Syntax <> EBP constr
R64560:64566 Monad <> :monad_scope:x_';;'_x not
R64557:64559 X86Syntax <> ESI constr
R64575:64577 X86Syntax <> EDI constr
R64350:64358 X86Semantics X86_Decode conv_PUSH def
R64370:64375 X86Syntax <> Reg_op constr
R64364:64367 Coq.Init.Datatypes <> true constr
R64306:64312 X86Semantics X86_Decode load_op def
R64323:64324 X86Syntax <> SS constr
R64318:64321 Coq.Init.Datatypes <> true constr
def 64594:64606 X86_Decode get_and_place
R64622:64625 X86Semantics X86_Decode Conv def
R64628:64637 X86Semantics X86_RTL pseudo_reg ind
R64649:64652 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64664:64667 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64653:64660 X86Semantics X86_Decode get_flag def
R64671:64674 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64687:64690 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64675:64680 X86Semantics X86_Decode load_Z def
R64694:64697 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64709:64714 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64698:64703 X86Semantics X86_Decode cast_u def
R64718:64721 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64745:64750 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64723:64727 X86Semantics X86_Decode arith def
R64731:64736 X86Semantics X86_RTL shl_op constr
R64754:64757 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64780:64783 Monad <> :monad_scope:x_'<-'_x_';'_x not
R64759:64763 X86Semantics X86_Decode arith def
R64767:64771 X86Semantics X86_RTL or_op constr
R64784:64789 Monad <> Return meth
def 65625:65639 X86_Decode conv_POP_pseudo
R65647:65652 X86Syntax <> prefix rec
R65978:65981 Monad <> :monad_scope:x_'<-'_x_';'_x not
R65994:66003 Monad <> :monad_scope:x_'<-'_x_';'_x not
R65982:65989 X86Semantics X86_Decode load_reg def
R65991:65993 X86Syntax <> ESP constr
R66009:66012 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66027:66036 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66043:66046 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66070:66079 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66047:66052 X86Semantics X86_Decode load_Z def
R66054:66059 RTL <> size32 def
R66086:66089 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66116:66125 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66090:66094 X86Semantics X86_Decode arith def
R66096:66101 X86Semantics X86_RTL add_op constr
R66144:66154 Monad <> :monad_scope:x_';;'_x not
R66126:66132 X86Semantics X86_Decode set_reg def
R66141:66143 X86Syntax <> ESP constr
R66155:66160 Monad <> Return meth
R65827:65837 X86Syntax <> op_override proj
R65878:65881 Coq.Init.Datatypes <> true constr
R65919:65923 Coq.Init.Datatypes <> false constr
R65769:65776 X86Semantics X86_Decode load_mem def
R65782:65785 Coq.Init.Datatypes <> true constr
R65725:65730 X86Semantics X86_Decode set_op def
R65736:65739 Coq.Init.Datatypes <> true constr
R65703:65704 X86Syntax <> SS constr
def 66181:66195 X86_Decode extract_and_set
R66213:66216 X86Semantics X86_Decode Conv def
R66218:66221 Coq.Init.Datatypes <> unit ind
R66231:66234 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66245:66248 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66235:66240 X86Semantics X86_Decode load_Z def
R66252:66255 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66268:66271 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66256:66261 X86Semantics X86_Decode load_Z def
R66275:66278 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66304:66307 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66280:66284 X86Semantics X86_Decode arith def
R66288:66293 X86Semantics X86_RTL shr_op constr
R66311:66314 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66338:66341 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66316:66320 X86Semantics X86_Decode arith def
R66324:66329 X86Semantics X86_RTL and_op constr
R66343:66346 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66365:66368 Monad <> :monad_scope:x_'<-'_x_';'_x not
R66347:66350 X86Semantics X86_Decode test def
R66352:66356 X86Semantics X86_RTL eq_op constr
R66369:66376 X86Semantics X86_Decode set_flag def
def 67096:67103 X86_Decode conv_JMP
R67111:67116 X86Syntax <> prefix rec
R67135:67138 Coq.Init.Datatypes <> bool ind
R67146:67152 X86Syntax <> operand ind
R67165:67170 Coq.Init.Datatypes <> option ind
R67172:67179 X86Syntax <> selector def
R67505:67509 X86Semantics X86_Decode :monad_scope:'emit'_x not
R67510:67518 X86Semantics X86_RTL error_rtl constr
R67259:67262 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67280:67289 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67263:67272 X86Semantics X86_Decode iload_op32 def
R67294:67298 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67421:67431 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67340:67343 Coq.Init.Datatypes <> true constr
R67348:67353 X86Semantics X86_Decode load_Z def
R67355:67360 RTL <> size32 def
R67385:67389 Coq.Init.Datatypes <> false constr
R67394:67399 X86Semantics X86_Decode get_pc def
R67437:67440 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67463:67472 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67441:67445 X86Semantics X86_Decode arith def
R67447:67452 X86Semantics X86_RTL add_op constr
R67473:67478 X86Semantics X86_Decode set_pc def
R67200:67213 X86Semantics X86_Decode get_segment_op def
R67219:67220 X86Syntax <> DS constr
def 67535:67542 X86_Decode conv_Jcc
R67550:67555 X86Syntax <> prefix rec
R67563:67576 X86Syntax <> condition_type ind
R67586:67590 Bits <> int32 def
R67595:67598 X86Semantics X86_Decode Conv def
R67600:67603 Coq.Init.Datatypes <> unit ind
R67617:67620 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67634:67639 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67621:67630 X86Semantics X86_Decode compute_cc def
R67645:67648 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67655:67660 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67649:67654 X86Semantics X86_Decode get_pc def
R67666:67669 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67683:67688 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67670:67677 X86Semantics X86_Decode load_int def
R67694:67697 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67722:67727 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67698:67702 X86Semantics X86_Decode arith def
R67704:67709 X86Semantics X86_RTL add_op constr
R67728:67732 X86Semantics X86_Decode :monad_scope:'emit'_x not
R67733:67738 X86Semantics X86_RTL if_rtl constr
R67747:67757 X86Semantics X86_RTL set_loc_rtl constr
R67765:67770 X86Semantics X86_MACHINE pc_loc constr
def 67788:67796 X86_Decode conv_CALL
R67804:67809 X86Syntax <> prefix rec
R67828:67831 Coq.Init.Datatypes <> bool ind
R67839:67845 X86Syntax <> operand ind
R67858:67863 Coq.Init.Datatypes <> option ind
R67865:67872 X86Syntax <> selector def
R67889:67892 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67899:67906 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67893:67898 X86Semantics X86_Decode get_pc def
R67913:67916 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67929:67936 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67917:67924 X86Semantics X86_Decode load_reg def
R67926:67928 X86Syntax <> ESP constr
R67941:67944 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67960:67967 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67945:67950 X86Semantics X86_Decode load_Z def
R67952:67957 RTL <> size32 def
R67974:67977 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68002:68009 Monad <> :monad_scope:x_'<-'_x_';'_x not
R67978:67982 X86Semantics X86_Decode arith def
R67984:67989 X86Semantics X86_RTL sub_op constr
R68035:68043 Monad <> :monad_scope:x_';;'_x not
R68010:68018 X86Semantics X86_Decode set_mem32 def
R68020:68021 X86Syntax <> SS constr
R68062:68070 Monad <> :monad_scope:x_';;'_x not
R68044:68050 X86Semantics X86_Decode set_reg def
R68059:68061 X86Syntax <> ESP constr
R68071:68078 X86Semantics X86_Decode conv_JMP def
def 68122:68129 X86_Decode conv_RET
R68137:68142 X86Syntax <> prefix rec
R68160:68163 Coq.Init.Datatypes <> bool ind
R68173:68178 Coq.Init.Datatypes <> option ind
R68180:68184 Bits <> int16 def
R68655:68659 X86Semantics X86_Decode :monad_scope:'emit'_x not
R68660:68668 X86Semantics X86_RTL error_rtl constr
R68231:68234 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68247:68256 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68235:68242 X86Semantics X86_Decode load_reg def
R68244:68246 X86Syntax <> ESP constr
R68262:68265 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68286:68295 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68266:68275 X86Semantics X86_Decode load_mem32 def
R68277:68278 X86Syntax <> SS constr
R68300:68303 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68319:68328 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68304:68309 X86Semantics X86_Decode load_Z def
R68311:68316 RTL <> size32 def
R68335:68338 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68363:68372 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68339:68343 X86Semantics X86_Decode arith def
R68345:68350 X86Semantics X86_RTL add_op constr
R68373:68373 Monad <> :monad_scope:x_';;'_x not
R68611:68622 Monad <> :monad_scope:x_';;'_x not
R68403:68406 Coq.Init.Datatypes <> None constr
R68411:68417 X86Semantics X86_Decode set_reg def
R68426:68428 X86Syntax <> ESP constr
R68443:68446 Coq.Init.Datatypes <> Some constr
R68459:68462 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68475:68489 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68463:68470 X86Semantics X86_Decode load_int def
R68493:68496 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68515:68529 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68497:68502 X86Semantics X86_Decode cast_u def
R68504:68509 RTL <> size32 def
R68537:68540 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68564:68578 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68541:68545 X86Semantics X86_Decode arith def
R68547:68552 X86Semantics X86_RTL add_op constr
R68579:68585 X86Semantics X86_Decode set_reg def
R68595:68597 X86Syntax <> ESP constr
R68623:68628 X86Semantics X86_Decode set_pc def
def 68687:68696 X86_Decode conv_LEAVE
R68717:68720 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68733:68738 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68721:68728 X86Semantics X86_Decode load_reg def
R68730:68732 X86Syntax <> EBP constr
R68758:68764 Monad <> :monad_scope:x_';;'_x not
R68739:68745 X86Semantics X86_Decode set_reg def
R68755:68757 X86Syntax <> ESP constr
R68765:68772 X86Semantics X86_Decode conv_POP def
R68779:68784 X86Syntax <> Reg_op constr
R68786:68788 X86Syntax <> EBP constr
def 68806:68814 X86_Decode conv_LOOP
R68829:68832 Coq.Init.Datatypes <> bool ind
R68842:68845 Coq.Init.Datatypes <> bool ind
R68854:68857 Bits <> int8 def
R68871:68874 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68889:68894 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68875:68880 X86Semantics X86_Decode load_Z def
R68882:68886 RTL <> size1 def
R68897:68900 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68913:68918 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68901:68908 X86Semantics X86_Decode load_reg def
R68910:68912 X86Syntax <> ECX constr
R68921:68924 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68935:68940 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68925:68930 X86Semantics X86_Decode load_Z def
R68943:68946 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68965:68970 Monad <> :monad_scope:x_'<-'_x_';'_x not
R68947:68951 X86Semantics X86_Decode arith def
R68953:68958 X86Semantics X86_RTL sub_op constr
R68985:68991 Monad <> :monad_scope:x_';;'_x not
R68971:68977 X86Semantics X86_Decode set_reg def
R68982:68984 X86Syntax <> ECX constr
R68997:69000 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69011:69016 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69001:69006 X86Semantics X86_Decode load_Z def
R69020:69023 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69043:69048 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69024:69027 X86Semantics X86_Decode test def
R69029:69033 X86Semantics X86_RTL eq_op constr
R69053:69056 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69079:69084 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69057:69061 X86Semantics X86_Decode arith def
R69063:69068 X86Semantics X86_RTL xor_op constr
R69088:69091 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69103:69108 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69092:69099 X86Semantics X86_Decode get_flag def
R69101:69102 X86Semantics X86_MACHINE ZF constr
R69113:69116 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69139:69144 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69117:69121 X86Semantics X86_Decode arith def
R69123:69128 X86Semantics X86_RTL xor_op constr
R69150:69159 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69380:69386 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69188:69191 Coq.Init.Datatypes <> true constr
R69237:69240 Coq.Init.Datatypes <> true constr
R69246:69250 X86Semantics X86_Decode arith def
R69252:69257 X86Semantics X86_RTL and_op constr
R69283:69287 Coq.Init.Datatypes <> false constr
R69293:69297 X86Semantics X86_Decode arith def
R69299:69304 X86Semantics X86_RTL and_op constr
R69341:69345 Coq.Init.Datatypes <> false constr
R69350:69354 X86Semantics X86_Decode arith def
R69356:69360 X86Semantics X86_RTL or_op constr
R69391:69394 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69401:69406 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69395:69400 X86Semantics X86_Decode get_pc def
R69415:69418 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69432:69437 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69419:69426 X86Semantics X86_Decode load_int def
R69446:69449 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69472:69477 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69450:69455 X86Semantics X86_Decode cast_s def
R69457:69462 RTL <> size32 def
R69482:69485 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69512:69517 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69486:69490 X86Semantics X86_Decode arith def
R69492:69497 X86Semantics X86_RTL add_op constr
R69525:69533 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69660:69666 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69541:69551 X86Syntax <> op_override proj
R69571:69574 Coq.Init.Datatypes <> true constr
R69579:69584 X86Semantics X86_Decode load_Z def
R69586:69591 RTL <> size32 def
R69622:69626 Coq.Init.Datatypes <> false constr
R69631:69636 X86Semantics X86_Decode load_Z def
R69646:69646 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R69638:69643 RTL <> size32 def
R69671:69674 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69700:69705 Monad <> :monad_scope:x_'<-'_x_';'_x not
R69675:69679 X86Semantics X86_Decode arith def
R69681:69686 X86Semantics X86_RTL and_op constr
R69706:69711 X86Semantics X86_Decode :monad_scope:'emit'_x not
R69750:69750 X86Semantics X86_Decode :monad_scope:'emit'_x not
R69712:69717 X86Semantics X86_RTL if_rtl constr
R69726:69736 X86Semantics X86_RTL set_loc_rtl constr
R69743:69748 X86Semantics X86_MACHINE pc_loc constr
def 69966:69976 X86_Decode conv_BS_aux
R69986:69989 Coq.Init.Datatypes <> bool ind
R69996:69998 Coq.Init.Datatypes <> nat ind
R70006:70015 X86Semantics X86_RTL pseudo_reg ind
R70022:70025 X86Semantics X86_Decode Conv def
R70028:70037 X86Semantics X86_RTL pseudo_reg ind
R70272:70272 Coq.Init.Datatypes <> O constr
R70277:70284 X86Semantics X86_Decode load_int def
R70303:70303 Coq.Init.Datatypes <> S constr
R70317:70320 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70338:70347 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70321:70328 X86Semantics X86_Decode load_int def
R70351:70354 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70374:70383 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70355:70365 X86Semantics <> conv_BS_aux def
R70386:70389 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70413:70422 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70390:70394 X86Semantics X86_Decode arith def
R70396:70402 X86Semantics X86_RTL shru_op constr
R70431:70434 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70450:70459 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70435:70440 X86Semantics X86_Decode cast_u def
R70442:70446 RTL <> size1 def
R70508:70518 Monad <> :monad_scope:x_';;'_x not
R70460:70464 X86Semantics X86_Decode :monad_scope:'emit'_x not
R70465:70470 X86Semantics X86_RTL if_rtl constr
R70482:70493 X86Semantics X86_RTL load_imm_rtl constr
R70519:70522 Monad <> :monad_scope:'ret'_x not
R70104:70107 Coq.Init.Datatypes <> true constr
R70113:70121 Bits Word repr def
R70126:70140 Coq.ZArith.BinInt <> Z_of_nat def
R70144:70144 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R70175:70179 Coq.Init.Datatypes <> false constr
R70185:70193 Bits Word repr def
R70198:70212 Coq.ZArith.BinInt <> Z_of_nat def
def 70550:70556 X86_Decode conv_BS
R70562:70565 Coq.Init.Datatypes <> bool ind
R70574:70579 X86Syntax <> prefix rec
R70592:70598 X86Syntax <> operand ind
R70672:70680 Monad <> :monad_scope:x_';;'_x not
R70659:70668 X86Semantics X86_Decode undef_flag def
R70670:70671 X86Semantics X86_MACHINE AF constr
R70694:70702 Monad <> :monad_scope:x_';;'_x not
R70681:70690 X86Semantics X86_Decode undef_flag def
R70692:70693 X86Semantics X86_MACHINE CF constr
R70716:70724 Monad <> :monad_scope:x_';;'_x not
R70703:70712 X86Semantics X86_Decode undef_flag def
R70714:70715 X86Semantics X86_MACHINE SF constr
R70738:70746 Monad <> :monad_scope:x_';;'_x not
R70725:70734 X86Semantics X86_Decode undef_flag def
R70736:70737 X86Semantics X86_MACHINE OF constr
R70760:70768 Monad <> :monad_scope:x_';;'_x not
R70747:70756 X86Semantics X86_Decode undef_flag def
R70758:70759 X86Semantics X86_MACHINE PF constr
R70772:70775 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70794:70801 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70776:70785 X86Semantics X86_Decode iload_op32 def
R70805:70808 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70827:70834 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70809:70818 X86Semantics X86_Decode iload_op32 def
R70839:70842 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70858:70865 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70843:70848 X86Semantics X86_Decode load_Z def
R70850:70855 RTL <> size32 def
R70868:70871 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70891:70898 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70872:70875 X86Semantics X86_Decode test def
R70877:70881 X86Semantics X86_RTL eq_op constr
R70913:70921 Monad <> :monad_scope:x_';;'_x not
R70899:70906 X86Semantics X86_Decode set_flag def
R70908:70909 X86Semantics X86_MACHINE ZF constr
R70925:70928 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70953:70960 Monad <> :monad_scope:x_'<-'_x_';'_x not
R70929:70939 X86Semantics X86_Decode conv_BS_aux def
R70943:70948 RTL <> size32 def
R70994:71002 Monad <> :monad_scope:x_';;'_x not
R70961:70966 X86Semantics X86_Decode :monad_scope:'emit'_x not
R70993:70993 X86Semantics X86_Decode :monad_scope:'emit'_x not
R70967:70972 X86Semantics X86_RTL if_rtl constr
R70978:70987 X86Semantics X86_RTL choose_rtl constr
R71003:71011 X86Semantics X86_Decode iset_op32 def
R70619:70633 X86Semantics X86_Decode get_segment_op2 def
R70639:70640 X86Syntax <> DS constr
def 71040:71047 X86_Decode conv_BSF
R71062:71068 X86Semantics X86_Decode conv_BS def
R71070:71073 Coq.Init.Datatypes <> true constr
def 71099:71106 X86_Decode conv_BSR
R71121:71127 X86Semantics X86_Decode conv_BS def
R71129:71133 Coq.Init.Datatypes <> false constr
def 71162:71168 X86_Decode get_Bit
R71174:71176 Coq.Init.Datatypes <> nat ind
R71184:71193 X86Semantics X86_RTL pseudo_reg ind
R71205:71214 X86Semantics X86_RTL pseudo_reg ind
R71226:71229 X86Semantics X86_Decode Conv def
R71232:71241 X86Semantics X86_RTL pseudo_reg ind
R71243:71247 RTL <> size1 def
R71262:71265 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71276:71281 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71266:71271 X86Semantics X86_Decode load_Z def
R71288:71291 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71312:71317 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71292:71296 X86Semantics X86_Decode arith def
R71298:71303 X86Semantics X86_RTL shr_op constr
R71325:71328 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71354:71359 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71329:71333 X86Semantics X86_Decode arith def
R71335:71340 X86Semantics X86_RTL and_op constr
R71362:71365 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71386:71391 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71366:71371 X86Semantics X86_Decode cast_u def
R71373:71377 RTL <> size1 def
R71392:71395 Monad <> :monad_scope:'ret'_x not
def 71414:71423 X86_Decode modify_Bit
R71437:71446 X86Semantics X86_RTL pseudo_reg ind
R71458:71467 X86Semantics X86_RTL pseudo_reg ind
R71485:71494 X86Semantics X86_RTL pseudo_reg ind
R71496:71500 RTL <> size1 def
R71504:71507 X86Semantics X86_Decode Conv def
R71510:71519 X86Semantics X86_RTL pseudo_reg ind
R71535:71538 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71549:71554 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71539:71544 X86Semantics X86_Decode load_Z def
R71566:71569 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71592:71597 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71570:71574 X86Semantics X86_Decode arith def
R71576:71581 X86Semantics X86_RTL shl_op constr
R71613:71616 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71632:71637 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71617:71619 X86Semantics X86_Decode not def
R71648:71651 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71667:71672 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71652:71657 X86Semantics X86_Decode cast_u def
R71684:71687 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71716:71721 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71688:71692 X86Semantics X86_Decode arith def
R71694:71699 X86Semantics X86_RTL shl_op constr
R71728:71731 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71766:71771 Monad <> :monad_scope:x_'<-'_x_';'_x not
R71732:71736 X86Semantics X86_Decode arith def
R71738:71743 X86Semantics X86_RTL and_op constr
R71772:71776 X86Semantics X86_Decode arith def
R71778:71782 X86Semantics X86_RTL or_op constr
def 71872:71878 X86_Decode set_Bit
R71885:71890 X86Syntax <> prefix rec
R71896:71899 Coq.Init.Datatypes <> bool ind
R71910:71916 X86Syntax <> operand ind
R71926:71935 X86Semantics X86_RTL pseudo_reg ind
R71938:71943 X86Semantics X86_Decode opsize def
R71946:71956 X86Syntax <> op_override proj
R71981:71990 X86Semantics X86_RTL pseudo_reg ind
R71992:71996 RTL <> size1 def
R72004:72007 X86Semantics X86_Decode Conv def
R72009:72012 Coq.Init.Datatypes <> unit ind
R72141:72144 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72152:72157 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72166:72169 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72198:72203 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72170:72179 X86Semantics X86_Decode modify_Bit def
R72112:72117 X86Semantics X86_Decode set_op def
R72076:72082 X86Semantics X86_Decode load_op def
R72032:72045 X86Semantics X86_Decode get_segment_op def
R72051:72052 X86Syntax <> DS constr
def 72292:72302 X86_Decode set_Bit_mem
R72309:72314 X86Syntax <> prefix rec
R72320:72323 Coq.Init.Datatypes <> bool ind
R72334:72340 X86Syntax <> operand ind
R72349:72358 X86Semantics X86_RTL pseudo_reg ind
R72360:72365 RTL <> size32 def
R72375:72384 X86Semantics X86_RTL pseudo_reg ind
R72387:72392 X86Semantics X86_Decode opsize def
R72395:72405 X86Syntax <> op_override proj
R72430:72439 X86Semantics X86_RTL pseudo_reg ind
R72441:72445 RTL <> size1 def
R72453:72456 X86Semantics X86_Decode Conv def
R72458:72461 Coq.Init.Datatypes <> unit ind
R72592:72595 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72605:72610 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72619:72622 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72651:72782 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72623:72632 X86Semantics X86_Decode modify_Bit def
R72790:72793 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72806:72812 Monad <> :monad_scope:x_'<-'_x_';'_x not
R72794:72800 X86Semantics X86_Decode copy_ps def
R72562:72568 X86Semantics X86_Decode set_mem def
R72525:72532 X86Semantics X86_Decode load_mem def
R72481:72494 X86Semantics X86_Decode get_segment_op def
R72500:72501 X86Syntax <> DS constr
def 72921:72924 X86_Decode fbit
R72935:72938 Coq.Init.Datatypes <> bool ind
R72950:72953 Coq.Init.Datatypes <> bool ind
R72960:72969 X86Semantics X86_RTL pseudo_reg ind
R72971:72975 RTL <> size1 def
R72983:72986 X86Semantics X86_Decode Conv def
R72989:72998 X86Semantics X86_RTL pseudo_reg ind
R73000:73004 RTL <> size1 def
R73018:73021 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73036:73041 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73022:73027 X86Semantics X86_Decode load_Z def
R73029:73033 RTL <> size1 def
R73047:73050 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73065:73070 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73051:73056 X86Semantics X86_Decode load_Z def
R73058:73062 RTL <> size1 def
R73105:73108 Coq.Init.Datatypes <> true constr
R73111:73114 Coq.Init.Datatypes <> true constr
R73119:73122 Monad <> :monad_scope:'ret'_x not
R73136:73139 Coq.Init.Datatypes <> true constr
R73142:73146 Coq.Init.Datatypes <> false constr
R73151:73154 Monad <> :monad_scope:'ret'_x not
R73169:73173 Coq.Init.Datatypes <> false constr
R73176:73179 Coq.Init.Datatypes <> true constr
R73184:73187 Monad <> :monad_scope:'ret'_x not
R73198:73202 Coq.Init.Datatypes <> false constr
R73205:73209 Coq.Init.Datatypes <> false constr
R73216:73220 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73226:73228 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73221:73223 X86Semantics X86_Decode not def
R73229:73232 Monad <> :monad_scope:'ret'_x not
def 73308:73314 X86_Decode conv_BT
R73325:73328 Coq.Init.Datatypes <> bool ind
R73340:73343 Coq.Init.Datatypes <> bool ind
R73356:73361 X86Syntax <> prefix rec
R73371:73377 X86Syntax <> operand ind
R73389:73395 X86Syntax <> operand ind
R73592:73598 Monad <> :monad_scope:x_';;'_x not
R73579:73588 X86Semantics X86_Decode undef_flag def
R73590:73591 X86Semantics X86_MACHINE OF constr
R73612:73618 Monad <> :monad_scope:x_';;'_x not
R73599:73608 X86Semantics X86_Decode undef_flag def
R73610:73611 X86Semantics X86_MACHINE SF constr
R73632:73638 Monad <> :monad_scope:x_';;'_x not
R73619:73628 X86Semantics X86_Decode undef_flag def
R73630:73631 X86Semantics X86_MACHINE AF constr
R73652:73658 Monad <> :monad_scope:x_';;'_x not
R73639:73648 X86Semantics X86_Decode undef_flag def
R73650:73651 X86Semantics X86_MACHINE PF constr
R73661:73664 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73676:73681 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73687:73690 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73729:73734 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73691:73696 X86Semantics X86_Decode load_Z def
R73724:73726 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R73704:73718 Coq.ZArith.BinInt <> Z_of_nat def
R73744:73755 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73868:73881 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73785:73790 X86Syntax <> Imm_op constr
R73808:73812 X86Semantics X86_Decode arith def
R73814:73820 X86Semantics X86_RTL modu_op constr
R73847:73853 X86Semantics X86_Decode copy_ps def
R73893:73896 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73943:73948 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73897:73902 X86Semantics X86_Decode load_Z def
R73912:73912 Coq.ZArith.Zdiv <> :Z_scope:x_'/'_x not
R73939:73940 Coq.ZArith.Zdiv <> :Z_scope:x_'/'_x not
R73913:73927 Coq.ZArith.BinInt <> Z_of_nat def
R73934:73936 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R73904:73909 RTL <> size32 def
R73954:73957 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73971:73976 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73958:73963 X86Semantics X86_Decode load_Z def
R73982:73985 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74006:74107 Monad <> :monad_scope:x_'<-'_x_';'_x not
R73986:73991 X86Semantics X86_Decode load_Z def
R73993:73998 RTL <> size32 def
R75374:75379 X86Syntax <> Imm_op constr
R75386:75390 X86Semantics X86_Decode :monad_scope:'emit'_x not
R75391:75399 X86Semantics X86_RTL error_rtl constr
R75409:75414 X86Syntax <> Reg_op constr
R75435:75438 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75455:75464 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75445:75450 X86Syntax <> Reg_op constr
R75474:75477 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75507:75516 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75478:75482 X86Semantics X86_Decode arith def
R75484:75490 X86Semantics X86_RTL modu_op constr
R75519:75522 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75546:75555 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75523:75529 X86Semantics X86_Decode get_Bit def
R75570:75580 Monad <> :monad_scope:x_';;'_x not
R75556:75563 X86Semantics X86_Decode set_flag def
R75565:75566 X86Semantics X86_MACHINE CF constr
R75586:75589 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75611:75620 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75590:75593 X86Semantics X86_Decode fbit def
R75621:75627 X86Semantics X86_Decode set_Bit def
R75633:75636 Coq.Init.Datatypes <> true constr
R75666:75675 X86Syntax <> Address_op constr
R75697:75700 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75715:75724 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75701:75712 X86Semantics X86_Decode compute_addr def
R75746:75754 X86Syntax <> Offset_op constr
R75779:75782 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75796:75805 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75783:75790 X86Semantics X86_Decode load_int def
R74146:74149 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74179:74188 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74150:74154 X86Semantics X86_Decode arith def
R74156:74162 X86Semantics X86_RTL mods_op constr
R74200:74203 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74233:74286 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74204:74208 X86Semantics X86_Decode arith def
R74210:74216 X86Semantics X86_RTL divs_op constr
R74297:74300 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74326:74489 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74301:74306 X86Semantics X86_Decode cast_s def
R74308:74313 RTL <> size32 def
R74495:74498 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74525:74614 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74499:74502 X86Semantics X86_Decode test def
R74504:74508 X86Semantics X86_RTL lt_op constr
R74625:74628 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74646:74655 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74629:74635 X86Semantics X86_Decode copy_ps def
R74667:74670 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74689:74787 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74671:74677 X86Semantics X86_Decode copy_ps def
R74800:74803 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74832:74841 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74804:74808 X86Semantics X86_Decode arith def
R74810:74815 X86Semantics X86_RTL add_op constr
R74855:74858 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74888:74897 Monad <> :monad_scope:x_'<-'_x_';'_x not
R74859:74863 X86Semantics X86_Decode arith def
R74865:74870 X86Semantics X86_RTL add_op constr
R74954:74964 Monad <> :monad_scope:x_';;'_x not
R74898:74903 X86Semantics X86_Decode :monad_scope:'emit'_x not
R74953:74953 X86Semantics X86_Decode :monad_scope:'emit'_x not
R74904:74909 X86Semantics X86_RTL if_rtl constr
R74918:74927 X86Semantics X86_RTL cast_u_rtl constr
R75023:75033 Monad <> :monad_scope:x_';;'_x not
R74965:74970 X86Semantics X86_Decode :monad_scope:'emit'_x not
R75022:75022 X86Semantics X86_Decode :monad_scope:'emit'_x not
R74971:74976 X86Semantics X86_RTL if_rtl constr
R74985:74994 X86Semantics X86_RTL cast_u_rtl constr
R75046:75049 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75086:75095 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75050:75054 X86Semantics X86_Decode arith def
R75056:75061 X86Semantics X86_RTL mul_op constr
R75103:75106 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75139:75157 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75107:75111 X86Semantics X86_Decode arith def
R75113:75118 X86Semantics X86_RTL add_op constr
R75163:75166 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75179:75188 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75191:75194 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75219:75228 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75195:75201 X86Semantics X86_Decode get_Bit def
R75243:75253 Monad <> :monad_scope:x_';;'_x not
R75229:75236 X86Semantics X86_Decode set_flag def
R75238:75239 X86Semantics X86_MACHINE CF constr
R75259:75262 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75284:75293 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75263:75266 X86Semantics X86_Decode fbit def
R75294:75304 X86Semantics X86_Decode set_Bit_mem def
R75310:75313 Coq.Init.Datatypes <> true constr
R73542:73547 X86Semantics X86_Decode opsize def
R73567:73570 Coq.Init.Datatypes <> true constr
R73550:73560 X86Syntax <> op_override proj
R73501:73508 X86Semantics X86_Decode load_mem def
R73514:73517 Coq.Init.Datatypes <> true constr
R73461:73467 X86Semantics X86_Decode load_op def
R73473:73476 Coq.Init.Datatypes <> true constr
R73416:73429 X86Semantics X86_Decode get_segment_op def
R73435:73436 X86Syntax <> DS constr
def 75847:75856 X86_Decode conv_BSWAP
R75864:75869 X86Syntax <> prefix rec
R75876:75883 X86Syntax <> register ind
R75937:75940 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75956:75963 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75941:75946 X86Semantics X86_Decode load_Z def
R75948:75953 RTL <> size32 def
R75967:75970 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75981:75988 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75971:75978 X86Semantics X86_Decode load_reg def
R75991:75994 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76011:76019 Monad <> :monad_scope:x_'<-'_x_';'_x not
R75995:76000 X86Semantics X86_Decode cast_u def
R76002:76006 RTL <> size8 def
R76023:76026 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76050:76057 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76027:76031 X86Semantics X86_Decode arith def
R76033:76039 X86Semantics X86_RTL shru_op constr
R76060:76063 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76080:76087 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76064:76069 X86Semantics X86_Decode cast_u def
R76071:76075 RTL <> size8 def
R76090:76093 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76110:76118 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76094:76099 X86Semantics X86_Decode cast_u def
R76101:76106 RTL <> size32 def
R76122:76125 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76149:76156 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76126:76130 X86Semantics X86_Decode arith def
R76132:76138 X86Semantics X86_RTL shru_op constr
R76159:76162 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76179:76186 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76163:76168 X86Semantics X86_Decode cast_u def
R76170:76174 RTL <> size8 def
R76189:76192 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76209:76217 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76193:76198 X86Semantics X86_Decode cast_u def
R76200:76205 RTL <> size32 def
R76221:76224 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76248:76255 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76225:76229 X86Semantics X86_Decode arith def
R76231:76237 X86Semantics X86_RTL shru_op constr
R76258:76261 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76278:76285 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76262:76267 X86Semantics X86_Decode cast_u def
R76269:76273 RTL <> size8 def
R76288:76291 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76308:76316 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76292:76297 X86Semantics X86_Decode cast_u def
R76299:76304 RTL <> size32 def
R76321:76324 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76341:76348 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76325:76330 X86Semantics X86_Decode cast_u def
R76332:76337 RTL <> size32 def
R76353:76356 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76380:76387 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76357:76361 X86Semantics X86_Decode arith def
R76363:76368 X86Semantics X86_RTL shl_op constr
R76392:76395 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76416:76423 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76396:76400 X86Semantics X86_Decode arith def
R76402:76407 X86Semantics X86_RTL add_op constr
R76428:76431 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76455:76462 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76432:76436 X86Semantics X86_Decode arith def
R76438:76443 X86Semantics X86_RTL shl_op constr
R76467:76470 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76491:76498 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76471:76475 X86Semantics X86_Decode arith def
R76477:76482 X86Semantics X86_RTL add_op constr
R76503:76506 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76530:76537 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76507:76511 X86Semantics X86_Decode arith def
R76513:76518 X86Semantics X86_RTL shl_op constr
R76542:76545 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76566:76573 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76546:76550 X86Semantics X86_Decode arith def
R76552:76557 X86Semantics X86_RTL add_op constr
R76574:76580 X86Semantics X86_Decode set_reg def
R75904:75914 X86Semantics X86_Decode get_segment def
R75920:75921 X86Syntax <> DS constr
def 76604:76612 X86_Decode conv_CWDE
R76620:76625 X86Syntax <> prefix rec
R76680:76690 X86Syntax <> op_override proj
R76711:76714 Coq.Init.Datatypes <> true constr
R76722:76725 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76752:76772 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76726:76734 X86Semantics X86_Decode iload_op8 def
R76741:76746 X86Syntax <> Reg_op constr
R76748:76750 X86Syntax <> EAX constr
R76775:76778 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76795:76815 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76779:76784 X86Semantics X86_Decode cast_s def
R76786:76791 RTL <> size16 def
R76816:76824 X86Semantics X86_Decode iset_op16 def
R76834:76839 X86Syntax <> Reg_op constr
R76841:76843 X86Syntax <> EAX constr
R76856:76860 Coq.Init.Datatypes <> false constr
R76867:76870 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76898:76918 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76871:76880 X86Semantics X86_Decode iload_op16 def
R76887:76892 X86Syntax <> Reg_op constr
R76894:76896 X86Syntax <> EAX constr
R76921:76924 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76941:76961 Monad <> :monad_scope:x_'<-'_x_';'_x not
R76925:76930 X86Semantics X86_Decode cast_s def
R76932:76937 RTL <> size32 def
R76962:76970 X86Semantics X86_Decode iset_op32 def
R76980:76985 X86Syntax <> Reg_op constr
R76987:76989 X86Syntax <> EAX constr
R76646:76656 X86Semantics X86_Decode get_segment def
R76662:76663 X86Syntax <> DS constr
def 77017:77024 X86_Decode conv_CDQ
R77032:77037 X86Syntax <> prefix rec
R77092:77102 X86Syntax <> op_override proj
R77123:77126 Coq.Init.Datatypes <> true constr
R77134:77137 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77165:77185 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77138:77147 X86Semantics X86_Decode iload_op16 def
R77154:77159 X86Syntax <> Reg_op constr
R77161:77163 X86Syntax <> EAX constr
R77188:77191 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77208:77228 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77192:77197 X86Semantics X86_Decode cast_s def
R77199:77204 RTL <> size32 def
R77238:77241 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77258:77278 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77242:77247 X86Semantics X86_Decode cast_s def
R77249:77254 RTL <> size16 def
R77286:77289 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77301:77321 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77290:77295 X86Semantics X86_Decode load_Z def
R77329:77332 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77356:77376 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77333:77337 X86Semantics X86_Decode arith def
R77339:77344 X86Semantics X86_RTL shr_op constr
R77383:77386 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77408:77428 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77387:77392 X86Semantics X86_Decode cast_s def
R77394:77399 RTL <> size16 def
R77465:77486 Monad <> :monad_scope:x_';;'_x not
R77429:77437 X86Semantics X86_Decode iset_op16 def
R77454:77459 X86Syntax <> Reg_op constr
R77461:77463 X86Syntax <> EAX constr
R77487:77495 X86Semantics X86_Decode iset_op16 def
R77509:77514 X86Syntax <> Reg_op constr
R77516:77518 X86Syntax <> EDX constr
R77531:77535 Coq.Init.Datatypes <> false constr
R77543:77546 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77574:77594 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77547:77556 X86Semantics X86_Decode iload_op32 def
R77563:77568 X86Syntax <> Reg_op constr
R77570:77572 X86Syntax <> EAX constr
R77597:77600 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77613:77633 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77601:77606 X86Semantics X86_Decode cast_s def
R77643:77646 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77663:77683 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77647:77652 X86Semantics X86_Decode cast_s def
R77654:77659 RTL <> size32 def
R77693:77696 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77708:77728 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77697:77702 X86Semantics X86_Decode load_Z def
R77736:77739 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77765:77785 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77740:77744 X86Semantics X86_Decode arith def
R77746:77751 X86Semantics X86_RTL shr_op constr
R77792:77795 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77817:77837 Monad <> :monad_scope:x_'<-'_x_';'_x not
R77796:77801 X86Semantics X86_Decode cast_s def
R77803:77808 RTL <> size32 def
R77874:77895 Monad <> :monad_scope:x_';;'_x not
R77838:77846 X86Semantics X86_Decode iset_op32 def
R77863:77868 X86Syntax <> Reg_op constr
R77870:77872 X86Syntax <> EAX constr
R77896:77904 X86Semantics X86_Decode iset_op32 def
R77918:77923 X86Syntax <> Reg_op constr
R77925:77927 X86Syntax <> EDX constr
R77058:77068 X86Semantics X86_Decode get_segment def
R77074:77075 X86Syntax <> DS constr
def 77966:77973 X86_Decode conv_MOV
R77981:77986 X86Syntax <> prefix rec
R77993:77996 Coq.Init.Datatypes <> bool ind
R78009:78015 X86Syntax <> operand ind
R78020:78023 X86Semantics X86_Decode Conv def
R78025:78028 Coq.Init.Datatypes <> unit ind
R78159:78162 Monad <> :monad_scope:x_'<-'_x_';'_x not
R78175:78184 Monad <> :monad_scope:x_'<-'_x_';'_x not
R78114:78128 X86Semantics X86_Decode get_segment_op2 def
R78134:78135 X86Syntax <> DS constr
R78082:78087 X86Semantics X86_Decode set_op def
R78049:78055 X86Semantics X86_Decode load_op def
def 78372:78380 X86_Decode conv_CMOV
R78388:78393 X86Syntax <> prefix rec
R78400:78403 Coq.Init.Datatypes <> bool ind
R78411:78424 X86Syntax <> condition_type ind
R78437:78443 X86Syntax <> operand ind
R78448:78451 X86Semantics X86_Decode Conv def
R78453:78456 Coq.Init.Datatypes <> unit ind
R78587:78590 Monad <> :monad_scope:x_'<-'_x_';'_x not
R78603:78612 Monad <> :monad_scope:x_'<-'_x_';'_x not
R78616:78619 Monad <> :monad_scope:x_'<-'_x_';'_x not
R78632:78641 Monad <> :monad_scope:x_'<-'_x_';'_x not
R78644:78647 Monad <> :monad_scope:x_'<-'_x_';'_x not
R78661:78670 Monad <> :monad_scope:x_'<-'_x_';'_x not
R78648:78657 X86Semantics X86_Decode compute_cc def
R78708:78718 Monad <> :monad_scope:x_';;'_x not
R78671:78676 X86Semantics X86_Decode :monad_scope:'emit'_x not
R78707:78707 X86Semantics X86_Decode :monad_scope:'emit'_x not
R78677:78682 X86Semantics X86_RTL if_rtl constr
R78688:78697 X86Semantics X86_RTL cast_u_rtl constr
R78542:78556 X86Semantics X86_Decode get_segment_op2 def
R78562:78563 X86Syntax <> DS constr
R78510:78515 X86Semantics X86_Decode set_op def
R78477:78483 X86Semantics X86_Decode load_op def
def 78750:78764 X86_Decode conv_MOV_extend
R78819:78822 X86Semantics X86_Decode Conv def
R78825:78834 X86Semantics X86_RTL pseudo_reg ind
R78797:78806 X86Semantics X86_RTL pseudo_reg ind
R78792:78794 Coq.Init.Datatypes <> nat ind
R78792:78794 Coq.Init.Datatypes <> nat ind
R78847:78852 X86Syntax <> prefix rec
R78859:78862 Coq.Init.Datatypes <> bool ind
R78875:78881 X86Syntax <> operand ind
R78886:78889 X86Semantics X86_Decode Conv def
R78891:78894 Coq.Init.Datatypes <> unit ind
R78958:78968 X86Syntax <> op_override proj
R79236:79239 Coq.Init.Datatypes <> true constr
R79242:79245 Coq.Init.Datatypes <> true constr
R79253:79256 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79275:79299 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79257:79266 X86Semantics X86_Decode iload_op16 def
R79300:79308 X86Semantics X86_Decode iset_op16 def
R79329:79333 Coq.Init.Datatypes <> false constr
R79336:79339 Coq.Init.Datatypes <> true constr
R79346:79349 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79368:79392 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79350:79359 X86Semantics X86_Decode iload_op16 def
R79395:79398 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79415:79439 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79440:79448 X86Semantics X86_Decode iset_op32 def
R79469:79472 Coq.Init.Datatypes <> true constr
R79475:79479 Coq.Init.Datatypes <> false constr
R79486:79489 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79507:79531 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79490:79498 X86Semantics X86_Decode iload_op8 def
R79534:79537 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79554:79578 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79579:79587 X86Semantics X86_Decode iset_op16 def
R79608:79612 Coq.Init.Datatypes <> false constr
R79615:79619 Coq.Init.Datatypes <> false constr
R79626:79629 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79647:79672 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79630:79638 X86Semantics X86_Decode iload_op8 def
R79675:79678 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79695:79720 Monad <> :monad_scope:x_'<-'_x_';'_x not
R79721:79729 X86Semantics X86_Decode iset_op32 def
R78914:78928 X86Semantics X86_Decode get_segment_op2 def
R78934:78935 X86Syntax <> DS constr
def 79765:79774 X86_Decode conv_MOVZX
R79793:79807 X86Semantics X86_Decode conv_MOV_extend def
R79809:79814 X86Semantics X86_Decode cast_u def
def 79844:79853 X86_Decode conv_MOVSX
R79872:79886 X86Semantics X86_Decode conv_MOV_extend def
R79888:79893 X86Semantics X86_Decode cast_s def
def 79924:79932 X86_Decode conv_XCHG
R79940:79945 X86Syntax <> prefix rec
R79952:79955 Coq.Init.Datatypes <> bool ind
R79968:79974 X86Syntax <> operand ind
R79979:79982 X86Semantics X86_Decode Conv def
R79984:79987 Coq.Init.Datatypes <> unit ind
R80115:80118 Monad <> :monad_scope:x_'<-'_x_';'_x not
R80131:80140 Monad <> :monad_scope:x_'<-'_x_';'_x not
R80143:80146 Monad <> :monad_scope:x_'<-'_x_';'_x not
R80159:80168 Monad <> :monad_scope:x_'<-'_x_';'_x not
R80183:80193 Monad <> :monad_scope:x_';;'_x not
R80071:80085 X86Semantics X86_Decode get_segment_op2 def
R80091:80092 X86Syntax <> DS constr
R80040:80045 X86Semantics X86_Decode set_op def
R80008:80014 X86Semantics X86_Decode load_op def
def 80224:80232 X86_Decode conv_XADD
R80240:80245 X86Syntax <> prefix rec
R80252:80255 Coq.Init.Datatypes <> bool ind
R80268:80274 X86Syntax <> operand ind
R80279:80282 X86Semantics X86_Decode Conv def
R80284:80287 Coq.Init.Datatypes <> unit ind
R80319:80325 Monad <> :monad_scope:x_';;'_x not
R80296:80304 X86Semantics X86_Decode conv_XCHG def
R80326:80333 X86Semantics X86_Decode conv_ADD def
def 80480:80491 X86_Decode conv_CMPXCHG
R80499:80504 X86Syntax <> prefix rec
R80511:80514 Coq.Init.Datatypes <> bool ind
R80527:80533 X86Syntax <> operand ind
R80538:80541 X86Semantics X86_Decode Conv def
R80543:80546 Coq.Init.Datatypes <> unit ind
R80655:80661 Monad <> :monad_scope:x_';;'_x not
R80624:80631 X86Semantics X86_Decode conv_CMP def
R80640:80645 X86Syntax <> Reg_op constr
R80647:80649 X86Syntax <> EAX constr
R80692:80698 Monad <> :monad_scope:x_';;'_x not
R80662:80670 X86Semantics X86_Decode conv_CMOV def
R80679:80682 X86Syntax <> E_ct constr
R80699:80707 X86Semantics X86_Decode conv_CMOV def
R80724:80729 X86Syntax <> Reg_op constr
R80731:80733 X86Syntax <> EAX constr
R80716:80720 X86Syntax <> NE_ct constr
def 80884:80902 X86_Decode string_op_reg_shift
R80916:80919 X86Semantics X86_Decode Conv def
R80921:80924 Coq.Init.Datatypes <> unit ind
R80939:80942 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81147:81152 Monad <> :monad_scope:x_'<-'_x_';'_x not
R80943:80948 X86Semantics X86_Decode load_Z def
R80980:80990 X86Syntax <> op_override proj
R81031:81035 Coq.Init.Datatypes <> false constr
R81066:81069 Coq.Init.Datatypes <> true constr
R81072:81075 Coq.Init.Datatypes <> true constr
R81106:81110 Coq.Init.Datatypes <> false constr
R81113:81116 Coq.Init.Datatypes <> true constr
R81155:81158 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81170:81175 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81159:81166 X86Semantics X86_Decode get_flag def
R81168:81169 X86Semantics X86_MACHINE DF constr
R81183:81186 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81213:81218 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81187:81196 X86Semantics X86_Decode iload_op32 def
R81202:81207 X86Syntax <> Reg_op constr
R81198:81199 X86Syntax <> DS constr
R81227:81230 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81258:81263 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81231:81235 X86Semantics X86_Decode arith def
R81237:81242 X86Semantics X86_RTL add_op constr
R81272:81275 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81303:81308 Monad <> :monad_scope:x_'<-'_x_';'_x not
R81276:81280 X86Semantics X86_Decode arith def
R81282:81287 X86Semantics X86_RTL sub_op constr
R81348:81354 Monad <> :monad_scope:x_';;'_x not
R81309:81313 X86Semantics X86_Decode :monad_scope:'emit'_x not
R81314:81324 X86Semantics X86_RTL set_loc_rtl constr
R81336:81342 X86Semantics X86_MACHINE reg_loc constr
R81355:81359 X86Semantics X86_Decode :monad_scope:'emit'_x not
R81360:81365 X86Semantics X86_RTL if_rtl constr
R81371:81381 X86Semantics X86_RTL set_loc_rtl constr
R81393:81399 X86Semantics X86_MACHINE reg_loc constr
def 82256:82264 X86_Decode conv_MOVS
R82274:82277 X86Semantics X86_Decode Conv def
R82279:82282 Coq.Init.Datatypes <> unit ind
R82502:82505 Monad <> :monad_scope:x_'<-'_x_';'_x not
R82570:82575 Monad <> :monad_scope:x_'<-'_x_';'_x not
R82521:82530 X86Syntax <> Address_op constr
R82533:82541 X86Syntax <> mkAddress constr
R82564:82567 Coq.Init.Datatypes <> None constr
R82554:82557 Coq.Init.Datatypes <> Some constr
R82559:82561 X86Syntax <> ESI constr
R82543:82551 Bits Word zero def
R82636:82642 Monad <> :monad_scope:x_';;'_x not
R82587:82596 X86Syntax <> Address_op constr
R82599:82607 X86Syntax <> mkAddress constr
R82630:82633 Coq.Init.Datatypes <> None constr
R82620:82623 Coq.Init.Datatypes <> Some constr
R82625:82627 X86Syntax <> EDI constr
R82609:82617 Bits Word zero def
R82580:82581 X86Syntax <> ES constr
R82672:82678 Monad <> :monad_scope:x_';;'_x not
R82643:82661 X86Semantics X86_Decode string_op_reg_shift def
R82663:82665 X86Syntax <> EDI constr
R82679:82697 X86Semantics X86_Decode string_op_reg_shift def
R82699:82701 X86Syntax <> ESI constr
R82473:82483 X86Semantics X86_Decode get_segment def
R82489:82490 X86Syntax <> DS constr
R82336:82341 X86Semantics X86_Decode set_op def
R82303:82309 X86Semantics X86_Decode load_op def
def 82724:82732 X86_Decode conv_STOS
R82742:82745 X86Semantics X86_Decode Conv def
R82747:82750 Coq.Init.Datatypes <> unit ind
R82827:82830 Monad <> :monad_scope:x_'<-'_x_';'_x not
R82851:82856 Monad <> :monad_scope:x_'<-'_x_';'_x not
R82840:82845 X86Syntax <> Reg_op constr
R82847:82849 X86Syntax <> EAX constr
R82836:82837 X86Syntax <> DS constr
R82917:82923 Monad <> :monad_scope:x_';;'_x not
R82868:82877 X86Syntax <> Address_op constr
R82880:82888 X86Syntax <> mkAddress constr
R82911:82914 Coq.Init.Datatypes <> None constr
R82901:82904 Coq.Init.Datatypes <> Some constr
R82906:82908 X86Syntax <> EDI constr
R82890:82898 Bits Word zero def
R82861:82862 X86Syntax <> ES constr
R82924:82942 X86Semantics X86_Decode string_op_reg_shift def
R82944:82946 X86Syntax <> EDI constr
R82804:82809 X86Semantics X86_Decode set_op def
R82771:82777 X86Semantics X86_Decode load_op def
def 82969:82977 X86_Decode conv_CMPS
R82987:82990 X86Semantics X86_Decode Conv def
R82992:82995 Coq.Init.Datatypes <> unit ind
R83245:83251 Monad <> :monad_scope:x_';;'_x not
R83181:83200 X86Semantics X86_Decode conv_SUB_CMP_generic def
R83243:83244 X86Syntax <> ES constr
R83202:83206 Coq.Init.Datatypes <> false constr
R83281:83287 Monad <> :monad_scope:x_';;'_x not
R83252:83270 X86Semantics X86_Decode string_op_reg_shift def
R83272:83274 X86Syntax <> EDI constr
R83288:83306 X86Semantics X86_Decode string_op_reg_shift def
R83308:83310 X86Syntax <> ESI constr
R83124:83133 X86Syntax <> Address_op constr
R83136:83144 X86Syntax <> mkAddress constr
R83167:83170 Coq.Init.Datatypes <> None constr
R83157:83160 Coq.Init.Datatypes <> Some constr
R83162:83164 X86Syntax <> EDI constr
R83146:83154 Bits Word zero def
R83055:83064 X86Syntax <> Address_op constr
R83067:83075 X86Syntax <> mkAddress constr
R83098:83101 Coq.Init.Datatypes <> None constr
R83088:83091 Coq.Init.Datatypes <> Some constr
R83093:83095 X86Syntax <> ESI constr
R83077:83085 Bits Word zero def
R83016:83026 X86Semantics X86_Decode get_segment def
R83032:83033 X86Syntax <> DS constr
def 83334:83341 X86_Decode conv_LEA
R83349:83354 X86Syntax <> prefix rec
R83367:83373 X86Syntax <> operand ind
R83454:83463 X86Syntax <> Address_op constr
R83481:83484 Monad <> :monad_scope:x_'<-'_x_';'_x not
R83499:83510 Monad <> :monad_scope:x_'<-'_x_';'_x not
R83485:83496 X86Semantics X86_Decode compute_addr def
R83511:83519 X86Semantics X86_Decode iset_op32 def
R83546:83550 X86Semantics X86_Decode :monad_scope:'emit'_x not
R83551:83559 X86Semantics X86_RTL error_rtl constr
R83394:83407 X86Semantics X86_Decode get_segment_op def
R83413:83414 X86Syntax <> DS constr
def 83586:83593 X86_Decode conv_HLT
R83600:83605 X86Syntax <> prefix rec
R83616:83620 X86Semantics X86_Decode :monad_scope:'emit'_x not
R83621:83633 X86Semantics X86_RTL safe_fail_rtl constr
def 83650:83659 X86_Decode conv_SETcc
R83667:83672 X86Syntax <> prefix rec
R83680:83693 X86Syntax <> condition_type ind
R83701:83707 X86Syntax <> operand ind
R83768:83771 Monad <> :monad_scope:x_'<-'_x_';'_x not
R83785:83792 Monad <> :monad_scope:x_'<-'_x_';'_x not
R83772:83781 X86Semantics X86_Decode compute_cc def
R83798:83801 Monad <> :monad_scope:x_'<-'_x_';'_x not
R83820:83827 Monad <> :monad_scope:x_'<-'_x_';'_x not
R83802:83807 X86Semantics X86_Decode cast_u def
R83809:83813 RTL <> size8 def
R83828:83835 X86Semantics X86_Decode iset_op8 def
R83729:83742 X86Semantics X86_Decode get_segment_op def
R83748:83749 X86Syntax <> DS constr
def 83987:83998 X86_Decode check_prefix
R84004:84009 X86Syntax <> prefix rec
R84042:84054 X86Syntax <> addr_override proj
R84027:84037 X86Syntax <> op_override proj
R84072:84076 Coq.Init.Datatypes <> false constr
R84079:84083 Coq.Init.Datatypes <> false constr
R84088:84091 Monad <> :monad_scope:'ret'_x not
R84092:84093 Coq.Init.Datatypes <> tt constr
R84104:84107 Coq.Init.Datatypes <> true constr
R84110:84114 Coq.Init.Datatypes <> false constr
R84119:84122 Monad <> :monad_scope:'ret'_x not
R84123:84124 Coq.Init.Datatypes <> tt constr
R84143:84147 X86Semantics X86_Decode :monad_scope:'emit'_x not
R84148:84156 X86Semantics X86_RTL error_rtl constr
def 85506:85517 X86_Decode instr_to_rtl
R85525:85530 X86Syntax <> prefix rec
R85537:85541 X86Syntax <> instr ind
R85551:85557 X86Semantics X86_Decode runConv def
R85581:85588 Monad <> :monad_scope:x_';;'_x not
R85565:85576 X86Semantics X86_Decode check_prefix def
R85613:85615 X86Syntax <> AND constr
R85630:85637 X86Semantics X86_Decode conv_AND def
R85664:85665 X86Syntax <> OR constr
R85680:85686 X86Semantics X86_Decode conv_OR def
R85713:85715 X86Syntax <> XOR constr
R85730:85737 X86Semantics X86_Decode conv_XOR def
R85764:85767 X86Syntax <> TEST constr
R85782:85790 X86Semantics X86_Decode conv_TEST def
R85817:85819 X86Syntax <> NOT constr
R85830:85837 X86Semantics X86_Decode conv_NOT def
R85860:85862 X86Syntax <> INC constr
R85873:85880 X86Semantics X86_Decode conv_INC def
R85903:85905 X86Syntax <> DEC constr
R85916:85923 X86Semantics X86_Decode conv_DEC def
R85946:85948 X86Syntax <> ADD constr
R85963:85970 X86Semantics X86_Decode conv_ADD def
R85997:85999 X86Syntax <> ADC constr
R86014:86021 X86Semantics X86_Decode conv_ADC def
R86048:86050 X86Syntax <> CMP constr
R86065:86072 X86Semantics X86_Decode conv_CMP def
R86099:86101 X86Syntax <> SUB constr
R86116:86123 X86Semantics X86_Decode conv_SUB def
R86150:86152 X86Syntax <> SBB constr
R86167:86174 X86Semantics X86_Decode conv_SBB def
R86201:86203 X86Syntax <> NEG constr
R86214:86221 X86Semantics X86_Decode conv_NEG def
R86245:86247 X86Syntax <> DIV constr
R86257:86264 X86Semantics X86_Decode conv_DIV def
R86286:86288 X86Syntax <> AAA constr
R86293:86304 X86Semantics X86_Decode conv_AAA_AAS def
R86306:86311 X86Semantics X86_RTL add_op constr
R86324:86326 X86Syntax <> AAS constr
R86331:86342 X86Semantics X86_Decode conv_AAA_AAS def
R86344:86349 X86Semantics X86_RTL sub_op constr
R86362:86364 X86Syntax <> AAD constr
R86369:86376 X86Semantics X86_Decode conv_AAD def
R86389:86391 X86Syntax <> AAM constr
R86396:86403 X86Semantics X86_Decode conv_AAM def
R86416:86418 X86Syntax <> DAA constr
R86423:86434 X86Semantics X86_Decode conv_DAA_DAS def
R86447:86458 X86Semantics X86_Decode testcarryAdd def
R86460:86464 RTL <> size8 def
R86437:86442 X86Semantics X86_RTL add_op constr
R86478:86480 X86Syntax <> DAS constr
R86485:86496 X86Semantics X86_Decode conv_DAA_DAS def
R86509:86520 X86Semantics X86_Decode testcarrySub def
R86522:86526 RTL <> size8 def
R86499:86504 X86Semantics X86_RTL sub_op constr
R86540:86542 X86Syntax <> HLT constr
R86547:86554 X86Semantics X86_Decode conv_HLT def
R86571:86574 X86Syntax <> IDIV constr
R86584:86592 X86Semantics X86_Decode conv_IDIV def
R86614:86617 X86Syntax <> IMUL constr
R86634:86642 X86Semantics X86_Decode conv_IMUL def
R86671:86673 X86Syntax <> MUL constr
R86684:86691 X86Semantics X86_Decode conv_MUL def
R86713:86715 X86Syntax <> SHL constr
R86730:86737 X86Semantics X86_Decode conv_SHL def
R86764:86766 X86Syntax <> SHR constr
R86781:86788 X86Semantics X86_Decode conv_SHR def
R86815:86818 X86Syntax <> SHLD constr
R86834:86842 X86Semantics X86_Decode conv_SHLD def
R86870:86873 X86Syntax <> SHRD constr
R86889:86897 X86Semantics X86_Decode conv_SHRD def
R86925:86927 X86Syntax <> SAR constr
R86942:86949 X86Semantics X86_Decode conv_SAR def
R86976:86978 X86Syntax <> BSR constr
R86991:86998 X86Semantics X86_Decode conv_BSR def
R87023:87025 X86Syntax <> BSF constr
R87038:87045 X86Semantics X86_Decode conv_BSF def
R87070:87071 X86Syntax <> BT constr
R87084:87090 X86Semantics X86_Decode conv_BT def
R87098:87101 Coq.Init.Datatypes <> true constr
R87092:87096 Coq.Init.Datatypes <> false constr
R87126:87128 X86Syntax <> BTC constr
R87141:87147 X86Semantics X86_Decode conv_BT def
R87155:87159 Coq.Init.Datatypes <> false constr
R87149:87153 Coq.Init.Datatypes <> false constr
R87184:87186 X86Syntax <> BTS constr
R87199:87205 X86Semantics X86_Decode conv_BT def
R87212:87215 Coq.Init.Datatypes <> true constr
R87207:87210 Coq.Init.Datatypes <> true constr
R87240:87242 X86Syntax <> BTR constr
R87255:87261 X86Semantics X86_Decode conv_BT def
R87268:87272 Coq.Init.Datatypes <> false constr
R87263:87266 Coq.Init.Datatypes <> true constr
R87297:87301 X86Syntax <> BSWAP constr
R87308:87317 X86Semantics X86_Decode conv_BSWAP def
R87336:87339 X86Syntax <> CWDE constr
R87344:87352 X86Semantics X86_Decode conv_CWDE def
R87369:87371 X86Syntax <> CDQ constr
R87376:87383 X86Semantics X86_Decode conv_CDQ def
R87400:87402 X86Syntax <> MOV constr
R87417:87424 X86Semantics X86_Decode conv_MOV def
R87452:87457 X86Syntax <> CMOVcc constr
R87473:87481 X86Semantics X86_Decode conv_CMOV def
R87487:87490 Coq.Init.Datatypes <> true constr
R87515:87519 X86Syntax <> MOVZX constr
R87534:87543 X86Semantics X86_Decode conv_MOVZX def
R87571:87575 X86Syntax <> MOVSX constr
R87590:87599 X86Semantics X86_Decode conv_MOVSX def
R87627:87630 X86Syntax <> XCHG constr
R87645:87653 X86Semantics X86_Decode conv_XCHG def
R87681:87684 X86Syntax <> XADD constr
R87699:87707 X86Semantics X86_Decode conv_XADD def
R87735:87737 X86Syntax <> CLC constr
R87742:87749 X86Semantics X86_Decode conv_CLC def
R87762:87764 X86Syntax <> CLD constr
R87769:87776 X86Semantics X86_Decode conv_CLD def
R87789:87791 X86Syntax <> STD constr
R87796:87803 X86Semantics X86_Decode conv_STD def
R87816:87818 X86Syntax <> STC constr
R87823:87830 X86Semantics X86_Decode conv_STC def
R87843:87846 X86Syntax <> MOVS constr
R87853:87861 X86Semantics X86_Decode conv_MOVS def
R87880:87886 X86Syntax <> CMPXCHG constr
R87901:87912 X86Semantics X86_Decode conv_CMPXCHG def
R87939:87942 X86Syntax <> CMPS constr
R87949:87957 X86Semantics X86_Decode conv_CMPS def
R87976:87979 X86Syntax <> STOS constr
R87986:87994 X86Semantics X86_Decode conv_STOS def
R88013:88015 X86Syntax <> LEA constr
R88028:88035 X86Semantics X86_Decode conv_LEA def
R88060:88064 X86Syntax <> SETcc constr
R88075:88084 X86Semantics X86_Decode conv_SETcc def
R88107:88110 X86Syntax <> CALL constr
R88132:88140 X86Semantics X86_Decode conv_CALL def
R88174:88178 X86Syntax <> LEAVE constr
R88183:88192 X86Semantics X86_Decode conv_LEAVE def
R88209:88211 X86Syntax <> POP constr
R88219:88226 X86Semantics X86_Decode conv_POP def
R88246:88249 X86Syntax <> POPA constr
R88254:88262 X86Semantics X86_Decode conv_POPA def
R88279:88282 X86Syntax <> PUSH constr
R88292:88300 X86Semantics X86_Decode conv_PUSH def
R88322:88326 X86Syntax <> PUSHA constr
R88331:88340 X86Semantics X86_Decode conv_PUSHA def
R88357:88359 X86Syntax <> RET constr
R88372:88379 X86Semantics X86_Decode conv_RET def
R88404:88406 X86Syntax <> ROL constr
R88421:88428 X86Semantics X86_Decode conv_ROL def
R88455:88457 X86Syntax <> ROR constr
R88472:88479 X86Semantics X86_Decode conv_ROR def
R88506:88508 X86Syntax <> RCL constr
R88523:88530 X86Semantics X86_Decode conv_RCL def
R88559:88561 X86Syntax <> RCR constr
R88576:88583 X86Semantics X86_Decode conv_RCR def
R88612:88615 X86Syntax <> LAHF constr
R88620:88628 X86Semantics X86_Decode conv_LAHF def
R88641:88644 X86Syntax <> SAHF constr
R88649:88657 X86Semantics X86_Decode conv_SAHF def
R88670:88672 X86Syntax <> CMC constr
R88677:88684 X86Semantics X86_Decode conv_CMC def
R88697:88699 X86Syntax <> JMP constr
R88721:88728 X86Semantics X86_Decode conv_JMP def
R88762:88764 X86Syntax <> Jcc constr
R88777:88784 X86Semantics X86_Decode conv_Jcc def
R88810:88813 X86Syntax <> LOOP constr
R88823:88831 X86Semantics X86_Decode conv_LOOP def
R88843:88847 Coq.Init.Datatypes <> false constr
R88837:88841 Coq.Init.Datatypes <> false constr
R88865:88869 X86Syntax <> LOOPZ constr
R88879:88887 X86Semantics X86_Decode conv_LOOP def
R88898:88901 Coq.Init.Datatypes <> true constr
R88893:88896 Coq.Init.Datatypes <> true constr
R88919:88924 X86Syntax <> LOOPNZ constr
R88934:88942 X86Semantics X86_Decode conv_LOOP def
R88953:88957 Coq.Init.Datatypes <> false constr
R88948:88951 Coq.Init.Datatypes <> true constr
R88975:88977 X86Syntax <> NOP constr
R88984:88987 Monad <> :monad_scope:'ret'_x not
R88988:88989 Coq.Init.Datatypes <> tt constr
R89007:89011 X86Semantics X86_Decode :monad_scope:'emit'_x not
R89012:89020 X86Semantics X86_RTL error_rtl constr
R89043:89052 X86Semantics <> <> mod
def 89179:89191 <> in_seg_bounds
R89197:89212 X86Syntax <> segment_register ind
R89220:89224 Bits <> int32 def
R89229:89231 X86Semantics X86_RTL RTL def
R89233:89236 Coq.Init.Datatypes <> bool ind
R89252:89255 Monad <> :monad_scope:x_'<-'_x_';'_x not
R89285:89288 Monad <> :monad_scope:x_'<-'_x_';'_x not
R89256:89262 X86Semantics X86_RTL get_loc def
R89265:89281 X86Semantics X86_MACHINE seg_reg_limit_loc constr
R89289:89293 Monad <> :monad_scope:'ret'_x not
R89316:89316 Monad <> :monad_scope:'ret'_x not
R89294:89302 Bits Word lequ def
def 89331:89347 <> in_seg_bounds_rng
R89353:89368 X86Syntax <> segment_register ind
R89376:89380 Bits <> int32 def
R89395:89399 Bits <> int32 def
R89404:89406 X86Semantics X86_RTL RTL def
R89408:89411 Coq.Init.Datatypes <> bool ind
R89427:89430 Monad <> :monad_scope:x_'<-'_x_';'_x not
R89460:89463 Monad <> :monad_scope:x_'<-'_x_';'_x not
R89431:89437 X86Semantics X86_RTL get_loc def
R89440:89456 X86Semantics X86_MACHINE seg_reg_limit_loc constr
R89498:89502 Monad <> :monad_scope:'ret'_x not
R89562:89562 Monad <> :monad_scope:'ret'_x not
R89503:89506 Coq.Init.Datatypes <> andb def
R89539:89547 Bits Word lequ def
R89509:89517 Bits Word lequ def
R89474:89481 Bits Word add def
def 89630:89636 <> fetch_n
R89641:89643 Coq.Init.Datatypes <> nat ind
R89651:89655 Bits <> int32 def
R89661:89669 X86Semantics X86_RTL rtl_state rec
R89674:89677 Coq.Init.Datatypes <> list ind
R89679:89682 Bits <> int8 def
R89719:89721 Coq.Init.Datatypes <> nil constr
R89729:89729 Coq.Init.Datatypes <> S constr
R89773:89785 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R89743:89753 X86Semantics X86_RTL.AddrMap get def
R89760:89769 X86Semantics X86_RTL rtl_memory proj
R89786:89792 X86Semantics <> fetch_n def
R89797:89804 Bits Word add def
R89811:89819 Bits Word repr def
def 90498:90512 <> parse_instr_aux
R90519:90521 Coq.Init.Datatypes <> nat ind
R90529:90533 Bits <> int32 def
R90541:90548 Coq.NArith.BinPos <> positive ind
R90555:90587 Decode X86_PARSER instParserState rec
R90595:90597 X86Semantics X86_RTL RTL def
R90600:90600 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R90615:90618 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R90607:90609 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R90601:90606 X86Syntax <> prefix rec
R90610:90614 X86Syntax <> instr ind
R90619:90626 Coq.NArith.BinPos <> positive ind
R90664:90667 X86Semantics X86_RTL Fail def
R90678:90678 Coq.Init.Datatypes <> S constr
R90686:90689 Monad <> :monad_scope:x_'<-'_x_';'_x not
R90702:90718 Monad <> :monad_scope:x_'<-'_x_';'_x not
R90690:90697 X86Semantics X86_RTL get_byte def
R90725:90752 Decode X86_PARSER parse_byte def
R90782:90782 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R90786:90787 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R90791:90791 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R90788:90790 Coq.Init.Datatypes <> nil constr
R90814:90828 X86Semantics <> parse_instr_aux def
R90865:90867 Coq.NArith.BinPos <> :positive_scope:x_'+'_x not
R90833:90840 Bits Word add def
R90847:90855 Bits Word repr def
R90892:90892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R90894:90895 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R90900:90900 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R90897:90898 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R90905:90908 Monad <> :monad_scope:'ret'_x not
R90909:90909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R90911:90911 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R90915:90915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 90953:90963 <> parse_instr
R90969:90973 Bits <> int32 def
R90978:90980 X86Semantics X86_RTL RTL def
R90983:90983 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R90998:91001 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R90990:90992 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R90984:90989 X86Syntax <> prefix rec
R90993:90997 X86Syntax <> instr ind
R91002:91009 Coq.NArith.BinPos <> positive ind
R91026:91029 Monad <> :monad_scope:x_'<-'_x_';'_x not
R91060:91088 Monad <> :monad_scope:x_'<-'_x_';'_x not
R91030:91036 X86Semantics X86_RTL get_loc def
R91039:91055 X86Semantics X86_MACHINE seg_reg_start_loc constr
R91057:91058 X86Syntax <> CS constr
R91133:91147 X86Semantics <> parse_instr_aux def
R91162:91199 Decode X86_PARSER initial_parser_state def
R91104:91111 Bits Word add def
def 91560:91576 <> fetch_instruction
R91582:91586 Bits <> int32 def
R91591:91593 X86Semantics X86_RTL RTL def
R91596:91596 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R91611:91614 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R91603:91605 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R91597:91602 X86Syntax <> prefix rec
R91606:91610 X86Syntax <> instr ind
R91615:91622 Coq.NArith.BinPos <> positive ind
R91630:91630 Monad <> :monad_scope:'['_x_','_x_']'_'<-'_x_';'_x not
R91633:91634 Monad <> :monad_scope:'['_x_','_x_']'_'<-'_x_';'_x not
R91638:91642 Monad <> :monad_scope:'['_x_','_x_']'_'<-'_x_';'_x not
R91657:91660 Monad <> :monad_scope:'['_x_','_x_']'_'<-'_x_';'_x not
R91643:91653 X86Semantics <> parse_instr def
R91674:91677 Monad <> :monad_scope:x_'<-'_x_';'_x not
R91728:91731 Monad <> :monad_scope:x_'<-'_x_';'_x not
R91678:91694 X86Semantics <> in_seg_bounds_rng def
R91703:91711 Bits Word repr def
R91722:91724 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R91714:91717 Coq.ZArith.BinInt <> Zpos constr
R91696:91697 X86Syntax <> CS constr
R91776:91783 X86Semantics X86_RTL SafeFail def
R91756:91759 Monad <> :monad_scope:'ret'_x not
R91760:91760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91763:91763 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R91767:91767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 91798:91810 <> RTL_step_list
R91838:91840 Coq.Init.Datatypes <> nil constr
R91845:91848 Monad <> :monad_scope:'ret'_x not
R91849:91850 Coq.Init.Datatypes <> tt constr
R91859:91860 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R91879:91881 Monad <> :monad_scope:x_';;'_x not
R91867:91876 X86Semantics X86_RTL interp_rtl def
R91882:91894 X86Semantics <> RTL_step_list def
def 91918:91932 <> check_rep_instr
R91939:91943 X86Syntax <> instr ind
R91948:91950 X86Semantics X86_RTL RTL def
R91952:91955 Coq.Init.Datatypes <> unit ind
R91983:91986 X86Syntax <> MOVS constr
R91992:91995 X86Syntax <> STOS constr
R92001:92004 X86Syntax <> CMPS constr
R92011:92014 Monad <> :monad_scope:'ret'_x not
R92015:92016 Coq.Init.Datatypes <> tt constr
R92011:92014 Monad <> :monad_scope:'ret'_x not
R92015:92016 Coq.Init.Datatypes <> tt constr
R92011:92014 Monad <> :monad_scope:'ret'_x not
R92015:92016 Coq.Init.Datatypes <> tt constr
R92029:92032 X86Semantics X86_RTL Fail def
def 92055:92061 <> run_rep
R92071:92076 X86Syntax <> prefix rec
R92085:92089 X86Syntax <> instr ind
R92110:92114 Bits <> int32 def
R92119:92121 X86Semantics X86_RTL RTL def
R92123:92126 Coq.Init.Datatypes <> unit ind
R92153:92157 Monad <> :monad_scope:x_';;'_x not
R92134:92148 X86Semantics <> check_rep_instr def
R92161:92164 Monad <> :monad_scope:x_'<-'_x_';'_x not
R92186:92189 Monad <> :monad_scope:x_'<-'_x_';'_x not
R92165:92171 X86Semantics X86_RTL get_loc def
R92174:92180 X86Semantics X86_MACHINE reg_loc constr
R92182:92184 X86Syntax <> ECX constr
R92194:92200 Bits Word eq def
R92206:92214 Bits Word zero def
R92313:92321 Monad <> :monad_scope:x_';;'_x not
R92268:92274 X86Semantics X86_RTL set_loc def
R92291:92298 Bits Word sub def
R92304:92311 Bits Word one def
R92277:92283 X86Semantics X86_MACHINE reg_loc constr
R92285:92287 X86Syntax <> ECX constr
R92369:92377 Monad <> :monad_scope:x_';;'_x not
R92322:92334 X86Semantics <> RTL_step_list def
R92337:92359 X86Semantics X86_Decode instr_to_rtl def
R92382:92385 Monad <> :monad_scope:x_'<-'_x_';'_x not
R92407:92414 Monad <> :monad_scope:x_'<-'_x_';'_x not
R92386:92392 X86Semantics X86_RTL get_loc def
R92395:92401 X86Semantics X86_MACHINE reg_loc constr
R92403:92405 X86Syntax <> ECX constr
R92415:92415 Monad <> :monad_scope:x_';;'_x not
R92507:92584 Monad <> :monad_scope:x_';;'_x not
R92420:92426 Bits Word eq def
R92433:92441 Bits Word zero def
R92501:92504 Monad <> :monad_scope:'ret'_x not
R92505:92506 Coq.Init.Datatypes <> tt constr
R92458:92464 X86Semantics X86_RTL set_loc def
R92466:92471 X86Semantics X86_MACHINE pc_loc constr
R92610:92613 X86Syntax <> CMPS constr
R92632:92635 Monad <> :monad_scope:x_'<-'_x_';'_x not
R92657:92668 Monad <> :monad_scope:x_'<-'_x_';'_x not
R92636:92642 X86Semantics X86_RTL get_loc def
R92645:92652 X86Semantics X86_MACHINE flag_loc constr
R92654:92655 X86Semantics X86_MACHINE ZF constr
R92673:92679 Bits Word eq def
R92684:92692 Bits Word zero def
R92745:92748 Monad <> :monad_scope:'ret'_x not
R92749:92750 Coq.Init.Datatypes <> tt constr
R92700:92706 X86Semantics X86_RTL set_loc def
R92708:92713 X86Semantics X86_MACHINE pc_loc constr
R92767:92770 Monad <> :monad_scope:'ret'_x not
R92771:92772 Coq.Init.Datatypes <> tt constr
R92222:92228 X86Semantics X86_RTL set_loc def
R92230:92235 X86Semantics X86_MACHINE pc_loc constr
def 92797:92800 <> step
R92804:92806 X86Semantics X86_RTL RTL def
R92808:92811 Coq.Init.Datatypes <> unit ind
R92828:92832 Monad <> :monad_scope:x_';;'_x not
R92819:92827 X86Semantics X86_RTL flush_env def
R92835:92838 Monad <> :monad_scope:x_'<-'_x_';'_x not
R92853:93094 Monad <> :monad_scope:x_'<-'_x_';'_x not
R92839:92845 X86Semantics X86_RTL get_loc def
R92847:92852 X86Semantics X86_MACHINE pc_loc constr
R93107:93110 Monad <> :monad_scope:x_'<-'_x_';'_x not
R93130:93133 Monad <> :monad_scope:x_'<-'_x_';'_x not
R93111:93123 X86Semantics <> in_seg_bounds def
R93125:93126 X86Syntax <> CS constr
R93597:93604 X86Semantics X86_RTL SafeFail def
R93162:93162 Monad <> :monad_scope:'['_x_','_x_']'_'<-'_x_';'_x not
R93165:93165 Monad <> :monad_scope:'['_x_','_x_']'_'<-'_x_';'_x not
R93172:93176 Monad <> :monad_scope:'['_x_','_x_']'_'<-'_x_';'_x not
R93197:93204 Monad <> :monad_scope:'['_x_','_x_']'_'<-'_x_';'_x not
R93177:93193 X86Semantics <> fetch_instruction def
R93310:93317 X86Syntax <> lock_rep proj
R93338:93341 Coq.Init.Datatypes <> Some constr
R93343:93345 X86Syntax <> rep constr
R93405:93411 X86Semantics <> run_rep def
R93448:93451 Coq.Init.Datatypes <> None constr
R93485:93506 Monad <> :monad_scope:x_';;'_x not
R93456:93462 X86Semantics X86_RTL set_loc def
R93464:93469 X86Semantics X86_MACHINE pc_loc constr
R93507:93519 X86Semantics <> RTL_step_list def
R93522:93544 X86Semantics X86_Decode instr_to_rtl def
R93572:93575 X86Semantics X86_RTL Fail def
R93257:93264 Bits Word add def
R93270:93278 Bits Word repr def
R93281:93284 Coq.ZArith.BinInt <> Zpos constr
def 93621:93630 <> step_immed
R93640:93648 X86Semantics X86_RTL rtl_state rec
R93668:93670 Coq.Init.Logic <> :type_scope:x_'='_x not
R93661:93664 X86Semantics <> step def
R93671:93671 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93683:93684 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93687:93687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R93672:93679 X86Semantics X86_RTL Okay_ans constr
R93681:93682 Coq.Init.Datatypes <> tt constr
R93715:93724 X86Semantics <> step_immed def
not 93699 <> ::x_'==>'_x
R93749:93766 Coq.Relations.Relation_Operators <> <> lib
def 93780:93784 <> steps
R93789:93803 Coq.Relations.Relation_Operators <> clos_refl_trans ind
R93815:93824 X86Semantics <> step_immed def
R93805:93813 X86Semantics X86_RTL rtl_state rec
R93855:93859 X86Semantics <> steps def
not 93836 <> ::x_'==>*'_x
