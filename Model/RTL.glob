FRTL
R415:418 Coq.Lists.List <> <> lib
R436:439 Bits <> <> lib
R457:462 Coq.ZArith.ZArith <> <> lib
R480:485 Parser <> <> lib
R503:508 Coq.Strings.String <> <> lib
R526:530 Monad <> <> lib
R548:551 Maps <> <> lib
R569:577 X86Syntax <> <> lib
R595:599 Coq.Logic.Eqdep <> <> lib
def 668:672 <> size1
def 691:695 <> size4
def 714:718 <> size8
def 737:742 <> size16
def 762:767 <> size32
def 787:790 <> wint
R797:805 Bits Word wint rec
modtype 823:833 <> MACHINE_SIG
var 1040:1047 MACHINE_SIG location
R1051:1053 Coq.Init.Datatypes <> nat ind
var 1227:1235 MACHINE_SIG size_addr
R1239:1241 Coq.Init.Datatypes <> nat ind
var 1358:1367 MACHINE_SIG mach_state
var 1442:1453 MACHINE_SIG get_location
R1495:1503 Bits Word wint rec
R1481:1490 RTL MACHINE_SIG mach_state defax
R1467:1474 RTL MACHINE_SIG location defax
var 1519:1530 MACHINE_SIG set_location
R1587:1596 RTL MACHINE_SIG mach_state defax
R1573:1582 RTL MACHINE_SIG mach_state defax
R1558:1566 Bits Word wint rec
R1544:1551 RTL MACHINE_SIG location defax
R1603:1613 RTL <> <> modtype
R1678:1688 RTL <> <> mod
mod 1670:1672 <> RTL
mod 1741:1751 <> RTL.AddrIndexed
def 1769:1769 RTL.AddrIndexed t
R1774:1777 RTL RTL.AddrIndexed wint def
R1779:1787 RTL M size_addr defax
def 1805:1809 RTL.AddrIndexed index
R1813:1816 RTL RTL.AddrIndexed wint def
R1818:1826 RTL M size_addr defax
R1831:1838 Coq.NArith.BinPos <> positive ind
R1843:1856 Maps ZIndexed index def
R1859:1871 Bits Word unsigned def
prf 1887:1895 RTL.AddrIndexed index_inj
R1952:1954 Coq.Init.Logic <> :type_scope:x_'='_x not
R1937:1939 Coq.Init.Logic <> :type_scope:x_'='_x not
R1930:1934 RTL RTL.AddrIndexed index def
R1940:1944 RTL RTL.AddrIndexed index def
R1913:1916 RTL RTL.AddrIndexed wint def
R1918:1926 RTL M size_addr defax
R1913:1916 RTL RTL.AddrIndexed wint def
R1918:1926 RTL M size_addr defax
R2108:2125 Maps ZIndexed index_inj thm
R2108:2125 Maps ZIndexed index_inj thm
R2169:2192 Coqlib <> proof_irrelevance prfax
R2169:2192 Coqlib <> proof_irrelevance prfax
def 2247:2248 RTL.AddrIndexed eq
R2254:2264 Bits Word eq_dec thm
R2266:2274 RTL M size_addr defax
R2283:2293 RTL AddrIndexed <> mod
R2316:2319 Maps <> <> modtype
R2321:2331 RTL AddrIndexed <> modtype
mod 2305:2311 <> RTL.AddrMap
ind 2992:3004 RTL bit_vector_op
constr 3020:3025 RTL add_op
constr 3029:3034 RTL sub_op
constr 3038:3043 RTL mul_op
constr 3047:3053 RTL divs_op
constr 3057:3063 RTL divu_op
constr 3067:3073 RTL modu_op
constr 3077:3083 RTL mods_op
constr 3089:3094 RTL and_op
constr 3098:3102 RTL or_op
constr 3106:3111 RTL xor_op
constr 3115:3120 RTL shl_op
constr 3124:3129 RTL shr_op
constr 3133:3139 RTL shru_op
constr 3143:3148 RTL ror_op
constr 3152:3157 RTL rol_op
R3026:3026 RTL <> bit_vector_op ind
R3035:3035 RTL <> bit_vector_op ind
R3044:3044 RTL <> bit_vector_op ind
R3054:3054 RTL <> bit_vector_op ind
R3064:3064 RTL <> bit_vector_op ind
R3074:3074 RTL <> bit_vector_op ind
R3084:3084 RTL <> bit_vector_op ind
R3095:3095 RTL <> bit_vector_op ind
R3103:3103 RTL <> bit_vector_op ind
R3112:3112 RTL <> bit_vector_op ind
R3121:3121 RTL <> bit_vector_op ind
R3130:3130 RTL <> bit_vector_op ind
R3140:3140 RTL <> bit_vector_op ind
R3149:3149 RTL <> bit_vector_op ind
R3158:3158 RTL <> bit_vector_op ind
ind 3173:3179 RTL test_op
constr 3190:3194 RTL eq_op
constr 3198:3202 RTL lt_op
constr 3206:3211 RTL ltu_op
R3195:3195 RTL <> test_op ind
R3203:3203 RTL <> test_op ind
R3212:3212 RTL <> test_op ind
ind 3227:3236 RTL pseudo_reg
constr 3260:3265 RTL ps_reg
R3241:3243 Coq.Init.Datatypes <> nat ind
R3274:3283 RTL <> pseudo_reg ind
R3269:3269 Coq.ZArith.BinInt <> Z ind
ind 3301:3309 RTL rtl_instr
constr 3325:3333 RTL arith_rtl
constr 3416:3423 RTL test_rtl
constr 3506:3511 RTL if_rtl
constr 3562:3571 RTL cast_s_rtl
constr 3642:3651 RTL cast_u_rtl
constr 3722:3733 RTL load_imm_rtl
constr 3791:3801 RTL set_loc_rtl
constr 3862:3872 RTL get_loc_rtl
constr 3933:3944 RTL set_byte_rtl
constr 4018:4029 RTL get_byte_rtl
constr 4103:4112 RTL choose_rtl
constr 4158:4166 RTL error_rtl
constr 4184:4196 RTL safe_fail_rtl
R3402:3410 RTL <> rtl_instr ind
R3387:3396 RTL RTL pseudo_reg ind
R3370:3379 RTL RTL pseudo_reg ind
R3370:3379 RTL RTL pseudo_reg ind
R3349:3361 RTL RTL bit_vector_op ind
R3492:3500 RTL <> rtl_instr ind
R3473:3482 RTL RTL pseudo_reg ind
R3484:3488 RTL RTL size1 def
R3456:3465 RTL RTL pseudo_reg ind
R3456:3465 RTL RTL pseudo_reg ind
R3441:3447 RTL RTL test_op ind
R3548:3556 RTL <> rtl_instr ind
R3535:3543 RTL <> rtl_instr ind
R3515:3524 RTL RTL pseudo_reg ind
R3526:3530 RTL RTL size1 def
R3628:3636 RTL <> rtl_instr ind
R3611:3620 RTL RTL pseudo_reg ind
R3592:3601 RTL RTL pseudo_reg ind
R3708:3716 RTL <> rtl_instr ind
R3691:3700 RTL RTL pseudo_reg ind
R3672:3681 RTL RTL pseudo_reg ind
R3777:3785 RTL <> rtl_instr ind
R3761:3770 RTL RTL pseudo_reg ind
R3749:3752 RTL RTL wint def
R3848:3856 RTL <> rtl_instr ind
R3835:3842 RTL M location defax
R3818:3827 RTL RTL pseudo_reg ind
R3919:3927 RTL <> rtl_instr ind
R3904:3913 RTL RTL pseudo_reg ind
R3888:3895 RTL M location defax
R4004:4012 RTL <> rtl_instr ind
R3981:3990 RTL RTL pseudo_reg ind
R3992:4000 RTL M size_addr defax
R3958:3967 RTL RTL pseudo_reg ind
R3969:3973 RTL RTL size8 def
R4089:4097 RTL <> rtl_instr ind
R4070:4079 RTL RTL pseudo_reg ind
R4081:4085 RTL RTL size8 def
R4045:4054 RTL RTL pseudo_reg ind
R4056:4064 RTL M size_addr defax
R4144:4152 RTL <> rtl_instr ind
R4129:4138 RTL RTL pseudo_reg ind
R4170:4178 RTL <> rtl_instr ind
R4200:4208 RTL <> rtl_instr ind
def 4360:4369 RTL pseudo_env
R4400:4403 RTL RTL wint def
R4384:4393 RTL RTL pseudo_reg ind
def 4421:4429 RTL empty_env
R4433:4442 RTL RTL pseudo_env def
R4458:4466 Bits Word zero def
def 4482:4494 RTL eq_pseudo_reg
R4529:4529 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4537:4541 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4550:4550 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R4532:4534 Coq.Init.Logic <> :type_scope:x_'='_x not
R4544:4547 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R4514:4523 RTL RTL pseudo_reg ind
R4514:4523 RTL RTL pseudo_reg ind
R4601:4608 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R4601:4608 Coq.ZArith.ZArith_dec <> Z_eq_dec def
def 4699:4708 RTL update_env
R4715:4724 RTL RTL pseudo_reg ind
R4732:4735 RTL RTL wint def
R4745:4754 RTL RTL pseudo_env def
R4759:4768 RTL RTL pseudo_env def
R4813:4822 Coq.Arith.Peano_dec <> eq_nat_dec thm
R4813:4822 Coq.Arith.Peano_dec <> eq_nat_dec thm
R4848:4860 RTL RTL eq_pseudo_reg def
R4848:4860 RTL RTL eq_pseudo_reg def
rec 4953:4958 RTL oracle
proj 4970:4980 RTL oracle_bits
proj 5013:5025 RTL oracle_offset
R4999:5002 RTL RTL wint def
R4994:4994 Coq.ZArith.BinInt <> Z ind
R5029:5029 Coq.ZArith.BinInt <> Z ind
rec 5046:5054 RTL rtl_state
proj 5066:5075 RTL rtl_oracle
proj 5093:5099 RTL rtl_env
proj 5121:5134 RTL rtl_mach_state
proj 5156:5165 RTL rtl_memory
R5079:5084 RTL RTL oracle rec
R5103:5112 RTL RTL pseudo_env def
R5138:5147 RTL M mach_state defax
R5169:5177 RTL RTL.AddrMap t def
R5179:5182 Bits <> int8 def
ind 5203:5209 RTL RTL_ans
constr 5234:5241 RTL Fail_ans
constr 5259:5270 RTL SafeFail_ans
constr 5288:5295 RTL Okay_ans
R5245:5251 RTL <> RTL_ans ind
R5274:5280 RTL <> RTL_ans ind
R5304:5310 RTL <> RTL_ans ind
def 5329:5331 RTL RTL
R5367:5369 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5358:5364 RTL RTL RTL_ans ind
R5370:5378 RTL RTL rtl_state rec
R5344:5352 RTL RTL rtl_state rec
inst 5394:5402 RTL RTL_monad
R5406:5410 Monad <> Monad class
R5412:5414 RTL RTL RTL def
R5489:5492 Monad <> Bind meth
R5426:5431 Monad <> Return meth
R5466:5466 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5477:5478 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5481:5481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5467:5474 RTL RTL Okay_ans constr
R5452:5460 RTL RTL rtl_state rec
R5581:5581 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5592:5593 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5597:5597 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5582:5589 RTL RTL Okay_ans constr
R5620:5620 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5629:5630 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5634:5634 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5621:5628 RTL RTL Fail_ans constr
R5639:5639 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5650:5651 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5655:5655 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5640:5647 RTL RTL Fail_ans constr
R5667:5667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5680:5681 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5685:5685 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5668:5679 RTL RTL SafeFail_ans constr
R5690:5690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5705:5706 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5710:5710 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5691:5702 RTL RTL SafeFail_ans constr
R5534:5542 RTL RTL rtl_state rec
R5523:5525 RTL RTL RTL def
R5508:5510 RTL RTL RTL def
R5744:5764 Coqlib <> extensionality prfax
R5744:5764 Coqlib <> extensionality prfax
R5790:5810 Coqlib <> extensionality prfax
R5790:5810 Coqlib <> extensionality prfax
R5880:5900 Coqlib <> extensionality prfax
R5880:5900 Coqlib <> extensionality prfax
def 5982:5985 RTL Fail
R5991:5993 RTL RTL RTL def
R6010:6010 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6021:6021 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6024:6024 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6011:6018 RTL RTL Fail_ans constr
def 6040:6047 RTL SafeFail
R6053:6055 RTL RTL RTL def
R6072:6072 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6087:6087 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6090:6090 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6073:6084 RTL RTL SafeFail_ans constr
def 6107:6115 RTL flush_env
R6119:6121 RTL RTL RTL def
R6123:6126 Coq.Init.Datatypes <> unit ind
R6145:6145 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6157:6161 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6362:6365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6146:6153 RTL RTL Okay_ans constr
R6155:6156 Coq.Init.Datatypes <> tt constr
R6162:6361 RTL RTL Build_rtl_state constr
R6349:6358 RTL RTL rtl_memory proj
R6287:6300 RTL RTL rtl_mach_state proj
R6231:6239 RTL RTL empty_env def
R6176:6185 RTL RTL rtl_oracle proj
def 6381:6386 RTL set_ps
R6393:6402 RTL RTL pseudo_reg ind
R6410:6413 RTL RTL wint def
R6420:6422 RTL RTL RTL def
R6424:6427 Coq.Init.Datatypes <> unit ind
R6447:6447 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6459:6463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6683:6686 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6448:6455 RTL RTL Okay_ans constr
R6457:6458 Coq.Init.Datatypes <> tt constr
R6464:6682 RTL RTL Build_rtl_state constr
R6670:6679 RTL RTL rtl_memory proj
R6608:6621 RTL RTL rtl_mach_state proj
R6533:6542 RTL RTL update_env def
R6549:6555 RTL RTL rtl_env proj
R6478:6487 RTL RTL rtl_oracle proj
def 6702:6708 RTL set_loc
R6715:6722 RTL M location defax
R6730:6733 RTL RTL wint def
R6740:6742 RTL RTL RTL def
R6744:6747 Coq.Init.Datatypes <> unit ind
R6767:6767 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6779:6783 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7006:7009 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6768:6775 RTL RTL Okay_ans constr
R6777:6778 Coq.Init.Datatypes <> tt constr
R6784:7005 RTL RTL Build_rtl_state constr
R6993:7002 RTL RTL rtl_memory proj
R6912:6923 RTL M set_location defax
R6930:6943 RTL RTL rtl_mach_state proj
R6853:6859 RTL RTL rtl_env proj
R6798:6807 RTL RTL rtl_oracle proj
def 7025:7032 RTL set_byte
R7040:7043 RTL RTL wint def
R7045:7053 RTL M size_addr defax
R7059:7062 RTL RTL wint def
R7064:7068 RTL RTL size8 def
R7073:7075 RTL RTL RTL def
R7077:7080 Coq.Init.Datatypes <> unit ind
R7100:7100 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7112:7116 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7340:7343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7101:7108 RTL RTL Okay_ans constr
R7110:7111 Coq.Init.Datatypes <> tt constr
R7117:7339 RTL RTL Build_rtl_state constr
R7306:7316 RTL RTL.AddrMap set def
R7326:7335 RTL RTL rtl_memory proj
R7245:7258 RTL RTL rtl_mach_state proj
R7186:7192 RTL RTL rtl_env proj
R7131:7140 RTL RTL rtl_oracle proj
def 7359:7364 RTL get_ps
R7371:7380 RTL RTL pseudo_reg ind
R7387:7389 RTL RTL RTL def
R7392:7395 RTL RTL wint def
R7418:7418 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7442:7443 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7446:7446 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7419:7426 RTL RTL Okay_ans constr
R7429:7435 RTL RTL rtl_env proj
def 7462:7468 RTL get_loc
R7475:7482 RTL M location defax
R7489:7491 RTL RTL RTL def
R7494:7497 RTL RTL wint def
R7519:7519 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7565:7566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7569:7569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7520:7527 RTL RTL Okay_ans constr
R7530:7541 RTL M get_location defax
R7546:7559 RTL RTL rtl_mach_state proj
def 7585:7592 RTL get_byte
R7600:7603 RTL RTL wint def
R7605:7613 RTL M size_addr defax
R7618:7620 RTL RTL RTL def
R7623:7626 RTL RTL wint def
R7628:7632 RTL RTL size8 def
R7653:7653 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7697:7698 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7701:7701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7654:7661 RTL RTL Okay_ans constr
R7664:7674 RTL RTL.AddrMap get def
R7682:7691 RTL RTL rtl_memory proj
def 7718:7728 RTL choose_bits
R7733:7735 Coq.Init.Datatypes <> nat ind
R7740:7742 RTL RTL RTL def
R7745:7748 RTL RTL wint def
R7905:7905 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7950:7965 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8114:8117 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7906:7913 RTL RTL Okay_ans constr
R7916:7926 RTL RTL oracle_bits proj
R7933:7945 RTL RTL oracle_offset proj
R7966:8113 RTL RTL Build_rtl_state constr
R8101:8110 RTL RTL rtl_memory proj
R8054:8067 RTL RTL rtl_mach_state proj
R8009:8015 RTL RTL rtl_env proj
R7824:7889 RTL RTL Build_oracle constr
R7886:7888 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R7871:7883 RTL RTL oracle_offset proj
R7839:7849 RTL RTL oracle_bits proj
R7787:7796 RTL RTL rtl_oracle proj
def 8136:8147 RTL interp_arith
R8154:8166 RTL RTL bit_vector_op ind
R8175:8178 RTL RTL wint def
R8185:8188 RTL RTL wint def
R8222:8227 RTL RTL add_op constr
R8232:8239 Bits Word add def
R8255:8260 RTL RTL sub_op constr
R8265:8272 Bits Word sub def
R8288:8293 RTL RTL mul_op constr
R8298:8305 Bits Word mul def
R8321:8327 RTL RTL divs_op constr
R8332:8340 Bits Word divs def
R8356:8362 RTL RTL divu_op constr
R8367:8375 Bits Word divu def
R8391:8397 RTL RTL modu_op constr
R8402:8410 Bits Word modu def
R8426:8432 RTL RTL mods_op constr
R8437:8445 Bits Word mods def
R8461:8466 RTL RTL and_op constr
R8471:8478 Bits Word and def
R8494:8498 RTL RTL or_op constr
R8503:8509 Bits Word or def
R8525:8530 RTL RTL xor_op constr
R8535:8542 Bits Word xor def
R8558:8563 RTL RTL shl_op constr
R8568:8575 Bits Word shl def
R8591:8596 RTL RTL shr_op constr
R8601:8608 Bits Word shr def
R8624:8630 RTL RTL shru_op constr
R8635:8643 Bits Word shru def
R8659:8664 RTL RTL ror_op constr
R8669:8676 Bits Word ror def
R8692:8697 RTL RTL rol_op constr
R8702:8709 Bits Word rol def
def 8740:8750 RTL interp_test
R8757:8763 RTL RTL test_op ind
R8772:8775 RTL RTL wint def
R8782:8785 RTL RTL wint def
R8787:8791 RTL RTL size1 def
R8827:8831 RTL RTL eq_op constr
R8836:8842 Bits Word eq def
R8859:8863 RTL RTL lt_op constr
R8868:8874 Bits Word lt def
R8890:8895 RTL RTL ltu_op constr
R8900:8907 Bits Word ltu def
R8947:8955 Bits Word zero def
R8933:8940 Bits Word one def
def 9003:9012 RTL interp_rtl
R9021:9029 RTL RTL rtl_instr ind
R9034:9036 RTL RTL RTL def
R9038:9041 Coq.Init.Datatypes <> unit ind
R9077:9085 RTL RTL arith_rtl constr
R9114:9117 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9127:9129 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9118:9123 RTL RTL get_ps def
R9132:9135 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9145:9147 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9136:9141 RTL RTL get_ps def
R9148:9153 RTL RTL set_ps def
R9159:9170 RTL RTL interp_arith def
R9189:9196 RTL RTL test_rtl constr
R9225:9228 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9238:9240 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9229:9234 RTL RTL get_ps def
R9243:9246 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9256:9258 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9247:9252 RTL RTL get_ps def
R9259:9264 RTL RTL set_ps def
R9270:9280 RTL RTL interp_test def
R9299:9304 RTL RTL if_rtl constr
R9323:9326 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9335:9337 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9327:9332 RTL RTL get_ps def
R9342:9348 Bits Word eq def
R9352:9359 Bits Word one def
R9385:9388 Monad <> :monad_scope:'ret'_x not
R9389:9390 Coq.Init.Datatypes <> tt constr
R9367:9376 RTL <> interp_rtl def
R9400:9409 RTL RTL cast_s_rtl constr
R9436:9439 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9449:9460 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9440:9445 RTL RTL get_ps def
R9461:9466 RTL RTL set_ps def
R9472:9480 Bits Word repr def
R9483:9493 Bits Word signed def
R9507:9516 RTL RTL cast_u_rtl constr
R9543:9546 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9556:9567 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9547:9552 RTL RTL get_ps def
R9568:9573 RTL RTL set_ps def
R9579:9587 Bits Word repr def
R9590:9602 Bits Word unsigned def
R9616:9627 RTL RTL load_imm_rtl constr
R9639:9644 RTL RTL set_ps def
R9659:9669 RTL RTL set_loc_rtl constr
R9682:9685 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9695:9697 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9686:9691 RTL RTL get_ps def
R9698:9704 RTL RTL set_loc def
R9718:9728 RTL RTL get_loc_rtl constr
R9741:9744 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9754:9756 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9745:9751 RTL RTL get_loc def
R9757:9762 RTL RTL set_ps def
R9777:9788 RTL RTL set_byte_rtl constr
R9802:9805 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9815:9817 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9806:9811 RTL RTL get_ps def
R9819:9822 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9834:9836 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9823:9828 RTL RTL get_ps def
R9837:9844 RTL RTL set_byte def
R9858:9869 RTL RTL get_byte_rtl constr
R9883:9886 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9898:9900 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9887:9892 RTL RTL get_ps def
R9902:9905 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9916:9918 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9906:9913 RTL RTL get_byte def
R9919:9924 RTL RTL set_ps def
R9939:9948 RTL RTL choose_rtl constr
R9959:9962 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9976:9978 Monad <> :monad_scope:x_'<-'_x_';'_x not
R9963:9973 RTL RTL choose_bits def
R9979:9984 RTL RTL set_ps def
R9999:10007 RTL RTL error_rtl constr
R10012:10015 RTL RTL Fail def
R10017:10020 Coq.Init.Datatypes <> unit ind
R10030:10042 RTL RTL safe_fail_rtl constr
R10047:10054 RTL RTL SafeFail def
R10056:10059 Coq.Init.Datatypes <> unit ind
rec 10189:10199 RTL instruction
proj 10211:10224 RTL instr_assembly
proj 10271:10279 RTL instr_rtl
R10228:10233 Coq.Strings.String <> string ind
R10283:10286 Coq.Init.Datatypes <> list ind
R10288:10296 RTL RTL rtl_instr ind
R10343:10345 RTL <> <> mod
